//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.1 版自动生成。
// 
#pragma warning disable 1591

namespace Logging_App.DataService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DataServiceSoap", Namespace="Logging_App.WebService")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StructuralObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VIEW_REQUISITION_LIST[]))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityKeyMember[]))]
    public partial class DataService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetData_井试油参数OperationCompleted;
        
        private System.Threading.SendOrPostCallback Savedata_钻井液参数OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataGList_钻井液参数OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_钻井液参数OperationCompleted;
        
        private System.Threading.SendOrPostCallback Savedata_生产参数OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataGList_生产参数OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_生产参数OperationCompleted;
        
        private System.Threading.SendOrPostCallback Savedata_套管参数OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataGList_套管参数OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_套管参数OperationCompleted;
        
        private System.Threading.SendOrPostCallback Savedata_钻头程序OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataGList_钻头程序OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_钻头程序OperationCompleted;
        
        private System.Threading.SendOrPostCallback Savedata_固井参数OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataGList_固井参数OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_固井参数OperationCompleted;
        
        private System.Threading.SendOrPostCallback Savedata_录井解释成果OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataGList_录井解释成果OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_录井解释成果OperationCompleted;
        
        private System.Threading.SendOrPostCallback Import_地层分层数据2OperationCompleted;
        
        private System.Threading.SendOrPostCallback Import_录井解释成果OperationCompleted;
        
        private System.Threading.SendOrPostCallback Savedata_地层分层数据2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataGList_地层分层数据2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_地层分层数据OperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLogTestOilOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLogSlopOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLogProduceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLogCasinOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLogCementOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLogBitProgramOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLogLoggingInterpretationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteComBaseStrataLayer2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileViewExtensionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataPushListOperationCompleted;
        
        private System.Threading.SendOrPostCallback VilidateDataPushOperationCompleted;
        
        private System.Threading.SendOrPostCallback VilidateDataPushXYOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataPushListYTHPTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataPushListXYOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileDownloadListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileDownloadDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDvdInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDvdInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDvdInfoListOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDrillIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataList_井名OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_通知单引用参数OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_计划任务书参数显示OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetList_SYS_WELL_CACHE_IDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetList_SYS_WELL_CACHE_NAMEOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetList_SYS_WELL_CACHE_TASKOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_SYS_WELL_CACHEOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_COMJOBINFOOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_WELLJOBNAMEOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataList_A12井名OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_A12作业项目OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_A12井OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_A12井筒OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_A12井身结构数据OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_A12套管下深OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_A12钻头尺寸OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_A12钻井液OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_A12钻达井深OperationCompleted;
        
        private System.Threading.SendOrPostCallback Save_SYS_WELL_DATAOperationCompleted;
        
        private System.Threading.SendOrPostCallback Save_ALL_WELL_DATAOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_A12取心数据OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_A12钻井液全性能OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_A12下套管记录OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_A12钻头使用情况信息OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_A12水泥浆信息OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_A12固井基础数据OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_A12钻井施工基础数据OperationCompleted;
        
        private System.Threading.SendOrPostCallback Save_ALL_JOB_DATAOperationCompleted;
        
        private System.Threading.SendOrPostCallback Save_A12取芯数据OperationCompleted;
        
        private System.Threading.SendOrPostCallback Save_A12钻井液全性能OperationCompleted;
        
        private System.Threading.SendOrPostCallback Save_A12套管参数OperationCompleted;
        
        private System.Threading.SendOrPostCallback Save_A12钻头使用情况信息OperationCompleted;
        
        private System.Threading.SendOrPostCallback Save_A12固井参数OperationCompleted;
        
        private System.Threading.SendOrPostCallback Save_施工总结会OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_施工总结会OperationCompleted;
        
        private System.Threading.SendOrPostCallback Save_井场班前会OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_井场班前会OperationCompleted;
        
        private System.Threading.SendOrPostCallback Save_三交会OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_三交会OperationCompleted;
        
        private System.Threading.SendOrPostCallback Savedata_取心参数OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataGList_取心参数OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_取心参数OperationCompleted;
        
        private System.Threading.SendOrPostCallback Savedata_井试油参数OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataGList_井试油参数OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataList_项目明细OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataList_井下仪器编码OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataList_车辆信息OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_测井任务通知单OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataList_放射源编码OperationCompleted;
        
        private System.Threading.SendOrPostCallback Save_作业明细OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_项目明细OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_专家指导OperationCompleted;
        
        private System.Threading.SendOrPostCallback Save_专家指导OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProcessWellJobOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProcessDataJobSourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback Save_解释处理作业OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_文档类型OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_图件类型OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_解释处理项目编码OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_解释图件编码OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataList_解释处理作业OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDefaultValue_解释处理作业OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_解释处理作业OperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDataList_综合解释成果数据OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataList_综合解释成果数据OperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDataList_页岩气解释成果数据OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataList_页岩气解释成果数据OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurveNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMapCurveInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllCurveNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDataList_固井质量评价数据OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataList_固井质量评价数据OperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDataList_测量井斜数据OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataList_测量井斜数据OperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDataList_综合解释成果曲线数据OperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCurveDataCacheOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransOldComCurveDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransOldProcessingCurveDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurveDataCacheOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurveDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCurveDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetThreePressureDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveThreePressureDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurveDataCachePageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataList_综合解释成果曲线数据OperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDataList_测井分层数据OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataList_测井分层数据OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllProcessFileByWellNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProcessFileInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelSysUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelUploadFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback CompareDataFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDataList_井眼轨迹数据OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataList_井眼轨迹数据OperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveProcessingCurveInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCurveInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurveInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProcessingCurveDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelProcessingFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveProcessingFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProcessingFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProcessDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveProcessDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLogTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLogProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteComWellBasicOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLogCoreOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchWellBasicOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveWellBasicOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWellBasicOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWellboreListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWellboreOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWellStructureOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveWellboreOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveJobInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDirllStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveGEO_DES_ITEMOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaskListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJobInfoListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJobInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDrillStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGEO_DES_ItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDrillStateListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGEO_DES_ItemListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWellComboBoxListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWellTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWellSortOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetA1DataByViewOperationCompleted;
        
        private System.Threading.SendOrPostCallback PushFileToA1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlanListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlanDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWellJobNameListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRequisitionCdListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWellBaseInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetComJobInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPredictedItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJobIDlistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetlogItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetComboxList_QueryDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRequisitionTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetComboBoxList_作业目的OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetComboBoxList_市场类型OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetComboBoxList_甲方来电单位OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetComboBoxList_执行单位OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetComboBoxList_COMBINATION_NAMEOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetComboBoxList_下井趟次号OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetComboBoxList_CurveQualityTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetComboBoxList_InterpretCenterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetComboBoxList_LogSeriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetComboBoxList_DataFormatOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetComboBoxList_AcceptanceWayOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetComboBoxList_ProcessSoftwareOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetComboBoxList_SlopPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetComboBoxList_ArchiveItemCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStaticWorkflowListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStaticWorkflowOperationCompleted;
        
        private System.Threading.SendOrPostCallback Save_Static_Work_FlowOperationCompleted;
        
        private System.Threading.SendOrPostCallback Save_测井任务通知单OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTeamListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLogTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLogModeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Save_测井任务计划书OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetComboBoxList_钻井状态OperationCompleted;
        
        private System.Threading.SendOrPostCallback Save_小队施工基本信息OperationCompleted;
        
        private System.Threading.SendOrPostCallback Save_测井现场提交信息OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorkDetailsFileNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_测井现场提交信息OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_小队施工基本信息OperationCompleted;
        
        private System.Threading.SendOrPostCallback Save_多方联席会OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetData_多方联席会OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DataService() {
            this.Url = global::Logging_App.Properties.Settings.Default.Logging_App_DataService_DataService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetData_井试油参数CompletedEventHandler GetData_井试油参数Completed;
        
        /// <remarks/>
        public event Savedata_钻井液参数CompletedEventHandler Savedata_钻井液参数Completed;
        
        /// <remarks/>
        public event GetDataGList_钻井液参数CompletedEventHandler GetDataGList_钻井液参数Completed;
        
        /// <remarks/>
        public event GetData_钻井液参数CompletedEventHandler GetData_钻井液参数Completed;
        
        /// <remarks/>
        public event Savedata_生产参数CompletedEventHandler Savedata_生产参数Completed;
        
        /// <remarks/>
        public event GetDataGList_生产参数CompletedEventHandler GetDataGList_生产参数Completed;
        
        /// <remarks/>
        public event GetData_生产参数CompletedEventHandler GetData_生产参数Completed;
        
        /// <remarks/>
        public event Savedata_套管参数CompletedEventHandler Savedata_套管参数Completed;
        
        /// <remarks/>
        public event GetDataGList_套管参数CompletedEventHandler GetDataGList_套管参数Completed;
        
        /// <remarks/>
        public event GetData_套管参数CompletedEventHandler GetData_套管参数Completed;
        
        /// <remarks/>
        public event Savedata_钻头程序CompletedEventHandler Savedata_钻头程序Completed;
        
        /// <remarks/>
        public event GetDataGList_钻头程序CompletedEventHandler GetDataGList_钻头程序Completed;
        
        /// <remarks/>
        public event GetData_钻头程序CompletedEventHandler GetData_钻头程序Completed;
        
        /// <remarks/>
        public event Savedata_固井参数CompletedEventHandler Savedata_固井参数Completed;
        
        /// <remarks/>
        public event GetDataGList_固井参数CompletedEventHandler GetDataGList_固井参数Completed;
        
        /// <remarks/>
        public event GetData_固井参数CompletedEventHandler GetData_固井参数Completed;
        
        /// <remarks/>
        public event Savedata_录井解释成果CompletedEventHandler Savedata_录井解释成果Completed;
        
        /// <remarks/>
        public event GetDataGList_录井解释成果CompletedEventHandler GetDataGList_录井解释成果Completed;
        
        /// <remarks/>
        public event GetData_录井解释成果CompletedEventHandler GetData_录井解释成果Completed;
        
        /// <remarks/>
        public event Import_地层分层数据2CompletedEventHandler Import_地层分层数据2Completed;
        
        /// <remarks/>
        public event Import_录井解释成果CompletedEventHandler Import_录井解释成果Completed;
        
        /// <remarks/>
        public event Savedata_地层分层数据2CompletedEventHandler Savedata_地层分层数据2Completed;
        
        /// <remarks/>
        public event GetDataGList_地层分层数据2CompletedEventHandler GetDataGList_地层分层数据2Completed;
        
        /// <remarks/>
        public event GetData_地层分层数据CompletedEventHandler GetData_地层分层数据Completed;
        
        /// <remarks/>
        public event DeleteLogTestOilCompletedEventHandler DeleteLogTestOilCompleted;
        
        /// <remarks/>
        public event DeleteLogSlopCompletedEventHandler DeleteLogSlopCompleted;
        
        /// <remarks/>
        public event DeleteLogProduceCompletedEventHandler DeleteLogProduceCompleted;
        
        /// <remarks/>
        public event DeleteLogCasinCompletedEventHandler DeleteLogCasinCompleted;
        
        /// <remarks/>
        public event DeleteLogCementCompletedEventHandler DeleteLogCementCompleted;
        
        /// <remarks/>
        public event DeleteLogBitProgramCompletedEventHandler DeleteLogBitProgramCompleted;
        
        /// <remarks/>
        public event DeleteLogLoggingInterpretationCompletedEventHandler DeleteLogLoggingInterpretationCompleted;
        
        /// <remarks/>
        public event DeleteComBaseStrataLayer2CompletedEventHandler DeleteComBaseStrataLayer2Completed;
        
        /// <remarks/>
        public event GetFileViewExtensionsCompletedEventHandler GetFileViewExtensionsCompleted;
        
        /// <remarks/>
        public event GetDataPushListCompletedEventHandler GetDataPushListCompleted;
        
        /// <remarks/>
        public event VilidateDataPushCompletedEventHandler VilidateDataPushCompleted;
        
        /// <remarks/>
        public event VilidateDataPushXYCompletedEventHandler VilidateDataPushXYCompleted;
        
        /// <remarks/>
        public event GetDataPushListYTHPTCompletedEventHandler GetDataPushListYTHPTCompleted;
        
        /// <remarks/>
        public event GetDataPushListXYCompletedEventHandler GetDataPushListXYCompleted;
        
        /// <remarks/>
        public event GetFileDownloadListCompletedEventHandler GetFileDownloadListCompleted;
        
        /// <remarks/>
        public event GetFileDownloadDetailsCompletedEventHandler GetFileDownloadDetailsCompleted;
        
        /// <remarks/>
        public event GetDvdInfoCompletedEventHandler GetDvdInfoCompleted;
        
        /// <remarks/>
        public event SaveDvdInfoCompletedEventHandler SaveDvdInfoCompleted;
        
        /// <remarks/>
        public event GetDvdInfoListCompletedEventHandler GetDvdInfoListCompleted;
        
        /// <remarks/>
        public event UpdateDrillIDCompletedEventHandler UpdateDrillIDCompleted;
        
        /// <remarks/>
        public event GetDataList_井名CompletedEventHandler GetDataList_井名Completed;
        
        /// <remarks/>
        public event GetData_通知单引用参数CompletedEventHandler GetData_通知单引用参数Completed;
        
        /// <remarks/>
        public event GetData_计划任务书参数显示CompletedEventHandler GetData_计划任务书参数显示Completed;
        
        /// <remarks/>
        public event GetList_SYS_WELL_CACHE_IDCompletedEventHandler GetList_SYS_WELL_CACHE_IDCompleted;
        
        /// <remarks/>
        public event GetList_SYS_WELL_CACHE_NAMECompletedEventHandler GetList_SYS_WELL_CACHE_NAMECompleted;
        
        /// <remarks/>
        public event GetList_SYS_WELL_CACHE_TASKCompletedEventHandler GetList_SYS_WELL_CACHE_TASKCompleted;
        
        /// <remarks/>
        public event Delete_SYS_WELL_CACHECompletedEventHandler Delete_SYS_WELL_CACHECompleted;
        
        /// <remarks/>
        public event GetData_COMJOBINFOCompletedEventHandler GetData_COMJOBINFOCompleted;
        
        /// <remarks/>
        public event Get_WELLJOBNAMECompletedEventHandler Get_WELLJOBNAMECompleted;
        
        /// <remarks/>
        public event GetDataList_A12井名CompletedEventHandler GetDataList_A12井名Completed;
        
        /// <remarks/>
        public event GetData_A12作业项目CompletedEventHandler GetData_A12作业项目Completed;
        
        /// <remarks/>
        public event GetData_A12井CompletedEventHandler GetData_A12井Completed;
        
        /// <remarks/>
        public event GetData_A12井筒CompletedEventHandler GetData_A12井筒Completed;
        
        /// <remarks/>
        public event GetData_A12井身结构数据CompletedEventHandler GetData_A12井身结构数据Completed;
        
        /// <remarks/>
        public event GetData_A12套管下深CompletedEventHandler GetData_A12套管下深Completed;
        
        /// <remarks/>
        public event GetData_A12钻头尺寸CompletedEventHandler GetData_A12钻头尺寸Completed;
        
        /// <remarks/>
        public event GetData_A12钻井液CompletedEventHandler GetData_A12钻井液Completed;
        
        /// <remarks/>
        public event GetData_A12钻达井深CompletedEventHandler GetData_A12钻达井深Completed;
        
        /// <remarks/>
        public event Save_SYS_WELL_DATACompletedEventHandler Save_SYS_WELL_DATACompleted;
        
        /// <remarks/>
        public event Save_ALL_WELL_DATACompletedEventHandler Save_ALL_WELL_DATACompleted;
        
        /// <remarks/>
        public event GetData_A12取心数据CompletedEventHandler GetData_A12取心数据Completed;
        
        /// <remarks/>
        public event GetData_A12钻井液全性能CompletedEventHandler GetData_A12钻井液全性能Completed;
        
        /// <remarks/>
        public event GetData_A12下套管记录CompletedEventHandler GetData_A12下套管记录Completed;
        
        /// <remarks/>
        public event GetData_A12钻头使用情况信息CompletedEventHandler GetData_A12钻头使用情况信息Completed;
        
        /// <remarks/>
        public event GetData_A12水泥浆信息CompletedEventHandler GetData_A12水泥浆信息Completed;
        
        /// <remarks/>
        public event GetData_A12固井基础数据CompletedEventHandler GetData_A12固井基础数据Completed;
        
        /// <remarks/>
        public event GetData_A12钻井施工基础数据CompletedEventHandler GetData_A12钻井施工基础数据Completed;
        
        /// <remarks/>
        public event Save_ALL_JOB_DATACompletedEventHandler Save_ALL_JOB_DATACompleted;
        
        /// <remarks/>
        public event Save_A12取芯数据CompletedEventHandler Save_A12取芯数据Completed;
        
        /// <remarks/>
        public event Save_A12钻井液全性能CompletedEventHandler Save_A12钻井液全性能Completed;
        
        /// <remarks/>
        public event Save_A12套管参数CompletedEventHandler Save_A12套管参数Completed;
        
        /// <remarks/>
        public event Save_A12钻头使用情况信息CompletedEventHandler Save_A12钻头使用情况信息Completed;
        
        /// <remarks/>
        public event Save_A12固井参数CompletedEventHandler Save_A12固井参数Completed;
        
        /// <remarks/>
        public event Save_施工总结会CompletedEventHandler Save_施工总结会Completed;
        
        /// <remarks/>
        public event GetData_施工总结会CompletedEventHandler GetData_施工总结会Completed;
        
        /// <remarks/>
        public event Save_井场班前会CompletedEventHandler Save_井场班前会Completed;
        
        /// <remarks/>
        public event GetData_井场班前会CompletedEventHandler GetData_井场班前会Completed;
        
        /// <remarks/>
        public event Save_三交会CompletedEventHandler Save_三交会Completed;
        
        /// <remarks/>
        public event GetData_三交会CompletedEventHandler GetData_三交会Completed;
        
        /// <remarks/>
        public event Savedata_取心参数CompletedEventHandler Savedata_取心参数Completed;
        
        /// <remarks/>
        public event GetDataGList_取心参数CompletedEventHandler GetDataGList_取心参数Completed;
        
        /// <remarks/>
        public event GetData_取心参数CompletedEventHandler GetData_取心参数Completed;
        
        /// <remarks/>
        public event Savedata_井试油参数CompletedEventHandler Savedata_井试油参数Completed;
        
        /// <remarks/>
        public event GetDataGList_井试油参数CompletedEventHandler GetDataGList_井试油参数Completed;
        
        /// <remarks/>
        public event GetDataList_项目明细CompletedEventHandler GetDataList_项目明细Completed;
        
        /// <remarks/>
        public event GetDataList_井下仪器编码CompletedEventHandler GetDataList_井下仪器编码Completed;
        
        /// <remarks/>
        public event GetDataList_车辆信息CompletedEventHandler GetDataList_车辆信息Completed;
        
        /// <remarks/>
        public event GetData_测井任务通知单CompletedEventHandler GetData_测井任务通知单Completed;
        
        /// <remarks/>
        public event GetDataList_放射源编码CompletedEventHandler GetDataList_放射源编码Completed;
        
        /// <remarks/>
        public event Save_作业明细CompletedEventHandler Save_作业明细Completed;
        
        /// <remarks/>
        public event GetData_项目明细CompletedEventHandler GetData_项目明细Completed;
        
        /// <remarks/>
        public event GetData_专家指导CompletedEventHandler GetData_专家指导Completed;
        
        /// <remarks/>
        public event Save_专家指导CompletedEventHandler Save_专家指导Completed;
        
        /// <remarks/>
        public event GetProcessWellJobCompletedEventHandler GetProcessWellJobCompleted;
        
        /// <remarks/>
        public event GetProcessDataJobSourceCompletedEventHandler GetProcessDataJobSourceCompleted;
        
        /// <remarks/>
        public event Save_解释处理作业CompletedEventHandler Save_解释处理作业Completed;
        
        /// <remarks/>
        public event GetData_文档类型CompletedEventHandler GetData_文档类型Completed;
        
        /// <remarks/>
        public event GetData_图件类型CompletedEventHandler GetData_图件类型Completed;
        
        /// <remarks/>
        public event GetData_解释处理项目编码CompletedEventHandler GetData_解释处理项目编码Completed;
        
        /// <remarks/>
        public event GetData_解释图件编码CompletedEventHandler GetData_解释图件编码Completed;
        
        /// <remarks/>
        public event GetDataList_解释处理作业CompletedEventHandler GetDataList_解释处理作业Completed;
        
        /// <remarks/>
        public event GetDefaultValue_解释处理作业CompletedEventHandler GetDefaultValue_解释处理作业Completed;
        
        /// <remarks/>
        public event GetData_解释处理作业CompletedEventHandler GetData_解释处理作业Completed;
        
        /// <remarks/>
        public event SaveDataList_综合解释成果数据CompletedEventHandler SaveDataList_综合解释成果数据Completed;
        
        /// <remarks/>
        public event GetDataList_综合解释成果数据CompletedEventHandler GetDataList_综合解释成果数据Completed;
        
        /// <remarks/>
        public event SaveDataList_页岩气解释成果数据CompletedEventHandler SaveDataList_页岩气解释成果数据Completed;
        
        /// <remarks/>
        public event GetDataList_页岩气解释成果数据CompletedEventHandler GetDataList_页岩气解释成果数据Completed;
        
        /// <remarks/>
        public event GetCurveNamesCompletedEventHandler GetCurveNamesCompleted;
        
        /// <remarks/>
        public event GetMapCurveInfoCompletedEventHandler GetMapCurveInfoCompleted;
        
        /// <remarks/>
        public event GetAllCurveNamesCompletedEventHandler GetAllCurveNamesCompleted;
        
        /// <remarks/>
        public event SaveDataList_固井质量评价数据CompletedEventHandler SaveDataList_固井质量评价数据Completed;
        
        /// <remarks/>
        public event GetDataList_固井质量评价数据CompletedEventHandler GetDataList_固井质量评价数据Completed;
        
        /// <remarks/>
        public event SaveDataList_测量井斜数据CompletedEventHandler SaveDataList_测量井斜数据Completed;
        
        /// <remarks/>
        public event GetDataList_测量井斜数据CompletedEventHandler GetDataList_测量井斜数据Completed;
        
        /// <remarks/>
        public event SaveDataList_综合解释成果曲线数据CompletedEventHandler SaveDataList_综合解释成果曲线数据Completed;
        
        /// <remarks/>
        public event SaveCurveDataCacheCompletedEventHandler SaveCurveDataCacheCompleted;
        
        /// <remarks/>
        public event TransOldComCurveDataCompletedEventHandler TransOldComCurveDataCompleted;
        
        /// <remarks/>
        public event TransOldProcessingCurveDataCompletedEventHandler TransOldProcessingCurveDataCompleted;
        
        /// <remarks/>
        public event GetCurveDataCacheCompletedEventHandler GetCurveDataCacheCompleted;
        
        /// <remarks/>
        public event GetCurveDataCompletedEventHandler GetCurveDataCompleted;
        
        /// <remarks/>
        public event SaveCurveDataCompletedEventHandler SaveCurveDataCompleted;
        
        /// <remarks/>
        public event GetThreePressureDataCompletedEventHandler GetThreePressureDataCompleted;
        
        /// <remarks/>
        public event SaveThreePressureDataCompletedEventHandler SaveThreePressureDataCompleted;
        
        /// <remarks/>
        public event GetCurveDataCachePageCompletedEventHandler GetCurveDataCachePageCompleted;
        
        /// <remarks/>
        public event GetDataList_综合解释成果曲线数据CompletedEventHandler GetDataList_综合解释成果曲线数据Completed;
        
        /// <remarks/>
        public event SaveDataList_测井分层数据CompletedEventHandler SaveDataList_测井分层数据Completed;
        
        /// <remarks/>
        public event GetDataList_测井分层数据CompletedEventHandler GetDataList_测井分层数据Completed;
        
        /// <remarks/>
        public event GetAllProcessFileByWellNameCompletedEventHandler GetAllProcessFileByWellNameCompleted;
        
        /// <remarks/>
        public event UpdateProcessFileInfoCompletedEventHandler UpdateProcessFileInfoCompleted;
        
        /// <remarks/>
        public event DelSysUploadCompletedEventHandler DelSysUploadCompleted;
        
        /// <remarks/>
        public event DelUploadFileCompletedEventHandler DelUploadFileCompleted;
        
        /// <remarks/>
        public event CompareDataFilesCompletedEventHandler CompareDataFilesCompleted;
        
        /// <remarks/>
        public event SaveDataList_井眼轨迹数据CompletedEventHandler SaveDataList_井眼轨迹数据Completed;
        
        /// <remarks/>
        public event GetDataList_井眼轨迹数据CompletedEventHandler GetDataList_井眼轨迹数据Completed;
        
        /// <remarks/>
        public event SaveProcessingCurveInfoCompletedEventHandler SaveProcessingCurveInfoCompleted;
        
        /// <remarks/>
        public event SaveCurveInfoCompletedEventHandler SaveCurveInfoCompleted;
        
        /// <remarks/>
        public event GetCurveInfoCompletedEventHandler GetCurveInfoCompleted;
        
        /// <remarks/>
        public event GetProcessingCurveDataCompletedEventHandler GetProcessingCurveDataCompleted;
        
        /// <remarks/>
        public event DelProcessingFileCompletedEventHandler DelProcessingFileCompleted;
        
        /// <remarks/>
        public event SaveProcessingFileCompletedEventHandler SaveProcessingFileCompleted;
        
        /// <remarks/>
        public event GetProcessingFileCompletedEventHandler GetProcessingFileCompleted;
        
        /// <remarks/>
        public event GetProcessDocumentCompletedEventHandler GetProcessDocumentCompleted;
        
        /// <remarks/>
        public event SaveProcessDocumentCompletedEventHandler SaveProcessDocumentCompleted;
        
        /// <remarks/>
        public event GetMyTaskCompletedEventHandler GetMyTaskCompleted;
        
        /// <remarks/>
        public event DeleteLogTaskCompletedEventHandler DeleteLogTaskCompleted;
        
        /// <remarks/>
        public event DeleteLogProcessCompletedEventHandler DeleteLogProcessCompleted;
        
        /// <remarks/>
        public event DeleteComWellBasicCompletedEventHandler DeleteComWellBasicCompleted;
        
        /// <remarks/>
        public event DeleteLogCoreCompletedEventHandler DeleteLogCoreCompleted;
        
        /// <remarks/>
        public event SearchWellBasicCompletedEventHandler SearchWellBasicCompleted;
        
        /// <remarks/>
        public event SaveWellBasicCompletedEventHandler SaveWellBasicCompleted;
        
        /// <remarks/>
        public event GetWellBasicCompletedEventHandler GetWellBasicCompleted;
        
        /// <remarks/>
        public event GetWellboreListCompletedEventHandler GetWellboreListCompleted;
        
        /// <remarks/>
        public event GetWellboreCompletedEventHandler GetWellboreCompleted;
        
        /// <remarks/>
        public event GetWellStructureCompletedEventHandler GetWellStructureCompleted;
        
        /// <remarks/>
        public event SaveWellboreCompletedEventHandler SaveWellboreCompleted;
        
        /// <remarks/>
        public event SaveJobInfoCompletedEventHandler SaveJobInfoCompleted;
        
        /// <remarks/>
        public event SaveDirllStateCompletedEventHandler SaveDirllStateCompleted;
        
        /// <remarks/>
        public event SaveGEO_DES_ITEMCompletedEventHandler SaveGEO_DES_ITEMCompleted;
        
        /// <remarks/>
        public event GetTaskListCompletedEventHandler GetTaskListCompleted;
        
        /// <remarks/>
        public event GetJobInfoListCompletedEventHandler GetJobInfoListCompleted;
        
        /// <remarks/>
        public event GetJobInfoCompletedEventHandler GetJobInfoCompleted;
        
        /// <remarks/>
        public event GetDrillStateCompletedEventHandler GetDrillStateCompleted;
        
        /// <remarks/>
        public event GetGEO_DES_ItemCompletedEventHandler GetGEO_DES_ItemCompleted;
        
        /// <remarks/>
        public event GetDrillStateListCompletedEventHandler GetDrillStateListCompleted;
        
        /// <remarks/>
        public event GetGEO_DES_ItemListCompletedEventHandler GetGEO_DES_ItemListCompleted;
        
        /// <remarks/>
        public event GetWellComboBoxListCompletedEventHandler GetWellComboBoxListCompleted;
        
        /// <remarks/>
        public event GetWellTypeCompletedEventHandler GetWellTypeCompleted;
        
        /// <remarks/>
        public event GetWellSortCompletedEventHandler GetWellSortCompleted;
        
        /// <remarks/>
        public event GetFileTemplateCompletedEventHandler GetFileTemplateCompleted;
        
        /// <remarks/>
        public event GetA1DataByViewCompletedEventHandler GetA1DataByViewCompleted;
        
        /// <remarks/>
        public event PushFileToA1CompletedEventHandler PushFileToA1Completed;
        
        /// <remarks/>
        public event GetPlanListCompletedEventHandler GetPlanListCompleted;
        
        /// <remarks/>
        public event GetPlanDataCompletedEventHandler GetPlanDataCompleted;
        
        /// <remarks/>
        public event GetWellJobNameListCompletedEventHandler GetWellJobNameListCompleted;
        
        /// <remarks/>
        public event GetRequisitionCdListCompletedEventHandler GetRequisitionCdListCompleted;
        
        /// <remarks/>
        public event GetWellBaseInfoCompletedEventHandler GetWellBaseInfoCompleted;
        
        /// <remarks/>
        public event GetComJobInfoCompletedEventHandler GetComJobInfoCompleted;
        
        /// <remarks/>
        public event GetPredictedItemsCompletedEventHandler GetPredictedItemsCompleted;
        
        /// <remarks/>
        public event GetJobIDlistCompletedEventHandler GetJobIDlistCompleted;
        
        /// <remarks/>
        public event GetlogItemsCompletedEventHandler GetlogItemsCompleted;
        
        /// <remarks/>
        public event GetComboxList_QueryDateCompletedEventHandler GetComboxList_QueryDateCompleted;
        
        /// <remarks/>
        public event GetRequisitionTypesCompletedEventHandler GetRequisitionTypesCompleted;
        
        /// <remarks/>
        public event GetComboBoxList_作业目的CompletedEventHandler GetComboBoxList_作业目的Completed;
        
        /// <remarks/>
        public event GetComboBoxList_市场类型CompletedEventHandler GetComboBoxList_市场类型Completed;
        
        /// <remarks/>
        public event GetComboBoxList_甲方来电单位CompletedEventHandler GetComboBoxList_甲方来电单位Completed;
        
        /// <remarks/>
        public event GetComboBoxList_执行单位CompletedEventHandler GetComboBoxList_执行单位Completed;
        
        /// <remarks/>
        public event GetComboBoxList_COMBINATION_NAMECompletedEventHandler GetComboBoxList_COMBINATION_NAMECompleted;
        
        /// <remarks/>
        public event GetComboBoxList_下井趟次号CompletedEventHandler GetComboBoxList_下井趟次号Completed;
        
        /// <remarks/>
        public event GetComboBoxList_CurveQualityTypesCompletedEventHandler GetComboBoxList_CurveQualityTypesCompleted;
        
        /// <remarks/>
        public event GetComboBoxList_InterpretCenterCompletedEventHandler GetComboBoxList_InterpretCenterCompleted;
        
        /// <remarks/>
        public event GetComboBoxList_LogSeriesCompletedEventHandler GetComboBoxList_LogSeriesCompleted;
        
        /// <remarks/>
        public event GetComboBoxList_DataFormatCompletedEventHandler GetComboBoxList_DataFormatCompleted;
        
        /// <remarks/>
        public event GetComboBoxList_AcceptanceWayCompletedEventHandler GetComboBoxList_AcceptanceWayCompleted;
        
        /// <remarks/>
        public event GetComboBoxList_ProcessSoftwareCompletedEventHandler GetComboBoxList_ProcessSoftwareCompleted;
        
        /// <remarks/>
        public event GetComboBoxList_SlopPropertiesCompletedEventHandler GetComboBoxList_SlopPropertiesCompleted;
        
        /// <remarks/>
        public event GetComboBoxList_ArchiveItemCodesCompletedEventHandler GetComboBoxList_ArchiveItemCodesCompleted;
        
        /// <remarks/>
        public event GetStaticWorkflowListCompletedEventHandler GetStaticWorkflowListCompleted;
        
        /// <remarks/>
        public event GetStaticWorkflowCompletedEventHandler GetStaticWorkflowCompleted;
        
        /// <remarks/>
        public event Save_Static_Work_FlowCompletedEventHandler Save_Static_Work_FlowCompleted;
        
        /// <remarks/>
        public event Save_测井任务通知单CompletedEventHandler Save_测井任务通知单Completed;
        
        /// <remarks/>
        public event GetTeamListCompletedEventHandler GetTeamListCompleted;
        
        /// <remarks/>
        public event GetLogTypeCompletedEventHandler GetLogTypeCompleted;
        
        /// <remarks/>
        public event GetLogModeCompletedEventHandler GetLogModeCompleted;
        
        /// <remarks/>
        public event Save_测井任务计划书CompletedEventHandler Save_测井任务计划书Completed;
        
        /// <remarks/>
        public event GetComboBoxList_钻井状态CompletedEventHandler GetComboBoxList_钻井状态Completed;
        
        /// <remarks/>
        public event Save_小队施工基本信息CompletedEventHandler Save_小队施工基本信息Completed;
        
        /// <remarks/>
        public event Save_测井现场提交信息CompletedEventHandler Save_测井现场提交信息Completed;
        
        /// <remarks/>
        public event GetWorkDetailsFileNamesCompletedEventHandler GetWorkDetailsFileNamesCompleted;
        
        /// <remarks/>
        public event GetData_测井现场提交信息CompletedEventHandler GetData_测井现场提交信息Completed;
        
        /// <remarks/>
        public event GetData_小队施工基本信息CompletedEventHandler GetData_小队施工基本信息Completed;
        
        /// <remarks/>
        public event Save_多方联席会CompletedEventHandler Save_多方联席会Completed;
        
        /// <remarks/>
        public event GetData_多方联席会CompletedEventHandler GetData_多方联席会Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_井试油参数", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_井试油参数(string TESTOILID) {
            object[] results = this.Invoke("GetData_井试油参数", new object[] {
                        TESTOILID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_井试油参数Async(string TESTOILID) {
            this.GetData_井试油参数Async(TESTOILID, null);
        }
        
        /// <remarks/>
        public void GetData_井试油参数Async(string TESTOILID, object userState) {
            if ((this.GetData_井试油参数OperationCompleted == null)) {
                this.GetData_井试油参数OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_井试油参数OperationCompleted);
            }
            this.InvokeAsync("GetData_井试油参数", new object[] {
                        TESTOILID}, this.GetData_井试油参数OperationCompleted, userState);
        }
        
        private void OnGetData_井试油参数OperationCompleted(object arg) {
            if ((this.GetData_井试油参数Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_井试油参数Completed(this, new GetData_井试油参数CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/Savedata_钻井液参数", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Savedata_钻井液参数([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data_钻井液参数) {
            object[] results = this.Invoke("Savedata_钻井液参数", new object[] {
                        data_钻井液参数});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Savedata_钻井液参数Async(byte[] data_钻井液参数) {
            this.Savedata_钻井液参数Async(data_钻井液参数, null);
        }
        
        /// <remarks/>
        public void Savedata_钻井液参数Async(byte[] data_钻井液参数, object userState) {
            if ((this.Savedata_钻井液参数OperationCompleted == null)) {
                this.Savedata_钻井液参数OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavedata_钻井液参数OperationCompleted);
            }
            this.InvokeAsync("Savedata_钻井液参数", new object[] {
                        data_钻井液参数}, this.Savedata_钻井液参数OperationCompleted, userState);
        }
        
        private void OnSavedata_钻井液参数OperationCompleted(object arg) {
            if ((this.Savedata_钻井液参数Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Savedata_钻井液参数Completed(this, new Savedata_钻井液参数CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetDataGList_钻井液参数", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataGList_钻井液参数(string string_计划任务书编号) {
            object[] results = this.Invoke("GetDataGList_钻井液参数", new object[] {
                        string_计划任务书编号});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataGList_钻井液参数Async(string string_计划任务书编号) {
            this.GetDataGList_钻井液参数Async(string_计划任务书编号, null);
        }
        
        /// <remarks/>
        public void GetDataGList_钻井液参数Async(string string_计划任务书编号, object userState) {
            if ((this.GetDataGList_钻井液参数OperationCompleted == null)) {
                this.GetDataGList_钻井液参数OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataGList_钻井液参数OperationCompleted);
            }
            this.InvokeAsync("GetDataGList_钻井液参数", new object[] {
                        string_计划任务书编号}, this.GetDataGList_钻井液参数OperationCompleted, userState);
        }
        
        private void OnGetDataGList_钻井液参数OperationCompleted(object arg) {
            if ((this.GetDataGList_钻井液参数Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataGList_钻井液参数Completed(this, new GetDataGList_钻井液参数CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_钻井液参数", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_钻井液参数(string MUDID) {
            object[] results = this.Invoke("GetData_钻井液参数", new object[] {
                        MUDID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_钻井液参数Async(string MUDID) {
            this.GetData_钻井液参数Async(MUDID, null);
        }
        
        /// <remarks/>
        public void GetData_钻井液参数Async(string MUDID, object userState) {
            if ((this.GetData_钻井液参数OperationCompleted == null)) {
                this.GetData_钻井液参数OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_钻井液参数OperationCompleted);
            }
            this.InvokeAsync("GetData_钻井液参数", new object[] {
                        MUDID}, this.GetData_钻井液参数OperationCompleted, userState);
        }
        
        private void OnGetData_钻井液参数OperationCompleted(object arg) {
            if ((this.GetData_钻井液参数Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_钻井液参数Completed(this, new GetData_钻井液参数CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/Savedata_生产参数", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Savedata_生产参数([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data_生产参数) {
            object[] results = this.Invoke("Savedata_生产参数", new object[] {
                        data_生产参数});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Savedata_生产参数Async(byte[] data_生产参数) {
            this.Savedata_生产参数Async(data_生产参数, null);
        }
        
        /// <remarks/>
        public void Savedata_生产参数Async(byte[] data_生产参数, object userState) {
            if ((this.Savedata_生产参数OperationCompleted == null)) {
                this.Savedata_生产参数OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavedata_生产参数OperationCompleted);
            }
            this.InvokeAsync("Savedata_生产参数", new object[] {
                        data_生产参数}, this.Savedata_生产参数OperationCompleted, userState);
        }
        
        private void OnSavedata_生产参数OperationCompleted(object arg) {
            if ((this.Savedata_生产参数Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Savedata_生产参数Completed(this, new Savedata_生产参数CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetDataGList_生产参数", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataGList_生产参数(string string_计划任务书编号) {
            object[] results = this.Invoke("GetDataGList_生产参数", new object[] {
                        string_计划任务书编号});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataGList_生产参数Async(string string_计划任务书编号) {
            this.GetDataGList_生产参数Async(string_计划任务书编号, null);
        }
        
        /// <remarks/>
        public void GetDataGList_生产参数Async(string string_计划任务书编号, object userState) {
            if ((this.GetDataGList_生产参数OperationCompleted == null)) {
                this.GetDataGList_生产参数OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataGList_生产参数OperationCompleted);
            }
            this.InvokeAsync("GetDataGList_生产参数", new object[] {
                        string_计划任务书编号}, this.GetDataGList_生产参数OperationCompleted, userState);
        }
        
        private void OnGetDataGList_生产参数OperationCompleted(object arg) {
            if ((this.GetDataGList_生产参数Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataGList_生产参数Completed(this, new GetDataGList_生产参数CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_生产参数", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_生产参数(string WORKID) {
            object[] results = this.Invoke("GetData_生产参数", new object[] {
                        WORKID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_生产参数Async(string WORKID) {
            this.GetData_生产参数Async(WORKID, null);
        }
        
        /// <remarks/>
        public void GetData_生产参数Async(string WORKID, object userState) {
            if ((this.GetData_生产参数OperationCompleted == null)) {
                this.GetData_生产参数OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_生产参数OperationCompleted);
            }
            this.InvokeAsync("GetData_生产参数", new object[] {
                        WORKID}, this.GetData_生产参数OperationCompleted, userState);
        }
        
        private void OnGetData_生产参数OperationCompleted(object arg) {
            if ((this.GetData_生产参数Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_生产参数Completed(this, new GetData_生产参数CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/Savedata_套管参数", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Savedata_套管参数([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data_套管参数) {
            object[] results = this.Invoke("Savedata_套管参数", new object[] {
                        data_套管参数});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Savedata_套管参数Async(byte[] data_套管参数) {
            this.Savedata_套管参数Async(data_套管参数, null);
        }
        
        /// <remarks/>
        public void Savedata_套管参数Async(byte[] data_套管参数, object userState) {
            if ((this.Savedata_套管参数OperationCompleted == null)) {
                this.Savedata_套管参数OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavedata_套管参数OperationCompleted);
            }
            this.InvokeAsync("Savedata_套管参数", new object[] {
                        data_套管参数}, this.Savedata_套管参数OperationCompleted, userState);
        }
        
        private void OnSavedata_套管参数OperationCompleted(object arg) {
            if ((this.Savedata_套管参数Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Savedata_套管参数Completed(this, new Savedata_套管参数CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetDataGList_套管参数", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataGList_套管参数(string string_计划任务书编号) {
            object[] results = this.Invoke("GetDataGList_套管参数", new object[] {
                        string_计划任务书编号});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataGList_套管参数Async(string string_计划任务书编号) {
            this.GetDataGList_套管参数Async(string_计划任务书编号, null);
        }
        
        /// <remarks/>
        public void GetDataGList_套管参数Async(string string_计划任务书编号, object userState) {
            if ((this.GetDataGList_套管参数OperationCompleted == null)) {
                this.GetDataGList_套管参数OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataGList_套管参数OperationCompleted);
            }
            this.InvokeAsync("GetDataGList_套管参数", new object[] {
                        string_计划任务书编号}, this.GetDataGList_套管参数OperationCompleted, userState);
        }
        
        private void OnGetDataGList_套管参数OperationCompleted(object arg) {
            if ((this.GetDataGList_套管参数Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataGList_套管参数Completed(this, new GetDataGList_套管参数CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_套管参数", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_套管参数(string CASINID) {
            object[] results = this.Invoke("GetData_套管参数", new object[] {
                        CASINID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_套管参数Async(string CASINID) {
            this.GetData_套管参数Async(CASINID, null);
        }
        
        /// <remarks/>
        public void GetData_套管参数Async(string CASINID, object userState) {
            if ((this.GetData_套管参数OperationCompleted == null)) {
                this.GetData_套管参数OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_套管参数OperationCompleted);
            }
            this.InvokeAsync("GetData_套管参数", new object[] {
                        CASINID}, this.GetData_套管参数OperationCompleted, userState);
        }
        
        private void OnGetData_套管参数OperationCompleted(object arg) {
            if ((this.GetData_套管参数Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_套管参数Completed(this, new GetData_套管参数CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/Savedata_钻头程序", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Savedata_钻头程序([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data_钻头程序) {
            object[] results = this.Invoke("Savedata_钻头程序", new object[] {
                        data_钻头程序});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Savedata_钻头程序Async(byte[] data_钻头程序) {
            this.Savedata_钻头程序Async(data_钻头程序, null);
        }
        
        /// <remarks/>
        public void Savedata_钻头程序Async(byte[] data_钻头程序, object userState) {
            if ((this.Savedata_钻头程序OperationCompleted == null)) {
                this.Savedata_钻头程序OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavedata_钻头程序OperationCompleted);
            }
            this.InvokeAsync("Savedata_钻头程序", new object[] {
                        data_钻头程序}, this.Savedata_钻头程序OperationCompleted, userState);
        }
        
        private void OnSavedata_钻头程序OperationCompleted(object arg) {
            if ((this.Savedata_钻头程序Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Savedata_钻头程序Completed(this, new Savedata_钻头程序CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetDataGList_钻头程序", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataGList_钻头程序(string string_计划任务书编号) {
            object[] results = this.Invoke("GetDataGList_钻头程序", new object[] {
                        string_计划任务书编号});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataGList_钻头程序Async(string string_计划任务书编号) {
            this.GetDataGList_钻头程序Async(string_计划任务书编号, null);
        }
        
        /// <remarks/>
        public void GetDataGList_钻头程序Async(string string_计划任务书编号, object userState) {
            if ((this.GetDataGList_钻头程序OperationCompleted == null)) {
                this.GetDataGList_钻头程序OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataGList_钻头程序OperationCompleted);
            }
            this.InvokeAsync("GetDataGList_钻头程序", new object[] {
                        string_计划任务书编号}, this.GetDataGList_钻头程序OperationCompleted, userState);
        }
        
        private void OnGetDataGList_钻头程序OperationCompleted(object arg) {
            if ((this.GetDataGList_钻头程序Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataGList_钻头程序Completed(this, new GetDataGList_钻头程序CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_钻头程序", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_钻头程序(string BITID) {
            object[] results = this.Invoke("GetData_钻头程序", new object[] {
                        BITID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_钻头程序Async(string BITID) {
            this.GetData_钻头程序Async(BITID, null);
        }
        
        /// <remarks/>
        public void GetData_钻头程序Async(string BITID, object userState) {
            if ((this.GetData_钻头程序OperationCompleted == null)) {
                this.GetData_钻头程序OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_钻头程序OperationCompleted);
            }
            this.InvokeAsync("GetData_钻头程序", new object[] {
                        BITID}, this.GetData_钻头程序OperationCompleted, userState);
        }
        
        private void OnGetData_钻头程序OperationCompleted(object arg) {
            if ((this.GetData_钻头程序Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_钻头程序Completed(this, new GetData_钻头程序CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/Savedata_固井参数", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Savedata_固井参数([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data_固井参数) {
            object[] results = this.Invoke("Savedata_固井参数", new object[] {
                        data_固井参数});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Savedata_固井参数Async(byte[] data_固井参数) {
            this.Savedata_固井参数Async(data_固井参数, null);
        }
        
        /// <remarks/>
        public void Savedata_固井参数Async(byte[] data_固井参数, object userState) {
            if ((this.Savedata_固井参数OperationCompleted == null)) {
                this.Savedata_固井参数OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavedata_固井参数OperationCompleted);
            }
            this.InvokeAsync("Savedata_固井参数", new object[] {
                        data_固井参数}, this.Savedata_固井参数OperationCompleted, userState);
        }
        
        private void OnSavedata_固井参数OperationCompleted(object arg) {
            if ((this.Savedata_固井参数Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Savedata_固井参数Completed(this, new Savedata_固井参数CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetDataGList_固井参数", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataGList_固井参数(string string_计划任务书编号) {
            object[] results = this.Invoke("GetDataGList_固井参数", new object[] {
                        string_计划任务书编号});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataGList_固井参数Async(string string_计划任务书编号) {
            this.GetDataGList_固井参数Async(string_计划任务书编号, null);
        }
        
        /// <remarks/>
        public void GetDataGList_固井参数Async(string string_计划任务书编号, object userState) {
            if ((this.GetDataGList_固井参数OperationCompleted == null)) {
                this.GetDataGList_固井参数OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataGList_固井参数OperationCompleted);
            }
            this.InvokeAsync("GetDataGList_固井参数", new object[] {
                        string_计划任务书编号}, this.GetDataGList_固井参数OperationCompleted, userState);
        }
        
        private void OnGetDataGList_固井参数OperationCompleted(object arg) {
            if ((this.GetDataGList_固井参数Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataGList_固井参数Completed(this, new GetDataGList_固井参数CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_固井参数", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_固井参数(string CEMENTID) {
            object[] results = this.Invoke("GetData_固井参数", new object[] {
                        CEMENTID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_固井参数Async(string CEMENTID) {
            this.GetData_固井参数Async(CEMENTID, null);
        }
        
        /// <remarks/>
        public void GetData_固井参数Async(string CEMENTID, object userState) {
            if ((this.GetData_固井参数OperationCompleted == null)) {
                this.GetData_固井参数OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_固井参数OperationCompleted);
            }
            this.InvokeAsync("GetData_固井参数", new object[] {
                        CEMENTID}, this.GetData_固井参数OperationCompleted, userState);
        }
        
        private void OnGetData_固井参数OperationCompleted(object arg) {
            if ((this.GetData_固井参数Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_固井参数Completed(this, new GetData_固井参数CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/Savedata_录井解释成果", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Savedata_录井解释成果([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data_录井解释成果) {
            object[] results = this.Invoke("Savedata_录井解释成果", new object[] {
                        data_录井解释成果});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Savedata_录井解释成果Async(byte[] data_录井解释成果) {
            this.Savedata_录井解释成果Async(data_录井解释成果, null);
        }
        
        /// <remarks/>
        public void Savedata_录井解释成果Async(byte[] data_录井解释成果, object userState) {
            if ((this.Savedata_录井解释成果OperationCompleted == null)) {
                this.Savedata_录井解释成果OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavedata_录井解释成果OperationCompleted);
            }
            this.InvokeAsync("Savedata_录井解释成果", new object[] {
                        data_录井解释成果}, this.Savedata_录井解释成果OperationCompleted, userState);
        }
        
        private void OnSavedata_录井解释成果OperationCompleted(object arg) {
            if ((this.Savedata_录井解释成果Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Savedata_录井解释成果Completed(this, new Savedata_录井解释成果CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetDataGList_录井解释成果", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataGList_录井解释成果(string string_计划任务书编号) {
            object[] results = this.Invoke("GetDataGList_录井解释成果", new object[] {
                        string_计划任务书编号});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataGList_录井解释成果Async(string string_计划任务书编号) {
            this.GetDataGList_录井解释成果Async(string_计划任务书编号, null);
        }
        
        /// <remarks/>
        public void GetDataGList_录井解释成果Async(string string_计划任务书编号, object userState) {
            if ((this.GetDataGList_录井解释成果OperationCompleted == null)) {
                this.GetDataGList_录井解释成果OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataGList_录井解释成果OperationCompleted);
            }
            this.InvokeAsync("GetDataGList_录井解释成果", new object[] {
                        string_计划任务书编号}, this.GetDataGList_录井解释成果OperationCompleted, userState);
        }
        
        private void OnGetDataGList_录井解释成果OperationCompleted(object arg) {
            if ((this.GetDataGList_录井解释成果Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataGList_录井解释成果Completed(this, new GetDataGList_录井解释成果CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_录井解释成果", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_录井解释成果(string INTERPRETATION_CD) {
            object[] results = this.Invoke("GetData_录井解释成果", new object[] {
                        INTERPRETATION_CD});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_录井解释成果Async(string INTERPRETATION_CD) {
            this.GetData_录井解释成果Async(INTERPRETATION_CD, null);
        }
        
        /// <remarks/>
        public void GetData_录井解释成果Async(string INTERPRETATION_CD, object userState) {
            if ((this.GetData_录井解释成果OperationCompleted == null)) {
                this.GetData_录井解释成果OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_录井解释成果OperationCompleted);
            }
            this.InvokeAsync("GetData_录井解释成果", new object[] {
                        INTERPRETATION_CD}, this.GetData_录井解释成果OperationCompleted, userState);
        }
        
        private void OnGetData_录井解释成果OperationCompleted(object arg) {
            if ((this.GetData_录井解释成果Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_录井解释成果Completed(this, new GetData_录井解释成果CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/Import_地层分层数据2", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Import_地层分层数据2(string job_plan_cd, string requistion_cd, System.Data.DataTable data) {
            object[] results = this.Invoke("Import_地层分层数据2", new object[] {
                        job_plan_cd,
                        requistion_cd,
                        data});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Import_地层分层数据2Async(string job_plan_cd, string requistion_cd, System.Data.DataTable data) {
            this.Import_地层分层数据2Async(job_plan_cd, requistion_cd, data, null);
        }
        
        /// <remarks/>
        public void Import_地层分层数据2Async(string job_plan_cd, string requistion_cd, System.Data.DataTable data, object userState) {
            if ((this.Import_地层分层数据2OperationCompleted == null)) {
                this.Import_地层分层数据2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnImport_地层分层数据2OperationCompleted);
            }
            this.InvokeAsync("Import_地层分层数据2", new object[] {
                        job_plan_cd,
                        requistion_cd,
                        data}, this.Import_地层分层数据2OperationCompleted, userState);
        }
        
        private void OnImport_地层分层数据2OperationCompleted(object arg) {
            if ((this.Import_地层分层数据2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Import_地层分层数据2Completed(this, new Import_地层分层数据2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/Import_录井解释成果", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Import_录井解释成果(string job_plan_cd, string requistion_cd, System.Data.DataTable data) {
            object[] results = this.Invoke("Import_录井解释成果", new object[] {
                        job_plan_cd,
                        requistion_cd,
                        data});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Import_录井解释成果Async(string job_plan_cd, string requistion_cd, System.Data.DataTable data) {
            this.Import_录井解释成果Async(job_plan_cd, requistion_cd, data, null);
        }
        
        /// <remarks/>
        public void Import_录井解释成果Async(string job_plan_cd, string requistion_cd, System.Data.DataTable data, object userState) {
            if ((this.Import_录井解释成果OperationCompleted == null)) {
                this.Import_录井解释成果OperationCompleted = new System.Threading.SendOrPostCallback(this.OnImport_录井解释成果OperationCompleted);
            }
            this.InvokeAsync("Import_录井解释成果", new object[] {
                        job_plan_cd,
                        requistion_cd,
                        data}, this.Import_录井解释成果OperationCompleted, userState);
        }
        
        private void OnImport_录井解释成果OperationCompleted(object arg) {
            if ((this.Import_录井解释成果Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Import_录井解释成果Completed(this, new Import_录井解释成果CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/Savedata_地层分层数据2", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Savedata_地层分层数据2([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data_地层分层数据2) {
            object[] results = this.Invoke("Savedata_地层分层数据2", new object[] {
                        data_地层分层数据2});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Savedata_地层分层数据2Async(byte[] data_地层分层数据2) {
            this.Savedata_地层分层数据2Async(data_地层分层数据2, null);
        }
        
        /// <remarks/>
        public void Savedata_地层分层数据2Async(byte[] data_地层分层数据2, object userState) {
            if ((this.Savedata_地层分层数据2OperationCompleted == null)) {
                this.Savedata_地层分层数据2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavedata_地层分层数据2OperationCompleted);
            }
            this.InvokeAsync("Savedata_地层分层数据2", new object[] {
                        data_地层分层数据2}, this.Savedata_地层分层数据2OperationCompleted, userState);
        }
        
        private void OnSavedata_地层分层数据2OperationCompleted(object arg) {
            if ((this.Savedata_地层分层数据2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Savedata_地层分层数据2Completed(this, new Savedata_地层分层数据2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetDataGList_地层分层数据2", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataGList_地层分层数据2(string string_计划任务书编号) {
            object[] results = this.Invoke("GetDataGList_地层分层数据2", new object[] {
                        string_计划任务书编号});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataGList_地层分层数据2Async(string string_计划任务书编号) {
            this.GetDataGList_地层分层数据2Async(string_计划任务书编号, null);
        }
        
        /// <remarks/>
        public void GetDataGList_地层分层数据2Async(string string_计划任务书编号, object userState) {
            if ((this.GetDataGList_地层分层数据2OperationCompleted == null)) {
                this.GetDataGList_地层分层数据2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataGList_地层分层数据2OperationCompleted);
            }
            this.InvokeAsync("GetDataGList_地层分层数据2", new object[] {
                        string_计划任务书编号}, this.GetDataGList_地层分层数据2OperationCompleted, userState);
        }
        
        private void OnGetDataGList_地层分层数据2OperationCompleted(object arg) {
            if ((this.GetDataGList_地层分层数据2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataGList_地层分层数据2Completed(this, new GetDataGList_地层分层数据2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_地层分层数据", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_地层分层数据(int SEQ_NO) {
            object[] results = this.Invoke("GetData_地层分层数据", new object[] {
                        SEQ_NO});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_地层分层数据Async(int SEQ_NO) {
            this.GetData_地层分层数据Async(SEQ_NO, null);
        }
        
        /// <remarks/>
        public void GetData_地层分层数据Async(int SEQ_NO, object userState) {
            if ((this.GetData_地层分层数据OperationCompleted == null)) {
                this.GetData_地层分层数据OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_地层分层数据OperationCompleted);
            }
            this.InvokeAsync("GetData_地层分层数据", new object[] {
                        SEQ_NO}, this.GetData_地层分层数据OperationCompleted, userState);
        }
        
        private void OnGetData_地层分层数据OperationCompleted(object arg) {
            if ((this.GetData_地层分层数据Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_地层分层数据Completed(this, new GetData_地层分层数据CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/DeleteLogTestOil", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteLogTestOil(string TESTOIL_ID) {
            object[] results = this.Invoke("DeleteLogTestOil", new object[] {
                        TESTOIL_ID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLogTestOilAsync(string TESTOIL_ID) {
            this.DeleteLogTestOilAsync(TESTOIL_ID, null);
        }
        
        /// <remarks/>
        public void DeleteLogTestOilAsync(string TESTOIL_ID, object userState) {
            if ((this.DeleteLogTestOilOperationCompleted == null)) {
                this.DeleteLogTestOilOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLogTestOilOperationCompleted);
            }
            this.InvokeAsync("DeleteLogTestOil", new object[] {
                        TESTOIL_ID}, this.DeleteLogTestOilOperationCompleted, userState);
        }
        
        private void OnDeleteLogTestOilOperationCompleted(object arg) {
            if ((this.DeleteLogTestOilCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLogTestOilCompleted(this, new DeleteLogTestOilCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/DeleteLogSlop", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteLogSlop(string MUD_ID) {
            object[] results = this.Invoke("DeleteLogSlop", new object[] {
                        MUD_ID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLogSlopAsync(string MUD_ID) {
            this.DeleteLogSlopAsync(MUD_ID, null);
        }
        
        /// <remarks/>
        public void DeleteLogSlopAsync(string MUD_ID, object userState) {
            if ((this.DeleteLogSlopOperationCompleted == null)) {
                this.DeleteLogSlopOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLogSlopOperationCompleted);
            }
            this.InvokeAsync("DeleteLogSlop", new object[] {
                        MUD_ID}, this.DeleteLogSlopOperationCompleted, userState);
        }
        
        private void OnDeleteLogSlopOperationCompleted(object arg) {
            if ((this.DeleteLogSlopCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLogSlopCompleted(this, new DeleteLogSlopCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/DeleteLogProduce", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteLogProduce(string WORK_ID) {
            object[] results = this.Invoke("DeleteLogProduce", new object[] {
                        WORK_ID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLogProduceAsync(string WORK_ID) {
            this.DeleteLogProduceAsync(WORK_ID, null);
        }
        
        /// <remarks/>
        public void DeleteLogProduceAsync(string WORK_ID, object userState) {
            if ((this.DeleteLogProduceOperationCompleted == null)) {
                this.DeleteLogProduceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLogProduceOperationCompleted);
            }
            this.InvokeAsync("DeleteLogProduce", new object[] {
                        WORK_ID}, this.DeleteLogProduceOperationCompleted, userState);
        }
        
        private void OnDeleteLogProduceOperationCompleted(object arg) {
            if ((this.DeleteLogProduceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLogProduceCompleted(this, new DeleteLogProduceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/DeleteLogCasin", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteLogCasin(string CASIN_ID) {
            object[] results = this.Invoke("DeleteLogCasin", new object[] {
                        CASIN_ID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLogCasinAsync(string CASIN_ID) {
            this.DeleteLogCasinAsync(CASIN_ID, null);
        }
        
        /// <remarks/>
        public void DeleteLogCasinAsync(string CASIN_ID, object userState) {
            if ((this.DeleteLogCasinOperationCompleted == null)) {
                this.DeleteLogCasinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLogCasinOperationCompleted);
            }
            this.InvokeAsync("DeleteLogCasin", new object[] {
                        CASIN_ID}, this.DeleteLogCasinOperationCompleted, userState);
        }
        
        private void OnDeleteLogCasinOperationCompleted(object arg) {
            if ((this.DeleteLogCasinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLogCasinCompleted(this, new DeleteLogCasinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/DeleteLogCement", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteLogCement(string CEMENT_ID) {
            object[] results = this.Invoke("DeleteLogCement", new object[] {
                        CEMENT_ID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLogCementAsync(string CEMENT_ID) {
            this.DeleteLogCementAsync(CEMENT_ID, null);
        }
        
        /// <remarks/>
        public void DeleteLogCementAsync(string CEMENT_ID, object userState) {
            if ((this.DeleteLogCementOperationCompleted == null)) {
                this.DeleteLogCementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLogCementOperationCompleted);
            }
            this.InvokeAsync("DeleteLogCement", new object[] {
                        CEMENT_ID}, this.DeleteLogCementOperationCompleted, userState);
        }
        
        private void OnDeleteLogCementOperationCompleted(object arg) {
            if ((this.DeleteLogCementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLogCementCompleted(this, new DeleteLogCementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/DeleteLogBitProgram", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteLogBitProgram(string BIT_ID) {
            object[] results = this.Invoke("DeleteLogBitProgram", new object[] {
                        BIT_ID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLogBitProgramAsync(string BIT_ID) {
            this.DeleteLogBitProgramAsync(BIT_ID, null);
        }
        
        /// <remarks/>
        public void DeleteLogBitProgramAsync(string BIT_ID, object userState) {
            if ((this.DeleteLogBitProgramOperationCompleted == null)) {
                this.DeleteLogBitProgramOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLogBitProgramOperationCompleted);
            }
            this.InvokeAsync("DeleteLogBitProgram", new object[] {
                        BIT_ID}, this.DeleteLogBitProgramOperationCompleted, userState);
        }
        
        private void OnDeleteLogBitProgramOperationCompleted(object arg) {
            if ((this.DeleteLogBitProgramCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLogBitProgramCompleted(this, new DeleteLogBitProgramCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/DeleteLogLoggingInterpretation", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteLogLoggingInterpretation(string INTERPRETATION_CD) {
            object[] results = this.Invoke("DeleteLogLoggingInterpretation", new object[] {
                        INTERPRETATION_CD});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLogLoggingInterpretationAsync(string INTERPRETATION_CD) {
            this.DeleteLogLoggingInterpretationAsync(INTERPRETATION_CD, null);
        }
        
        /// <remarks/>
        public void DeleteLogLoggingInterpretationAsync(string INTERPRETATION_CD, object userState) {
            if ((this.DeleteLogLoggingInterpretationOperationCompleted == null)) {
                this.DeleteLogLoggingInterpretationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLogLoggingInterpretationOperationCompleted);
            }
            this.InvokeAsync("DeleteLogLoggingInterpretation", new object[] {
                        INTERPRETATION_CD}, this.DeleteLogLoggingInterpretationOperationCompleted, userState);
        }
        
        private void OnDeleteLogLoggingInterpretationOperationCompleted(object arg) {
            if ((this.DeleteLogLoggingInterpretationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLogLoggingInterpretationCompleted(this, new DeleteLogLoggingInterpretationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/DeleteComBaseStrataLayer2", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteComBaseStrataLayer2(int SEQ_NO) {
            object[] results = this.Invoke("DeleteComBaseStrataLayer2", new object[] {
                        SEQ_NO});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteComBaseStrataLayer2Async(int SEQ_NO) {
            this.DeleteComBaseStrataLayer2Async(SEQ_NO, null);
        }
        
        /// <remarks/>
        public void DeleteComBaseStrataLayer2Async(int SEQ_NO, object userState) {
            if ((this.DeleteComBaseStrataLayer2OperationCompleted == null)) {
                this.DeleteComBaseStrataLayer2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteComBaseStrataLayer2OperationCompleted);
            }
            this.InvokeAsync("DeleteComBaseStrataLayer2", new object[] {
                        SEQ_NO}, this.DeleteComBaseStrataLayer2OperationCompleted, userState);
        }
        
        private void OnDeleteComBaseStrataLayer2OperationCompleted(object arg) {
            if ((this.DeleteComBaseStrataLayer2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteComBaseStrataLayer2Completed(this, new DeleteComBaseStrataLayer2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetFileViewExtensions", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetFileViewExtensions() {
            object[] results = this.Invoke("GetFileViewExtensions", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFileViewExtensionsAsync() {
            this.GetFileViewExtensionsAsync(null);
        }
        
        /// <remarks/>
        public void GetFileViewExtensionsAsync(object userState) {
            if ((this.GetFileViewExtensionsOperationCompleted == null)) {
                this.GetFileViewExtensionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileViewExtensionsOperationCompleted);
            }
            this.InvokeAsync("GetFileViewExtensions", new object[0], this.GetFileViewExtensionsOperationCompleted, userState);
        }
        
        private void OnGetFileViewExtensionsOperationCompleted(object arg) {
            if ((this.GetFileViewExtensionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileViewExtensionsCompleted(this, new GetFileViewExtensionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetDataPushList", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VIEW_REQUISITION_LIST[] GetDataPushList(string well_job_name, string requisition_cd) {
            object[] results = this.Invoke("GetDataPushList", new object[] {
                        well_job_name,
                        requisition_cd});
            return ((VIEW_REQUISITION_LIST[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDataPushListAsync(string well_job_name, string requisition_cd) {
            this.GetDataPushListAsync(well_job_name, requisition_cd, null);
        }
        
        /// <remarks/>
        public void GetDataPushListAsync(string well_job_name, string requisition_cd, object userState) {
            if ((this.GetDataPushListOperationCompleted == null)) {
                this.GetDataPushListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataPushListOperationCompleted);
            }
            this.InvokeAsync("GetDataPushList", new object[] {
                        well_job_name,
                        requisition_cd}, this.GetDataPushListOperationCompleted, userState);
        }
        
        private void OnGetDataPushListOperationCompleted(object arg) {
            if ((this.GetDataPushListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataPushListCompleted(this, new GetDataPushListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/VilidateDataPush", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool VilidateDataPush(string process_name) {
            object[] results = this.Invoke("VilidateDataPush", new object[] {
                        process_name});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void VilidateDataPushAsync(string process_name) {
            this.VilidateDataPushAsync(process_name, null);
        }
        
        /// <remarks/>
        public void VilidateDataPushAsync(string process_name, object userState) {
            if ((this.VilidateDataPushOperationCompleted == null)) {
                this.VilidateDataPushOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVilidateDataPushOperationCompleted);
            }
            this.InvokeAsync("VilidateDataPush", new object[] {
                        process_name}, this.VilidateDataPushOperationCompleted, userState);
        }
        
        private void OnVilidateDataPushOperationCompleted(object arg) {
            if ((this.VilidateDataPushCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VilidateDataPushCompleted(this, new VilidateDataPushCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/VilidateDataPushXY", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool VilidateDataPushXY(string process_name) {
            object[] results = this.Invoke("VilidateDataPushXY", new object[] {
                        process_name});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void VilidateDataPushXYAsync(string process_name) {
            this.VilidateDataPushXYAsync(process_name, null);
        }
        
        /// <remarks/>
        public void VilidateDataPushXYAsync(string process_name, object userState) {
            if ((this.VilidateDataPushXYOperationCompleted == null)) {
                this.VilidateDataPushXYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVilidateDataPushXYOperationCompleted);
            }
            this.InvokeAsync("VilidateDataPushXY", new object[] {
                        process_name}, this.VilidateDataPushXYOperationCompleted, userState);
        }
        
        private void OnVilidateDataPushXYOperationCompleted(object arg) {
            if ((this.VilidateDataPushXYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VilidateDataPushXYCompleted(this, new VilidateDataPushXYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetDataPushListYTHPT", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataPushListYTHPT(string well_job_name, string PART_UNITS, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> LOG_START_TIME, string state, string state1, int page, out int total) {
            object[] results = this.Invoke("GetDataPushListYTHPT", new object[] {
                        well_job_name,
                        PART_UNITS,
                        LOG_START_TIME,
                        state,
                        state1,
                        page});
            total = ((int)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataPushListYTHPTAsync(string well_job_name, string PART_UNITS, System.Nullable<System.DateTime> LOG_START_TIME, string state, string state1, int page) {
            this.GetDataPushListYTHPTAsync(well_job_name, PART_UNITS, LOG_START_TIME, state, state1, page, null);
        }
        
        /// <remarks/>
        public void GetDataPushListYTHPTAsync(string well_job_name, string PART_UNITS, System.Nullable<System.DateTime> LOG_START_TIME, string state, string state1, int page, object userState) {
            if ((this.GetDataPushListYTHPTOperationCompleted == null)) {
                this.GetDataPushListYTHPTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataPushListYTHPTOperationCompleted);
            }
            this.InvokeAsync("GetDataPushListYTHPT", new object[] {
                        well_job_name,
                        PART_UNITS,
                        LOG_START_TIME,
                        state,
                        state1,
                        page}, this.GetDataPushListYTHPTOperationCompleted, userState);
        }
        
        private void OnGetDataPushListYTHPTOperationCompleted(object arg) {
            if ((this.GetDataPushListYTHPTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataPushListYTHPTCompleted(this, new GetDataPushListYTHPTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetDataPushListXY", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataPushListXY(string well_job_name, string PART_UNITS, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> LOG_START_TIME, string state, string state1, int page, out int total) {
            object[] results = this.Invoke("GetDataPushListXY", new object[] {
                        well_job_name,
                        PART_UNITS,
                        LOG_START_TIME,
                        state,
                        state1,
                        page});
            total = ((int)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataPushListXYAsync(string well_job_name, string PART_UNITS, System.Nullable<System.DateTime> LOG_START_TIME, string state, string state1, int page) {
            this.GetDataPushListXYAsync(well_job_name, PART_UNITS, LOG_START_TIME, state, state1, page, null);
        }
        
        /// <remarks/>
        public void GetDataPushListXYAsync(string well_job_name, string PART_UNITS, System.Nullable<System.DateTime> LOG_START_TIME, string state, string state1, int page, object userState) {
            if ((this.GetDataPushListXYOperationCompleted == null)) {
                this.GetDataPushListXYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataPushListXYOperationCompleted);
            }
            this.InvokeAsync("GetDataPushListXY", new object[] {
                        well_job_name,
                        PART_UNITS,
                        LOG_START_TIME,
                        state,
                        state1,
                        page}, this.GetDataPushListXYOperationCompleted, userState);
        }
        
        private void OnGetDataPushListXYOperationCompleted(object arg) {
            if ((this.GetDataPushListXYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataPushListXYCompleted(this, new GetDataPushListXYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetFileDownloadList", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFileDownloadList(string Well_Job_Name, string Well_Struct_Unit_Name, string Part_Units, string Process_Name) {
            object[] results = this.Invoke("GetFileDownloadList", new object[] {
                        Well_Job_Name,
                        Well_Struct_Unit_Name,
                        Part_Units,
                        Process_Name});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileDownloadListAsync(string Well_Job_Name, string Well_Struct_Unit_Name, string Part_Units, string Process_Name) {
            this.GetFileDownloadListAsync(Well_Job_Name, Well_Struct_Unit_Name, Part_Units, Process_Name, null);
        }
        
        /// <remarks/>
        public void GetFileDownloadListAsync(string Well_Job_Name, string Well_Struct_Unit_Name, string Part_Units, string Process_Name, object userState) {
            if ((this.GetFileDownloadListOperationCompleted == null)) {
                this.GetFileDownloadListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileDownloadListOperationCompleted);
            }
            this.InvokeAsync("GetFileDownloadList", new object[] {
                        Well_Job_Name,
                        Well_Struct_Unit_Name,
                        Part_Units,
                        Process_Name}, this.GetFileDownloadListOperationCompleted, userState);
        }
        
        private void OnGetFileDownloadListOperationCompleted(object arg) {
            if ((this.GetFileDownloadListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileDownloadListCompleted(this, new GetFileDownloadListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetFileDownloadDetails", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFileDownloadDetails(string process_Id) {
            object[] results = this.Invoke("GetFileDownloadDetails", new object[] {
                        process_Id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileDownloadDetailsAsync(string process_Id) {
            this.GetFileDownloadDetailsAsync(process_Id, null);
        }
        
        /// <remarks/>
        public void GetFileDownloadDetailsAsync(string process_Id, object userState) {
            if ((this.GetFileDownloadDetailsOperationCompleted == null)) {
                this.GetFileDownloadDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileDownloadDetailsOperationCompleted);
            }
            this.InvokeAsync("GetFileDownloadDetails", new object[] {
                        process_Id}, this.GetFileDownloadDetailsOperationCompleted, userState);
        }
        
        private void OnGetFileDownloadDetailsOperationCompleted(object arg) {
            if ((this.GetFileDownloadDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileDownloadDetailsCompleted(this, new GetFileDownloadDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetDvdInfo", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDvdInfo(string process_id) {
            object[] results = this.Invoke("GetDvdInfo", new object[] {
                        process_id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDvdInfoAsync(string process_id) {
            this.GetDvdInfoAsync(process_id, null);
        }
        
        /// <remarks/>
        public void GetDvdInfoAsync(string process_id, object userState) {
            if ((this.GetDvdInfoOperationCompleted == null)) {
                this.GetDvdInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDvdInfoOperationCompleted);
            }
            this.InvokeAsync("GetDvdInfo", new object[] {
                        process_id}, this.GetDvdInfoOperationCompleted, userState);
        }
        
        private void OnGetDvdInfoOperationCompleted(object arg) {
            if ((this.GetDvdInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDvdInfoCompleted(this, new GetDvdInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/SaveDvdInfo", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveDvdInfo([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] _model, string process_id) {
            object[] results = this.Invoke("SaveDvdInfo", new object[] {
                        _model,
                        process_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDvdInfoAsync(byte[] _model, string process_id) {
            this.SaveDvdInfoAsync(_model, process_id, null);
        }
        
        /// <remarks/>
        public void SaveDvdInfoAsync(byte[] _model, string process_id, object userState) {
            if ((this.SaveDvdInfoOperationCompleted == null)) {
                this.SaveDvdInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDvdInfoOperationCompleted);
            }
            this.InvokeAsync("SaveDvdInfo", new object[] {
                        _model,
                        process_id}, this.SaveDvdInfoOperationCompleted, userState);
        }
        
        private void OnSaveDvdInfoOperationCompleted(object arg) {
            if ((this.SaveDvdInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDvdInfoCompleted(this, new SaveDvdInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetDvdInfoList", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDvdInfoList([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] _searchModel, int page, out int total) {
            object[] results = this.Invoke("GetDvdInfoList", new object[] {
                        _searchModel,
                        page});
            total = ((int)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDvdInfoListAsync(byte[] _searchModel, int page) {
            this.GetDvdInfoListAsync(_searchModel, page, null);
        }
        
        /// <remarks/>
        public void GetDvdInfoListAsync(byte[] _searchModel, int page, object userState) {
            if ((this.GetDvdInfoListOperationCompleted == null)) {
                this.GetDvdInfoListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDvdInfoListOperationCompleted);
            }
            this.InvokeAsync("GetDvdInfoList", new object[] {
                        _searchModel,
                        page}, this.GetDvdInfoListOperationCompleted, userState);
        }
        
        private void OnGetDvdInfoListOperationCompleted(object arg) {
            if ((this.GetDvdInfoListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDvdInfoListCompleted(this, new GetDvdInfoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/UpdateDrillID", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateDrillID(decimal process_id, string drill_Job_ID) {
            object[] results = this.Invoke("UpdateDrillID", new object[] {
                        process_id,
                        drill_Job_ID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDrillIDAsync(decimal process_id, string drill_Job_ID) {
            this.UpdateDrillIDAsync(process_id, drill_Job_ID, null);
        }
        
        /// <remarks/>
        public void UpdateDrillIDAsync(decimal process_id, string drill_Job_ID, object userState) {
            if ((this.UpdateDrillIDOperationCompleted == null)) {
                this.UpdateDrillIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDrillIDOperationCompleted);
            }
            this.InvokeAsync("UpdateDrillID", new object[] {
                        process_id,
                        drill_Job_ID}, this.UpdateDrillIDOperationCompleted, userState);
        }
        
        private void OnUpdateDrillIDOperationCompleted(object arg) {
            if ((this.UpdateDrillIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDrillIDCompleted(this, new UpdateDrillIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetDataList_井名", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataList_井名() {
            object[] results = this.Invoke("GetDataList_井名", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataList_井名Async() {
            this.GetDataList_井名Async(null);
        }
        
        /// <remarks/>
        public void GetDataList_井名Async(object userState) {
            if ((this.GetDataList_井名OperationCompleted == null)) {
                this.GetDataList_井名OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataList_井名OperationCompleted);
            }
            this.InvokeAsync("GetDataList_井名", new object[0], this.GetDataList_井名OperationCompleted, userState);
        }
        
        private void OnGetDataList_井名OperationCompleted(object arg) {
            if ((this.GetDataList_井名Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataList_井名Completed(this, new GetDataList_井名CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_通知单引用参数", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_通知单引用参数(string WELL_JOB_NAME) {
            object[] results = this.Invoke("GetData_通知单引用参数", new object[] {
                        WELL_JOB_NAME});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_通知单引用参数Async(string WELL_JOB_NAME) {
            this.GetData_通知单引用参数Async(WELL_JOB_NAME, null);
        }
        
        /// <remarks/>
        public void GetData_通知单引用参数Async(string WELL_JOB_NAME, object userState) {
            if ((this.GetData_通知单引用参数OperationCompleted == null)) {
                this.GetData_通知单引用参数OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_通知单引用参数OperationCompleted);
            }
            this.InvokeAsync("GetData_通知单引用参数", new object[] {
                        WELL_JOB_NAME}, this.GetData_通知单引用参数OperationCompleted, userState);
        }
        
        private void OnGetData_通知单引用参数OperationCompleted(object arg) {
            if ((this.GetData_通知单引用参数Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_通知单引用参数Completed(this, new GetData_通知单引用参数CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_计划任务书参数显示", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_计划任务书参数显示(string REQUISITION_CD) {
            object[] results = this.Invoke("GetData_计划任务书参数显示", new object[] {
                        REQUISITION_CD});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_计划任务书参数显示Async(string REQUISITION_CD) {
            this.GetData_计划任务书参数显示Async(REQUISITION_CD, null);
        }
        
        /// <remarks/>
        public void GetData_计划任务书参数显示Async(string REQUISITION_CD, object userState) {
            if ((this.GetData_计划任务书参数显示OperationCompleted == null)) {
                this.GetData_计划任务书参数显示OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_计划任务书参数显示OperationCompleted);
            }
            this.InvokeAsync("GetData_计划任务书参数显示", new object[] {
                        REQUISITION_CD}, this.GetData_计划任务书参数显示OperationCompleted, userState);
        }
        
        private void OnGetData_计划任务书参数显示OperationCompleted(object arg) {
            if ((this.GetData_计划任务书参数显示Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_计划任务书参数显示Completed(this, new GetData_计划任务书参数显示CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetList_SYS_WELL_CACHE_ID", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetList_SYS_WELL_CACHE_ID(string DRILL_JOB_ID) {
            object[] results = this.Invoke("GetList_SYS_WELL_CACHE_ID", new object[] {
                        DRILL_JOB_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetList_SYS_WELL_CACHE_IDAsync(string DRILL_JOB_ID) {
            this.GetList_SYS_WELL_CACHE_IDAsync(DRILL_JOB_ID, null);
        }
        
        /// <remarks/>
        public void GetList_SYS_WELL_CACHE_IDAsync(string DRILL_JOB_ID, object userState) {
            if ((this.GetList_SYS_WELL_CACHE_IDOperationCompleted == null)) {
                this.GetList_SYS_WELL_CACHE_IDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetList_SYS_WELL_CACHE_IDOperationCompleted);
            }
            this.InvokeAsync("GetList_SYS_WELL_CACHE_ID", new object[] {
                        DRILL_JOB_ID}, this.GetList_SYS_WELL_CACHE_IDOperationCompleted, userState);
        }
        
        private void OnGetList_SYS_WELL_CACHE_IDOperationCompleted(object arg) {
            if ((this.GetList_SYS_WELL_CACHE_IDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetList_SYS_WELL_CACHE_IDCompleted(this, new GetList_SYS_WELL_CACHE_IDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetList_SYS_WELL_CACHE_NAME", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetList_SYS_WELL_CACHE_NAME(string WELL_JOB_NAME) {
            object[] results = this.Invoke("GetList_SYS_WELL_CACHE_NAME", new object[] {
                        WELL_JOB_NAME});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetList_SYS_WELL_CACHE_NAMEAsync(string WELL_JOB_NAME) {
            this.GetList_SYS_WELL_CACHE_NAMEAsync(WELL_JOB_NAME, null);
        }
        
        /// <remarks/>
        public void GetList_SYS_WELL_CACHE_NAMEAsync(string WELL_JOB_NAME, object userState) {
            if ((this.GetList_SYS_WELL_CACHE_NAMEOperationCompleted == null)) {
                this.GetList_SYS_WELL_CACHE_NAMEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetList_SYS_WELL_CACHE_NAMEOperationCompleted);
            }
            this.InvokeAsync("GetList_SYS_WELL_CACHE_NAME", new object[] {
                        WELL_JOB_NAME}, this.GetList_SYS_WELL_CACHE_NAMEOperationCompleted, userState);
        }
        
        private void OnGetList_SYS_WELL_CACHE_NAMEOperationCompleted(object arg) {
            if ((this.GetList_SYS_WELL_CACHE_NAMECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetList_SYS_WELL_CACHE_NAMECompleted(this, new GetList_SYS_WELL_CACHE_NAMECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetList_SYS_WELL_CACHE_TASK", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetList_SYS_WELL_CACHE_TASK(string REQUISITION_CD) {
            object[] results = this.Invoke("GetList_SYS_WELL_CACHE_TASK", new object[] {
                        REQUISITION_CD});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetList_SYS_WELL_CACHE_TASKAsync(string REQUISITION_CD) {
            this.GetList_SYS_WELL_CACHE_TASKAsync(REQUISITION_CD, null);
        }
        
        /// <remarks/>
        public void GetList_SYS_WELL_CACHE_TASKAsync(string REQUISITION_CD, object userState) {
            if ((this.GetList_SYS_WELL_CACHE_TASKOperationCompleted == null)) {
                this.GetList_SYS_WELL_CACHE_TASKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetList_SYS_WELL_CACHE_TASKOperationCompleted);
            }
            this.InvokeAsync("GetList_SYS_WELL_CACHE_TASK", new object[] {
                        REQUISITION_CD}, this.GetList_SYS_WELL_CACHE_TASKOperationCompleted, userState);
        }
        
        private void OnGetList_SYS_WELL_CACHE_TASKOperationCompleted(object arg) {
            if ((this.GetList_SYS_WELL_CACHE_TASKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetList_SYS_WELL_CACHE_TASKCompleted(this, new GetList_SYS_WELL_CACHE_TASKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/Delete_SYS_WELL_CACHE", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Delete_SYS_WELL_CACHE(string DRILL_JOB_ID) {
            object[] results = this.Invoke("Delete_SYS_WELL_CACHE", new object[] {
                        DRILL_JOB_ID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Delete_SYS_WELL_CACHEAsync(string DRILL_JOB_ID) {
            this.Delete_SYS_WELL_CACHEAsync(DRILL_JOB_ID, null);
        }
        
        /// <remarks/>
        public void Delete_SYS_WELL_CACHEAsync(string DRILL_JOB_ID, object userState) {
            if ((this.Delete_SYS_WELL_CACHEOperationCompleted == null)) {
                this.Delete_SYS_WELL_CACHEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_SYS_WELL_CACHEOperationCompleted);
            }
            this.InvokeAsync("Delete_SYS_WELL_CACHE", new object[] {
                        DRILL_JOB_ID}, this.Delete_SYS_WELL_CACHEOperationCompleted, userState);
        }
        
        private void OnDelete_SYS_WELL_CACHEOperationCompleted(object arg) {
            if ((this.Delete_SYS_WELL_CACHECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_SYS_WELL_CACHECompleted(this, new Delete_SYS_WELL_CACHECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_COMJOBINFO", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_COMJOBINFO(string WELL_JOB_NAME) {
            object[] results = this.Invoke("GetData_COMJOBINFO", new object[] {
                        WELL_JOB_NAME});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_COMJOBINFOAsync(string WELL_JOB_NAME) {
            this.GetData_COMJOBINFOAsync(WELL_JOB_NAME, null);
        }
        
        /// <remarks/>
        public void GetData_COMJOBINFOAsync(string WELL_JOB_NAME, object userState) {
            if ((this.GetData_COMJOBINFOOperationCompleted == null)) {
                this.GetData_COMJOBINFOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_COMJOBINFOOperationCompleted);
            }
            this.InvokeAsync("GetData_COMJOBINFO", new object[] {
                        WELL_JOB_NAME}, this.GetData_COMJOBINFOOperationCompleted, userState);
        }
        
        private void OnGetData_COMJOBINFOOperationCompleted(object arg) {
            if ((this.GetData_COMJOBINFOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_COMJOBINFOCompleted(this, new GetData_COMJOBINFOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/Get_WELLJOBNAME", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_WELLJOBNAME(string REQUISITION_CD) {
            object[] results = this.Invoke("Get_WELLJOBNAME", new object[] {
                        REQUISITION_CD});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_WELLJOBNAMEAsync(string REQUISITION_CD) {
            this.Get_WELLJOBNAMEAsync(REQUISITION_CD, null);
        }
        
        /// <remarks/>
        public void Get_WELLJOBNAMEAsync(string REQUISITION_CD, object userState) {
            if ((this.Get_WELLJOBNAMEOperationCompleted == null)) {
                this.Get_WELLJOBNAMEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_WELLJOBNAMEOperationCompleted);
            }
            this.InvokeAsync("Get_WELLJOBNAME", new object[] {
                        REQUISITION_CD}, this.Get_WELLJOBNAMEOperationCompleted, userState);
        }
        
        private void OnGet_WELLJOBNAMEOperationCompleted(object arg) {
            if ((this.Get_WELLJOBNAMECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_WELLJOBNAMECompleted(this, new Get_WELLJOBNAMECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetDataList_A12井名", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataList_A12井名() {
            object[] results = this.Invoke("GetDataList_A12井名", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataList_A12井名Async() {
            this.GetDataList_A12井名Async(null);
        }
        
        /// <remarks/>
        public void GetDataList_A12井名Async(object userState) {
            if ((this.GetDataList_A12井名OperationCompleted == null)) {
                this.GetDataList_A12井名OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataList_A12井名OperationCompleted);
            }
            this.InvokeAsync("GetDataList_A12井名", new object[0], this.GetDataList_A12井名OperationCompleted, userState);
        }
        
        private void OnGetDataList_A12井名OperationCompleted(object arg) {
            if ((this.GetDataList_A12井名Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataList_A12井名Completed(this, new GetDataList_A12井名CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_A12作业项目", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_A12作业项目(string JOB_ID) {
            object[] results = this.Invoke("GetData_A12作业项目", new object[] {
                        JOB_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_A12作业项目Async(string JOB_ID) {
            this.GetData_A12作业项目Async(JOB_ID, null);
        }
        
        /// <remarks/>
        public void GetData_A12作业项目Async(string JOB_ID, object userState) {
            if ((this.GetData_A12作业项目OperationCompleted == null)) {
                this.GetData_A12作业项目OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_A12作业项目OperationCompleted);
            }
            this.InvokeAsync("GetData_A12作业项目", new object[] {
                        JOB_ID}, this.GetData_A12作业项目OperationCompleted, userState);
        }
        
        private void OnGetData_A12作业项目OperationCompleted(object arg) {
            if ((this.GetData_A12作业项目Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_A12作业项目Completed(this, new GetData_A12作业项目CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_A12井", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_A12井(string WELL_ID) {
            object[] results = this.Invoke("GetData_A12井", new object[] {
                        WELL_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_A12井Async(string WELL_ID) {
            this.GetData_A12井Async(WELL_ID, null);
        }
        
        /// <remarks/>
        public void GetData_A12井Async(string WELL_ID, object userState) {
            if ((this.GetData_A12井OperationCompleted == null)) {
                this.GetData_A12井OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_A12井OperationCompleted);
            }
            this.InvokeAsync("GetData_A12井", new object[] {
                        WELL_ID}, this.GetData_A12井OperationCompleted, userState);
        }
        
        private void OnGetData_A12井OperationCompleted(object arg) {
            if ((this.GetData_A12井Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_A12井Completed(this, new GetData_A12井CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_A12井筒", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_A12井筒(string WELL_ID) {
            object[] results = this.Invoke("GetData_A12井筒", new object[] {
                        WELL_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_A12井筒Async(string WELL_ID) {
            this.GetData_A12井筒Async(WELL_ID, null);
        }
        
        /// <remarks/>
        public void GetData_A12井筒Async(string WELL_ID, object userState) {
            if ((this.GetData_A12井筒OperationCompleted == null)) {
                this.GetData_A12井筒OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_A12井筒OperationCompleted);
            }
            this.InvokeAsync("GetData_A12井筒", new object[] {
                        WELL_ID}, this.GetData_A12井筒OperationCompleted, userState);
        }
        
        private void OnGetData_A12井筒OperationCompleted(object arg) {
            if ((this.GetData_A12井筒Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_A12井筒Completed(this, new GetData_A12井筒CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_A12井身结构数据", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_A12井身结构数据(string WELL_ID) {
            object[] results = this.Invoke("GetData_A12井身结构数据", new object[] {
                        WELL_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_A12井身结构数据Async(string WELL_ID) {
            this.GetData_A12井身结构数据Async(WELL_ID, null);
        }
        
        /// <remarks/>
        public void GetData_A12井身结构数据Async(string WELL_ID, object userState) {
            if ((this.GetData_A12井身结构数据OperationCompleted == null)) {
                this.GetData_A12井身结构数据OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_A12井身结构数据OperationCompleted);
            }
            this.InvokeAsync("GetData_A12井身结构数据", new object[] {
                        WELL_ID}, this.GetData_A12井身结构数据OperationCompleted, userState);
        }
        
        private void OnGetData_A12井身结构数据OperationCompleted(object arg) {
            if ((this.GetData_A12井身结构数据Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_A12井身结构数据Completed(this, new GetData_A12井身结构数据CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_A12套管下深", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_A12套管下深(string WELL_ID) {
            object[] results = this.Invoke("GetData_A12套管下深", new object[] {
                        WELL_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_A12套管下深Async(string WELL_ID) {
            this.GetData_A12套管下深Async(WELL_ID, null);
        }
        
        /// <remarks/>
        public void GetData_A12套管下深Async(string WELL_ID, object userState) {
            if ((this.GetData_A12套管下深OperationCompleted == null)) {
                this.GetData_A12套管下深OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_A12套管下深OperationCompleted);
            }
            this.InvokeAsync("GetData_A12套管下深", new object[] {
                        WELL_ID}, this.GetData_A12套管下深OperationCompleted, userState);
        }
        
        private void OnGetData_A12套管下深OperationCompleted(object arg) {
            if ((this.GetData_A12套管下深Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_A12套管下深Completed(this, new GetData_A12套管下深CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_A12钻头尺寸", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_A12钻头尺寸(string WELL_ID) {
            object[] results = this.Invoke("GetData_A12钻头尺寸", new object[] {
                        WELL_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_A12钻头尺寸Async(string WELL_ID) {
            this.GetData_A12钻头尺寸Async(WELL_ID, null);
        }
        
        /// <remarks/>
        public void GetData_A12钻头尺寸Async(string WELL_ID, object userState) {
            if ((this.GetData_A12钻头尺寸OperationCompleted == null)) {
                this.GetData_A12钻头尺寸OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_A12钻头尺寸OperationCompleted);
            }
            this.InvokeAsync("GetData_A12钻头尺寸", new object[] {
                        WELL_ID}, this.GetData_A12钻头尺寸OperationCompleted, userState);
        }
        
        private void OnGetData_A12钻头尺寸OperationCompleted(object arg) {
            if ((this.GetData_A12钻头尺寸Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_A12钻头尺寸Completed(this, new GetData_A12钻头尺寸CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_A12钻井液", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_A12钻井液(string WELL_ID) {
            object[] results = this.Invoke("GetData_A12钻井液", new object[] {
                        WELL_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_A12钻井液Async(string WELL_ID) {
            this.GetData_A12钻井液Async(WELL_ID, null);
        }
        
        /// <remarks/>
        public void GetData_A12钻井液Async(string WELL_ID, object userState) {
            if ((this.GetData_A12钻井液OperationCompleted == null)) {
                this.GetData_A12钻井液OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_A12钻井液OperationCompleted);
            }
            this.InvokeAsync("GetData_A12钻井液", new object[] {
                        WELL_ID}, this.GetData_A12钻井液OperationCompleted, userState);
        }
        
        private void OnGetData_A12钻井液OperationCompleted(object arg) {
            if ((this.GetData_A12钻井液Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_A12钻井液Completed(this, new GetData_A12钻井液CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_A12钻达井深", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_A12钻达井深(string WELL_ID) {
            object[] results = this.Invoke("GetData_A12钻达井深", new object[] {
                        WELL_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_A12钻达井深Async(string WELL_ID) {
            this.GetData_A12钻达井深Async(WELL_ID, null);
        }
        
        /// <remarks/>
        public void GetData_A12钻达井深Async(string WELL_ID, object userState) {
            if ((this.GetData_A12钻达井深OperationCompleted == null)) {
                this.GetData_A12钻达井深OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_A12钻达井深OperationCompleted);
            }
            this.InvokeAsync("GetData_A12钻达井深", new object[] {
                        WELL_ID}, this.GetData_A12钻达井深OperationCompleted, userState);
        }
        
        private void OnGetData_A12钻达井深OperationCompleted(object arg) {
            if ((this.GetData_A12钻达井深Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_A12钻达井深Completed(this, new GetData_A12钻达井深CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/Save_SYS_WELL_DATA", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Save_SYS_WELL_DATA(string JOB_ID) {
            object[] results = this.Invoke("Save_SYS_WELL_DATA", new object[] {
                        JOB_ID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Save_SYS_WELL_DATAAsync(string JOB_ID) {
            this.Save_SYS_WELL_DATAAsync(JOB_ID, null);
        }
        
        /// <remarks/>
        public void Save_SYS_WELL_DATAAsync(string JOB_ID, object userState) {
            if ((this.Save_SYS_WELL_DATAOperationCompleted == null)) {
                this.Save_SYS_WELL_DATAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSave_SYS_WELL_DATAOperationCompleted);
            }
            this.InvokeAsync("Save_SYS_WELL_DATA", new object[] {
                        JOB_ID}, this.Save_SYS_WELL_DATAOperationCompleted, userState);
        }
        
        private void OnSave_SYS_WELL_DATAOperationCompleted(object arg) {
            if ((this.Save_SYS_WELL_DATACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Save_SYS_WELL_DATACompleted(this, new Save_SYS_WELL_DATACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/Save_ALL_WELL_DATA", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Save_ALL_WELL_DATA(string WELL_JOB_NAME) {
            object[] results = this.Invoke("Save_ALL_WELL_DATA", new object[] {
                        WELL_JOB_NAME});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Save_ALL_WELL_DATAAsync(string WELL_JOB_NAME) {
            this.Save_ALL_WELL_DATAAsync(WELL_JOB_NAME, null);
        }
        
        /// <remarks/>
        public void Save_ALL_WELL_DATAAsync(string WELL_JOB_NAME, object userState) {
            if ((this.Save_ALL_WELL_DATAOperationCompleted == null)) {
                this.Save_ALL_WELL_DATAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSave_ALL_WELL_DATAOperationCompleted);
            }
            this.InvokeAsync("Save_ALL_WELL_DATA", new object[] {
                        WELL_JOB_NAME}, this.Save_ALL_WELL_DATAOperationCompleted, userState);
        }
        
        private void OnSave_ALL_WELL_DATAOperationCompleted(object arg) {
            if ((this.Save_ALL_WELL_DATACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Save_ALL_WELL_DATACompleted(this, new Save_ALL_WELL_DATACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_A12取心数据", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_A12取心数据(string WELL_JOB_NAME) {
            object[] results = this.Invoke("GetData_A12取心数据", new object[] {
                        WELL_JOB_NAME});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_A12取心数据Async(string WELL_JOB_NAME) {
            this.GetData_A12取心数据Async(WELL_JOB_NAME, null);
        }
        
        /// <remarks/>
        public void GetData_A12取心数据Async(string WELL_JOB_NAME, object userState) {
            if ((this.GetData_A12取心数据OperationCompleted == null)) {
                this.GetData_A12取心数据OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_A12取心数据OperationCompleted);
            }
            this.InvokeAsync("GetData_A12取心数据", new object[] {
                        WELL_JOB_NAME}, this.GetData_A12取心数据OperationCompleted, userState);
        }
        
        private void OnGetData_A12取心数据OperationCompleted(object arg) {
            if ((this.GetData_A12取心数据Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_A12取心数据Completed(this, new GetData_A12取心数据CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_A12钻井液全性能", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_A12钻井液全性能(string WELL_JOB_NAME) {
            object[] results = this.Invoke("GetData_A12钻井液全性能", new object[] {
                        WELL_JOB_NAME});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_A12钻井液全性能Async(string WELL_JOB_NAME) {
            this.GetData_A12钻井液全性能Async(WELL_JOB_NAME, null);
        }
        
        /// <remarks/>
        public void GetData_A12钻井液全性能Async(string WELL_JOB_NAME, object userState) {
            if ((this.GetData_A12钻井液全性能OperationCompleted == null)) {
                this.GetData_A12钻井液全性能OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_A12钻井液全性能OperationCompleted);
            }
            this.InvokeAsync("GetData_A12钻井液全性能", new object[] {
                        WELL_JOB_NAME}, this.GetData_A12钻井液全性能OperationCompleted, userState);
        }
        
        private void OnGetData_A12钻井液全性能OperationCompleted(object arg) {
            if ((this.GetData_A12钻井液全性能Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_A12钻井液全性能Completed(this, new GetData_A12钻井液全性能CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_A12下套管记录", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_A12下套管记录(string WELL_JOB_NAME) {
            object[] results = this.Invoke("GetData_A12下套管记录", new object[] {
                        WELL_JOB_NAME});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_A12下套管记录Async(string WELL_JOB_NAME) {
            this.GetData_A12下套管记录Async(WELL_JOB_NAME, null);
        }
        
        /// <remarks/>
        public void GetData_A12下套管记录Async(string WELL_JOB_NAME, object userState) {
            if ((this.GetData_A12下套管记录OperationCompleted == null)) {
                this.GetData_A12下套管记录OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_A12下套管记录OperationCompleted);
            }
            this.InvokeAsync("GetData_A12下套管记录", new object[] {
                        WELL_JOB_NAME}, this.GetData_A12下套管记录OperationCompleted, userState);
        }
        
        private void OnGetData_A12下套管记录OperationCompleted(object arg) {
            if ((this.GetData_A12下套管记录Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_A12下套管记录Completed(this, new GetData_A12下套管记录CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_A12钻头使用情况信息", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_A12钻头使用情况信息(string WELL_JOB_NAME) {
            object[] results = this.Invoke("GetData_A12钻头使用情况信息", new object[] {
                        WELL_JOB_NAME});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_A12钻头使用情况信息Async(string WELL_JOB_NAME) {
            this.GetData_A12钻头使用情况信息Async(WELL_JOB_NAME, null);
        }
        
        /// <remarks/>
        public void GetData_A12钻头使用情况信息Async(string WELL_JOB_NAME, object userState) {
            if ((this.GetData_A12钻头使用情况信息OperationCompleted == null)) {
                this.GetData_A12钻头使用情况信息OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_A12钻头使用情况信息OperationCompleted);
            }
            this.InvokeAsync("GetData_A12钻头使用情况信息", new object[] {
                        WELL_JOB_NAME}, this.GetData_A12钻头使用情况信息OperationCompleted, userState);
        }
        
        private void OnGetData_A12钻头使用情况信息OperationCompleted(object arg) {
            if ((this.GetData_A12钻头使用情况信息Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_A12钻头使用情况信息Completed(this, new GetData_A12钻头使用情况信息CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_A12水泥浆信息", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_A12水泥浆信息(string WELL_JOB_NAME) {
            object[] results = this.Invoke("GetData_A12水泥浆信息", new object[] {
                        WELL_JOB_NAME});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_A12水泥浆信息Async(string WELL_JOB_NAME) {
            this.GetData_A12水泥浆信息Async(WELL_JOB_NAME, null);
        }
        
        /// <remarks/>
        public void GetData_A12水泥浆信息Async(string WELL_JOB_NAME, object userState) {
            if ((this.GetData_A12水泥浆信息OperationCompleted == null)) {
                this.GetData_A12水泥浆信息OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_A12水泥浆信息OperationCompleted);
            }
            this.InvokeAsync("GetData_A12水泥浆信息", new object[] {
                        WELL_JOB_NAME}, this.GetData_A12水泥浆信息OperationCompleted, userState);
        }
        
        private void OnGetData_A12水泥浆信息OperationCompleted(object arg) {
            if ((this.GetData_A12水泥浆信息Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_A12水泥浆信息Completed(this, new GetData_A12水泥浆信息CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_A12固井基础数据", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_A12固井基础数据(string WELL_JOB_NAME) {
            object[] results = this.Invoke("GetData_A12固井基础数据", new object[] {
                        WELL_JOB_NAME});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_A12固井基础数据Async(string WELL_JOB_NAME) {
            this.GetData_A12固井基础数据Async(WELL_JOB_NAME, null);
        }
        
        /// <remarks/>
        public void GetData_A12固井基础数据Async(string WELL_JOB_NAME, object userState) {
            if ((this.GetData_A12固井基础数据OperationCompleted == null)) {
                this.GetData_A12固井基础数据OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_A12固井基础数据OperationCompleted);
            }
            this.InvokeAsync("GetData_A12固井基础数据", new object[] {
                        WELL_JOB_NAME}, this.GetData_A12固井基础数据OperationCompleted, userState);
        }
        
        private void OnGetData_A12固井基础数据OperationCompleted(object arg) {
            if ((this.GetData_A12固井基础数据Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_A12固井基础数据Completed(this, new GetData_A12固井基础数据CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_A12钻井施工基础数据", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_A12钻井施工基础数据(string WELL_JOB_NAME) {
            object[] results = this.Invoke("GetData_A12钻井施工基础数据", new object[] {
                        WELL_JOB_NAME});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_A12钻井施工基础数据Async(string WELL_JOB_NAME) {
            this.GetData_A12钻井施工基础数据Async(WELL_JOB_NAME, null);
        }
        
        /// <remarks/>
        public void GetData_A12钻井施工基础数据Async(string WELL_JOB_NAME, object userState) {
            if ((this.GetData_A12钻井施工基础数据OperationCompleted == null)) {
                this.GetData_A12钻井施工基础数据OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_A12钻井施工基础数据OperationCompleted);
            }
            this.InvokeAsync("GetData_A12钻井施工基础数据", new object[] {
                        WELL_JOB_NAME}, this.GetData_A12钻井施工基础数据OperationCompleted, userState);
        }
        
        private void OnGetData_A12钻井施工基础数据OperationCompleted(object arg) {
            if ((this.GetData_A12钻井施工基础数据Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_A12钻井施工基础数据Completed(this, new GetData_A12钻井施工基础数据CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/Save_ALL_JOB_DATA", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Save_ALL_JOB_DATA(string REQUISITION_CD, string JOB_PLAN_CD) {
            object[] results = this.Invoke("Save_ALL_JOB_DATA", new object[] {
                        REQUISITION_CD,
                        JOB_PLAN_CD});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Save_ALL_JOB_DATAAsync(string REQUISITION_CD, string JOB_PLAN_CD) {
            this.Save_ALL_JOB_DATAAsync(REQUISITION_CD, JOB_PLAN_CD, null);
        }
        
        /// <remarks/>
        public void Save_ALL_JOB_DATAAsync(string REQUISITION_CD, string JOB_PLAN_CD, object userState) {
            if ((this.Save_ALL_JOB_DATAOperationCompleted == null)) {
                this.Save_ALL_JOB_DATAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSave_ALL_JOB_DATAOperationCompleted);
            }
            this.InvokeAsync("Save_ALL_JOB_DATA", new object[] {
                        REQUISITION_CD,
                        JOB_PLAN_CD}, this.Save_ALL_JOB_DATAOperationCompleted, userState);
        }
        
        private void OnSave_ALL_JOB_DATAOperationCompleted(object arg) {
            if ((this.Save_ALL_JOB_DATACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Save_ALL_JOB_DATACompleted(this, new Save_ALL_JOB_DATACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/Save_A12取芯数据", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Save_A12取芯数据(string REQUISITION_CD, string JOB_PLAN_CD, string WELL_JOB_NAME) {
            object[] results = this.Invoke("Save_A12取芯数据", new object[] {
                        REQUISITION_CD,
                        JOB_PLAN_CD,
                        WELL_JOB_NAME});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Save_A12取芯数据Async(string REQUISITION_CD, string JOB_PLAN_CD, string WELL_JOB_NAME) {
            this.Save_A12取芯数据Async(REQUISITION_CD, JOB_PLAN_CD, WELL_JOB_NAME, null);
        }
        
        /// <remarks/>
        public void Save_A12取芯数据Async(string REQUISITION_CD, string JOB_PLAN_CD, string WELL_JOB_NAME, object userState) {
            if ((this.Save_A12取芯数据OperationCompleted == null)) {
                this.Save_A12取芯数据OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSave_A12取芯数据OperationCompleted);
            }
            this.InvokeAsync("Save_A12取芯数据", new object[] {
                        REQUISITION_CD,
                        JOB_PLAN_CD,
                        WELL_JOB_NAME}, this.Save_A12取芯数据OperationCompleted, userState);
        }
        
        private void OnSave_A12取芯数据OperationCompleted(object arg) {
            if ((this.Save_A12取芯数据Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Save_A12取芯数据Completed(this, new Save_A12取芯数据CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/Save_A12钻井液全性能", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Save_A12钻井液全性能(string REQUISITION_CD, string JOB_PLAN_CD, string WELL_JOB_NAME) {
            object[] results = this.Invoke("Save_A12钻井液全性能", new object[] {
                        REQUISITION_CD,
                        JOB_PLAN_CD,
                        WELL_JOB_NAME});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Save_A12钻井液全性能Async(string REQUISITION_CD, string JOB_PLAN_CD, string WELL_JOB_NAME) {
            this.Save_A12钻井液全性能Async(REQUISITION_CD, JOB_PLAN_CD, WELL_JOB_NAME, null);
        }
        
        /// <remarks/>
        public void Save_A12钻井液全性能Async(string REQUISITION_CD, string JOB_PLAN_CD, string WELL_JOB_NAME, object userState) {
            if ((this.Save_A12钻井液全性能OperationCompleted == null)) {
                this.Save_A12钻井液全性能OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSave_A12钻井液全性能OperationCompleted);
            }
            this.InvokeAsync("Save_A12钻井液全性能", new object[] {
                        REQUISITION_CD,
                        JOB_PLAN_CD,
                        WELL_JOB_NAME}, this.Save_A12钻井液全性能OperationCompleted, userState);
        }
        
        private void OnSave_A12钻井液全性能OperationCompleted(object arg) {
            if ((this.Save_A12钻井液全性能Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Save_A12钻井液全性能Completed(this, new Save_A12钻井液全性能CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/Save_A12套管参数", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Save_A12套管参数(string REQUISITION_CD, string JOB_PLAN_CD, string WELL_JOB_NAME) {
            object[] results = this.Invoke("Save_A12套管参数", new object[] {
                        REQUISITION_CD,
                        JOB_PLAN_CD,
                        WELL_JOB_NAME});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Save_A12套管参数Async(string REQUISITION_CD, string JOB_PLAN_CD, string WELL_JOB_NAME) {
            this.Save_A12套管参数Async(REQUISITION_CD, JOB_PLAN_CD, WELL_JOB_NAME, null);
        }
        
        /// <remarks/>
        public void Save_A12套管参数Async(string REQUISITION_CD, string JOB_PLAN_CD, string WELL_JOB_NAME, object userState) {
            if ((this.Save_A12套管参数OperationCompleted == null)) {
                this.Save_A12套管参数OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSave_A12套管参数OperationCompleted);
            }
            this.InvokeAsync("Save_A12套管参数", new object[] {
                        REQUISITION_CD,
                        JOB_PLAN_CD,
                        WELL_JOB_NAME}, this.Save_A12套管参数OperationCompleted, userState);
        }
        
        private void OnSave_A12套管参数OperationCompleted(object arg) {
            if ((this.Save_A12套管参数Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Save_A12套管参数Completed(this, new Save_A12套管参数CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/Save_A12钻头使用情况信息", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Save_A12钻头使用情况信息(string REQUISITION_CD, string JOB_PLAN_CD, string WELL_JOB_NAME) {
            object[] results = this.Invoke("Save_A12钻头使用情况信息", new object[] {
                        REQUISITION_CD,
                        JOB_PLAN_CD,
                        WELL_JOB_NAME});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Save_A12钻头使用情况信息Async(string REQUISITION_CD, string JOB_PLAN_CD, string WELL_JOB_NAME) {
            this.Save_A12钻头使用情况信息Async(REQUISITION_CD, JOB_PLAN_CD, WELL_JOB_NAME, null);
        }
        
        /// <remarks/>
        public void Save_A12钻头使用情况信息Async(string REQUISITION_CD, string JOB_PLAN_CD, string WELL_JOB_NAME, object userState) {
            if ((this.Save_A12钻头使用情况信息OperationCompleted == null)) {
                this.Save_A12钻头使用情况信息OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSave_A12钻头使用情况信息OperationCompleted);
            }
            this.InvokeAsync("Save_A12钻头使用情况信息", new object[] {
                        REQUISITION_CD,
                        JOB_PLAN_CD,
                        WELL_JOB_NAME}, this.Save_A12钻头使用情况信息OperationCompleted, userState);
        }
        
        private void OnSave_A12钻头使用情况信息OperationCompleted(object arg) {
            if ((this.Save_A12钻头使用情况信息Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Save_A12钻头使用情况信息Completed(this, new Save_A12钻头使用情况信息CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/Save_A12固井参数", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Save_A12固井参数(string REQUISITION_CD, string JOB_PLAN_CD, string WELL_JOB_NAME) {
            object[] results = this.Invoke("Save_A12固井参数", new object[] {
                        REQUISITION_CD,
                        JOB_PLAN_CD,
                        WELL_JOB_NAME});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Save_A12固井参数Async(string REQUISITION_CD, string JOB_PLAN_CD, string WELL_JOB_NAME) {
            this.Save_A12固井参数Async(REQUISITION_CD, JOB_PLAN_CD, WELL_JOB_NAME, null);
        }
        
        /// <remarks/>
        public void Save_A12固井参数Async(string REQUISITION_CD, string JOB_PLAN_CD, string WELL_JOB_NAME, object userState) {
            if ((this.Save_A12固井参数OperationCompleted == null)) {
                this.Save_A12固井参数OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSave_A12固井参数OperationCompleted);
            }
            this.InvokeAsync("Save_A12固井参数", new object[] {
                        REQUISITION_CD,
                        JOB_PLAN_CD,
                        WELL_JOB_NAME}, this.Save_A12固井参数OperationCompleted, userState);
        }
        
        private void OnSave_A12固井参数OperationCompleted(object arg) {
            if ((this.Save_A12固井参数Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Save_A12固井参数Completed(this, new Save_A12固井参数CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/Save_施工总结会", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Save_施工总结会([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data_施工总结) {
            object[] results = this.Invoke("Save_施工总结会", new object[] {
                        data_施工总结});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Save_施工总结会Async(byte[] data_施工总结) {
            this.Save_施工总结会Async(data_施工总结, null);
        }
        
        /// <remarks/>
        public void Save_施工总结会Async(byte[] data_施工总结, object userState) {
            if ((this.Save_施工总结会OperationCompleted == null)) {
                this.Save_施工总结会OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSave_施工总结会OperationCompleted);
            }
            this.InvokeAsync("Save_施工总结会", new object[] {
                        data_施工总结}, this.Save_施工总结会OperationCompleted, userState);
        }
        
        private void OnSave_施工总结会OperationCompleted(object arg) {
            if ((this.Save_施工总结会Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Save_施工总结会Completed(this, new Save_施工总结会CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_施工总结会", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_施工总结会(string string_作业计划书编号) {
            object[] results = this.Invoke("GetData_施工总结会", new object[] {
                        string_作业计划书编号});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_施工总结会Async(string string_作业计划书编号) {
            this.GetData_施工总结会Async(string_作业计划书编号, null);
        }
        
        /// <remarks/>
        public void GetData_施工总结会Async(string string_作业计划书编号, object userState) {
            if ((this.GetData_施工总结会OperationCompleted == null)) {
                this.GetData_施工总结会OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_施工总结会OperationCompleted);
            }
            this.InvokeAsync("GetData_施工总结会", new object[] {
                        string_作业计划书编号}, this.GetData_施工总结会OperationCompleted, userState);
        }
        
        private void OnGetData_施工总结会OperationCompleted(object arg) {
            if ((this.GetData_施工总结会Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_施工总结会Completed(this, new GetData_施工总结会CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/Save_井场班前会", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Save_井场班前会([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data_井场班前会) {
            object[] results = this.Invoke("Save_井场班前会", new object[] {
                        data_井场班前会});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Save_井场班前会Async(byte[] data_井场班前会) {
            this.Save_井场班前会Async(data_井场班前会, null);
        }
        
        /// <remarks/>
        public void Save_井场班前会Async(byte[] data_井场班前会, object userState) {
            if ((this.Save_井场班前会OperationCompleted == null)) {
                this.Save_井场班前会OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSave_井场班前会OperationCompleted);
            }
            this.InvokeAsync("Save_井场班前会", new object[] {
                        data_井场班前会}, this.Save_井场班前会OperationCompleted, userState);
        }
        
        private void OnSave_井场班前会OperationCompleted(object arg) {
            if ((this.Save_井场班前会Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Save_井场班前会Completed(this, new Save_井场班前会CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_井场班前会", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_井场班前会(string string_作业计划书编号) {
            object[] results = this.Invoke("GetData_井场班前会", new object[] {
                        string_作业计划书编号});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_井场班前会Async(string string_作业计划书编号) {
            this.GetData_井场班前会Async(string_作业计划书编号, null);
        }
        
        /// <remarks/>
        public void GetData_井场班前会Async(string string_作业计划书编号, object userState) {
            if ((this.GetData_井场班前会OperationCompleted == null)) {
                this.GetData_井场班前会OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_井场班前会OperationCompleted);
            }
            this.InvokeAsync("GetData_井场班前会", new object[] {
                        string_作业计划书编号}, this.GetData_井场班前会OperationCompleted, userState);
        }
        
        private void OnGetData_井场班前会OperationCompleted(object arg) {
            if ((this.GetData_井场班前会Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_井场班前会Completed(this, new GetData_井场班前会CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/Save_三交会", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Save_三交会([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data_三交会) {
            object[] results = this.Invoke("Save_三交会", new object[] {
                        data_三交会});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Save_三交会Async(byte[] data_三交会) {
            this.Save_三交会Async(data_三交会, null);
        }
        
        /// <remarks/>
        public void Save_三交会Async(byte[] data_三交会, object userState) {
            if ((this.Save_三交会OperationCompleted == null)) {
                this.Save_三交会OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSave_三交会OperationCompleted);
            }
            this.InvokeAsync("Save_三交会", new object[] {
                        data_三交会}, this.Save_三交会OperationCompleted, userState);
        }
        
        private void OnSave_三交会OperationCompleted(object arg) {
            if ((this.Save_三交会Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Save_三交会Completed(this, new Save_三交会CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_三交会", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_三交会(string string_作业计划书编号) {
            object[] results = this.Invoke("GetData_三交会", new object[] {
                        string_作业计划书编号});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_三交会Async(string string_作业计划书编号) {
            this.GetData_三交会Async(string_作业计划书编号, null);
        }
        
        /// <remarks/>
        public void GetData_三交会Async(string string_作业计划书编号, object userState) {
            if ((this.GetData_三交会OperationCompleted == null)) {
                this.GetData_三交会OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_三交会OperationCompleted);
            }
            this.InvokeAsync("GetData_三交会", new object[] {
                        string_作业计划书编号}, this.GetData_三交会OperationCompleted, userState);
        }
        
        private void OnGetData_三交会OperationCompleted(object arg) {
            if ((this.GetData_三交会Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_三交会Completed(this, new GetData_三交会CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/Savedata_取心参数", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Savedata_取心参数([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data_取心参数) {
            object[] results = this.Invoke("Savedata_取心参数", new object[] {
                        data_取心参数});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Savedata_取心参数Async(byte[] data_取心参数) {
            this.Savedata_取心参数Async(data_取心参数, null);
        }
        
        /// <remarks/>
        public void Savedata_取心参数Async(byte[] data_取心参数, object userState) {
            if ((this.Savedata_取心参数OperationCompleted == null)) {
                this.Savedata_取心参数OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavedata_取心参数OperationCompleted);
            }
            this.InvokeAsync("Savedata_取心参数", new object[] {
                        data_取心参数}, this.Savedata_取心参数OperationCompleted, userState);
        }
        
        private void OnSavedata_取心参数OperationCompleted(object arg) {
            if ((this.Savedata_取心参数Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Savedata_取心参数Completed(this, new Savedata_取心参数CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetDataGList_取心参数", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataGList_取心参数(string string_计划任务书编号) {
            object[] results = this.Invoke("GetDataGList_取心参数", new object[] {
                        string_计划任务书编号});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataGList_取心参数Async(string string_计划任务书编号) {
            this.GetDataGList_取心参数Async(string_计划任务书编号, null);
        }
        
        /// <remarks/>
        public void GetDataGList_取心参数Async(string string_计划任务书编号, object userState) {
            if ((this.GetDataGList_取心参数OperationCompleted == null)) {
                this.GetDataGList_取心参数OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataGList_取心参数OperationCompleted);
            }
            this.InvokeAsync("GetDataGList_取心参数", new object[] {
                        string_计划任务书编号}, this.GetDataGList_取心参数OperationCompleted, userState);
        }
        
        private void OnGetDataGList_取心参数OperationCompleted(object arg) {
            if ((this.GetDataGList_取心参数Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataGList_取心参数Completed(this, new GetDataGList_取心参数CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_取心参数", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_取心参数(string COREID) {
            object[] results = this.Invoke("GetData_取心参数", new object[] {
                        COREID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_取心参数Async(string COREID) {
            this.GetData_取心参数Async(COREID, null);
        }
        
        /// <remarks/>
        public void GetData_取心参数Async(string COREID, object userState) {
            if ((this.GetData_取心参数OperationCompleted == null)) {
                this.GetData_取心参数OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_取心参数OperationCompleted);
            }
            this.InvokeAsync("GetData_取心参数", new object[] {
                        COREID}, this.GetData_取心参数OperationCompleted, userState);
        }
        
        private void OnGetData_取心参数OperationCompleted(object arg) {
            if ((this.GetData_取心参数Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_取心参数Completed(this, new GetData_取心参数CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/Savedata_井试油参数", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Savedata_井试油参数([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data_井试油参数) {
            object[] results = this.Invoke("Savedata_井试油参数", new object[] {
                        data_井试油参数});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Savedata_井试油参数Async(byte[] data_井试油参数) {
            this.Savedata_井试油参数Async(data_井试油参数, null);
        }
        
        /// <remarks/>
        public void Savedata_井试油参数Async(byte[] data_井试油参数, object userState) {
            if ((this.Savedata_井试油参数OperationCompleted == null)) {
                this.Savedata_井试油参数OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSavedata_井试油参数OperationCompleted);
            }
            this.InvokeAsync("Savedata_井试油参数", new object[] {
                        data_井试油参数}, this.Savedata_井试油参数OperationCompleted, userState);
        }
        
        private void OnSavedata_井试油参数OperationCompleted(object arg) {
            if ((this.Savedata_井试油参数Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Savedata_井试油参数Completed(this, new Savedata_井试油参数CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetDataGList_井试油参数", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataGList_井试油参数(string string_计划任务书编号) {
            object[] results = this.Invoke("GetDataGList_井试油参数", new object[] {
                        string_计划任务书编号});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataGList_井试油参数Async(string string_计划任务书编号) {
            this.GetDataGList_井试油参数Async(string_计划任务书编号, null);
        }
        
        /// <remarks/>
        public void GetDataGList_井试油参数Async(string string_计划任务书编号, object userState) {
            if ((this.GetDataGList_井试油参数OperationCompleted == null)) {
                this.GetDataGList_井试油参数OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataGList_井试油参数OperationCompleted);
            }
            this.InvokeAsync("GetDataGList_井试油参数", new object[] {
                        string_计划任务书编号}, this.GetDataGList_井试油参数OperationCompleted, userState);
        }
        
        private void OnGetDataGList_井试油参数OperationCompleted(object arg) {
            if ((this.GetDataGList_井试油参数Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataGList_井试油参数Completed(this, new GetDataGList_井试油参数CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetDataList_项目明细", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataList_项目明细(string JOB_PLAN_CD) {
            object[] results = this.Invoke("GetDataList_项目明细", new object[] {
                        JOB_PLAN_CD});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataList_项目明细Async(string JOB_PLAN_CD) {
            this.GetDataList_项目明细Async(JOB_PLAN_CD, null);
        }
        
        /// <remarks/>
        public void GetDataList_项目明细Async(string JOB_PLAN_CD, object userState) {
            if ((this.GetDataList_项目明细OperationCompleted == null)) {
                this.GetDataList_项目明细OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataList_项目明细OperationCompleted);
            }
            this.InvokeAsync("GetDataList_项目明细", new object[] {
                        JOB_PLAN_CD}, this.GetDataList_项目明细OperationCompleted, userState);
        }
        
        private void OnGetDataList_项目明细OperationCompleted(object arg) {
            if ((this.GetDataList_项目明细Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataList_项目明细Completed(this, new GetDataList_项目明细CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetDataList_井下仪器编码", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataList_井下仪器编码() {
            object[] results = this.Invoke("GetDataList_井下仪器编码", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataList_井下仪器编码Async() {
            this.GetDataList_井下仪器编码Async(null);
        }
        
        /// <remarks/>
        public void GetDataList_井下仪器编码Async(object userState) {
            if ((this.GetDataList_井下仪器编码OperationCompleted == null)) {
                this.GetDataList_井下仪器编码OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataList_井下仪器编码OperationCompleted);
            }
            this.InvokeAsync("GetDataList_井下仪器编码", new object[0], this.GetDataList_井下仪器编码OperationCompleted, userState);
        }
        
        private void OnGetDataList_井下仪器编码OperationCompleted(object arg) {
            if ((this.GetDataList_井下仪器编码Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataList_井下仪器编码Completed(this, new GetDataList_井下仪器编码CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetDataList_车辆信息", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataList_车辆信息() {
            object[] results = this.Invoke("GetDataList_车辆信息", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataList_车辆信息Async() {
            this.GetDataList_车辆信息Async(null);
        }
        
        /// <remarks/>
        public void GetDataList_车辆信息Async(object userState) {
            if ((this.GetDataList_车辆信息OperationCompleted == null)) {
                this.GetDataList_车辆信息OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataList_车辆信息OperationCompleted);
            }
            this.InvokeAsync("GetDataList_车辆信息", new object[0], this.GetDataList_车辆信息OperationCompleted, userState);
        }
        
        private void OnGetDataList_车辆信息OperationCompleted(object arg) {
            if ((this.GetDataList_车辆信息Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataList_车辆信息Completed(this, new GetDataList_车辆信息CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_测井任务通知单", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_测井任务通知单(string string_通知单编码) {
            object[] results = this.Invoke("GetData_测井任务通知单", new object[] {
                        string_通知单编码});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_测井任务通知单Async(string string_通知单编码) {
            this.GetData_测井任务通知单Async(string_通知单编码, null);
        }
        
        /// <remarks/>
        public void GetData_测井任务通知单Async(string string_通知单编码, object userState) {
            if ((this.GetData_测井任务通知单OperationCompleted == null)) {
                this.GetData_测井任务通知单OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_测井任务通知单OperationCompleted);
            }
            this.InvokeAsync("GetData_测井任务通知单", new object[] {
                        string_通知单编码}, this.GetData_测井任务通知单OperationCompleted, userState);
        }
        
        private void OnGetData_测井任务通知单OperationCompleted(object arg) {
            if ((this.GetData_测井任务通知单Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_测井任务通知单Completed(this, new GetData_测井任务通知单CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetDataList_放射源编码", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataList_放射源编码() {
            object[] results = this.Invoke("GetDataList_放射源编码", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataList_放射源编码Async() {
            this.GetDataList_放射源编码Async(null);
        }
        
        /// <remarks/>
        public void GetDataList_放射源编码Async(object userState) {
            if ((this.GetDataList_放射源编码OperationCompleted == null)) {
                this.GetDataList_放射源编码OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataList_放射源编码OperationCompleted);
            }
            this.InvokeAsync("GetDataList_放射源编码", new object[0], this.GetDataList_放射源编码OperationCompleted, userState);
        }
        
        private void OnGetDataList_放射源编码OperationCompleted(object arg) {
            if ((this.GetDataList_放射源编码Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataList_放射源编码Completed(this, new GetDataList_放射源编码CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/Save_作业明细", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Save_作业明细([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data_作业明细, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data_遇阻情况, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data_放射源使用情况, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] dataChangedList_测井项目, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] dataRemoveList_测井项目, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] dataChangedList_井下设备, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] dataRemoveList_井下设备) {
            object[] results = this.Invoke("Save_作业明细", new object[] {
                        data_作业明细,
                        data_遇阻情况,
                        data_放射源使用情况,
                        dataChangedList_测井项目,
                        dataRemoveList_测井项目,
                        dataChangedList_井下设备,
                        dataRemoveList_井下设备});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Save_作业明细Async(byte[] data_作业明细, byte[] data_遇阻情况, byte[] data_放射源使用情况, byte[] dataChangedList_测井项目, byte[] dataRemoveList_测井项目, byte[] dataChangedList_井下设备, byte[] dataRemoveList_井下设备) {
            this.Save_作业明细Async(data_作业明细, data_遇阻情况, data_放射源使用情况, dataChangedList_测井项目, dataRemoveList_测井项目, dataChangedList_井下设备, dataRemoveList_井下设备, null);
        }
        
        /// <remarks/>
        public void Save_作业明细Async(byte[] data_作业明细, byte[] data_遇阻情况, byte[] data_放射源使用情况, byte[] dataChangedList_测井项目, byte[] dataRemoveList_测井项目, byte[] dataChangedList_井下设备, byte[] dataRemoveList_井下设备, object userState) {
            if ((this.Save_作业明细OperationCompleted == null)) {
                this.Save_作业明细OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSave_作业明细OperationCompleted);
            }
            this.InvokeAsync("Save_作业明细", new object[] {
                        data_作业明细,
                        data_遇阻情况,
                        data_放射源使用情况,
                        dataChangedList_测井项目,
                        dataRemoveList_测井项目,
                        dataChangedList_井下设备,
                        dataRemoveList_井下设备}, this.Save_作业明细OperationCompleted, userState);
        }
        
        private void OnSave_作业明细OperationCompleted(object arg) {
            if ((this.Save_作业明细Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Save_作业明细Completed(this, new Save_作业明细CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_项目明细", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_项目明细(string JOB_PLAN_CD, string DOWN_WELL_SEQUENCE) {
            object[] results = this.Invoke("GetData_项目明细", new object[] {
                        JOB_PLAN_CD,
                        DOWN_WELL_SEQUENCE});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_项目明细Async(string JOB_PLAN_CD, string DOWN_WELL_SEQUENCE) {
            this.GetData_项目明细Async(JOB_PLAN_CD, DOWN_WELL_SEQUENCE, null);
        }
        
        /// <remarks/>
        public void GetData_项目明细Async(string JOB_PLAN_CD, string DOWN_WELL_SEQUENCE, object userState) {
            if ((this.GetData_项目明细OperationCompleted == null)) {
                this.GetData_项目明细OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_项目明细OperationCompleted);
            }
            this.InvokeAsync("GetData_项目明细", new object[] {
                        JOB_PLAN_CD,
                        DOWN_WELL_SEQUENCE}, this.GetData_项目明细OperationCompleted, userState);
        }
        
        private void OnGetData_项目明细OperationCompleted(object arg) {
            if ((this.GetData_项目明细Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_项目明细Completed(this, new GetData_项目明细CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_专家指导", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_专家指导(string JOB_PLAN_CD, string DOWN_WELL_SEQUENCE) {
            object[] results = this.Invoke("GetData_专家指导", new object[] {
                        JOB_PLAN_CD,
                        DOWN_WELL_SEQUENCE});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_专家指导Async(string JOB_PLAN_CD, string DOWN_WELL_SEQUENCE) {
            this.GetData_专家指导Async(JOB_PLAN_CD, DOWN_WELL_SEQUENCE, null);
        }
        
        /// <remarks/>
        public void GetData_专家指导Async(string JOB_PLAN_CD, string DOWN_WELL_SEQUENCE, object userState) {
            if ((this.GetData_专家指导OperationCompleted == null)) {
                this.GetData_专家指导OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_专家指导OperationCompleted);
            }
            this.InvokeAsync("GetData_专家指导", new object[] {
                        JOB_PLAN_CD,
                        DOWN_WELL_SEQUENCE}, this.GetData_专家指导OperationCompleted, userState);
        }
        
        private void OnGetData_专家指导OperationCompleted(object arg) {
            if ((this.GetData_专家指导Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_专家指导Completed(this, new GetData_专家指导CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/Save_专家指导", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Save_专家指导([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data_远程指导, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data_测井监督) {
            object[] results = this.Invoke("Save_专家指导", new object[] {
                        data_远程指导,
                        data_测井监督});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Save_专家指导Async(byte[] data_远程指导, byte[] data_测井监督) {
            this.Save_专家指导Async(data_远程指导, data_测井监督, null);
        }
        
        /// <remarks/>
        public void Save_专家指导Async(byte[] data_远程指导, byte[] data_测井监督, object userState) {
            if ((this.Save_专家指导OperationCompleted == null)) {
                this.Save_专家指导OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSave_专家指导OperationCompleted);
            }
            this.InvokeAsync("Save_专家指导", new object[] {
                        data_远程指导,
                        data_测井监督}, this.Save_专家指导OperationCompleted, userState);
        }
        
        private void OnSave_专家指导OperationCompleted(object arg) {
            if ((this.Save_专家指导Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Save_专家指导Completed(this, new Save_专家指导CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetProcessWellJob", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProcessWellJob() {
            object[] results = this.Invoke("GetProcessWellJob", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProcessWellJobAsync() {
            this.GetProcessWellJobAsync(null);
        }
        
        /// <remarks/>
        public void GetProcessWellJobAsync(object userState) {
            if ((this.GetProcessWellJobOperationCompleted == null)) {
                this.GetProcessWellJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProcessWellJobOperationCompleted);
            }
            this.InvokeAsync("GetProcessWellJob", new object[0], this.GetProcessWellJobOperationCompleted, userState);
        }
        
        private void OnGetProcessWellJobOperationCompleted(object arg) {
            if ((this.GetProcessWellJobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProcessWellJobCompleted(this, new GetProcessWellJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetProcessDataJobSource", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProcessDataJobSource(string job_id) {
            object[] results = this.Invoke("GetProcessDataJobSource", new object[] {
                        job_id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProcessDataJobSourceAsync(string job_id) {
            this.GetProcessDataJobSourceAsync(job_id, null);
        }
        
        /// <remarks/>
        public void GetProcessDataJobSourceAsync(string job_id, object userState) {
            if ((this.GetProcessDataJobSourceOperationCompleted == null)) {
                this.GetProcessDataJobSourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProcessDataJobSourceOperationCompleted);
            }
            this.InvokeAsync("GetProcessDataJobSource", new object[] {
                        job_id}, this.GetProcessDataJobSourceOperationCompleted, userState);
        }
        
        private void OnGetProcessDataJobSourceOperationCompleted(object arg) {
            if ((this.GetProcessDataJobSourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProcessDataJobSourceCompleted(this, new GetProcessDataJobSourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/Save_解释处理作业", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Save_解释处理作业([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byte_DM_LOG_PROCESS, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byte_DM_LOG_SOURCE_DATA, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byte_PRO_LOG_DATA_PUBLISH, System.Data.DataTable processItems, System.Data.DataTable processMaps, System.Data.DataTable processCurveRating, System.Data.DataTable originalMaps) {
            object[] results = this.Invoke("Save_解释处理作业", new object[] {
                        byte_DM_LOG_PROCESS,
                        byte_DM_LOG_SOURCE_DATA,
                        byte_PRO_LOG_DATA_PUBLISH,
                        processItems,
                        processMaps,
                        processCurveRating,
                        originalMaps});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Save_解释处理作业Async(byte[] byte_DM_LOG_PROCESS, byte[] byte_DM_LOG_SOURCE_DATA, byte[] byte_PRO_LOG_DATA_PUBLISH, System.Data.DataTable processItems, System.Data.DataTable processMaps, System.Data.DataTable processCurveRating, System.Data.DataTable originalMaps) {
            this.Save_解释处理作业Async(byte_DM_LOG_PROCESS, byte_DM_LOG_SOURCE_DATA, byte_PRO_LOG_DATA_PUBLISH, processItems, processMaps, processCurveRating, originalMaps, null);
        }
        
        /// <remarks/>
        public void Save_解释处理作业Async(byte[] byte_DM_LOG_PROCESS, byte[] byte_DM_LOG_SOURCE_DATA, byte[] byte_PRO_LOG_DATA_PUBLISH, System.Data.DataTable processItems, System.Data.DataTable processMaps, System.Data.DataTable processCurveRating, System.Data.DataTable originalMaps, object userState) {
            if ((this.Save_解释处理作业OperationCompleted == null)) {
                this.Save_解释处理作业OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSave_解释处理作业OperationCompleted);
            }
            this.InvokeAsync("Save_解释处理作业", new object[] {
                        byte_DM_LOG_PROCESS,
                        byte_DM_LOG_SOURCE_DATA,
                        byte_PRO_LOG_DATA_PUBLISH,
                        processItems,
                        processMaps,
                        processCurveRating,
                        originalMaps}, this.Save_解释处理作业OperationCompleted, userState);
        }
        
        private void OnSave_解释处理作业OperationCompleted(object arg) {
            if ((this.Save_解释处理作业Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Save_解释处理作业Completed(this, new Save_解释处理作业CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_文档类型", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_文档类型() {
            object[] results = this.Invoke("GetData_文档类型", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_文档类型Async() {
            this.GetData_文档类型Async(null);
        }
        
        /// <remarks/>
        public void GetData_文档类型Async(object userState) {
            if ((this.GetData_文档类型OperationCompleted == null)) {
                this.GetData_文档类型OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_文档类型OperationCompleted);
            }
            this.InvokeAsync("GetData_文档类型", new object[0], this.GetData_文档类型OperationCompleted, userState);
        }
        
        private void OnGetData_文档类型OperationCompleted(object arg) {
            if ((this.GetData_文档类型Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_文档类型Completed(this, new GetData_文档类型CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_图件类型", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_图件类型() {
            object[] results = this.Invoke("GetData_图件类型", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_图件类型Async() {
            this.GetData_图件类型Async(null);
        }
        
        /// <remarks/>
        public void GetData_图件类型Async(object userState) {
            if ((this.GetData_图件类型OperationCompleted == null)) {
                this.GetData_图件类型OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_图件类型OperationCompleted);
            }
            this.InvokeAsync("GetData_图件类型", new object[0], this.GetData_图件类型OperationCompleted, userState);
        }
        
        private void OnGetData_图件类型OperationCompleted(object arg) {
            if ((this.GetData_图件类型Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_图件类型Completed(this, new GetData_图件类型CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_解释处理项目编码", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_解释处理项目编码() {
            object[] results = this.Invoke("GetData_解释处理项目编码", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_解释处理项目编码Async() {
            this.GetData_解释处理项目编码Async(null);
        }
        
        /// <remarks/>
        public void GetData_解释处理项目编码Async(object userState) {
            if ((this.GetData_解释处理项目编码OperationCompleted == null)) {
                this.GetData_解释处理项目编码OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_解释处理项目编码OperationCompleted);
            }
            this.InvokeAsync("GetData_解释处理项目编码", new object[0], this.GetData_解释处理项目编码OperationCompleted, userState);
        }
        
        private void OnGetData_解释处理项目编码OperationCompleted(object arg) {
            if ((this.GetData_解释处理项目编码Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_解释处理项目编码Completed(this, new GetData_解释处理项目编码CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_解释图件编码", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_解释图件编码() {
            object[] results = this.Invoke("GetData_解释图件编码", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_解释图件编码Async() {
            this.GetData_解释图件编码Async(null);
        }
        
        /// <remarks/>
        public void GetData_解释图件编码Async(object userState) {
            if ((this.GetData_解释图件编码OperationCompleted == null)) {
                this.GetData_解释图件编码OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_解释图件编码OperationCompleted);
            }
            this.InvokeAsync("GetData_解释图件编码", new object[0], this.GetData_解释图件编码OperationCompleted, userState);
        }
        
        private void OnGetData_解释图件编码OperationCompleted(object arg) {
            if ((this.GetData_解释图件编码Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_解释图件编码Completed(this, new GetData_解释图件编码CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetDataList_解释处理作业", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataList_解释处理作业([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] searchModel, int page, out int total) {
            object[] results = this.Invoke("GetDataList_解释处理作业", new object[] {
                        searchModel,
                        page});
            total = ((int)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataList_解释处理作业Async(byte[] searchModel, int page) {
            this.GetDataList_解释处理作业Async(searchModel, page, null);
        }
        
        /// <remarks/>
        public void GetDataList_解释处理作业Async(byte[] searchModel, int page, object userState) {
            if ((this.GetDataList_解释处理作业OperationCompleted == null)) {
                this.GetDataList_解释处理作业OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataList_解释处理作业OperationCompleted);
            }
            this.InvokeAsync("GetDataList_解释处理作业", new object[] {
                        searchModel,
                        page}, this.GetDataList_解释处理作业OperationCompleted, userState);
        }
        
        private void OnGetDataList_解释处理作业OperationCompleted(object arg) {
            if ((this.GetDataList_解释处理作业Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataList_解释处理作业Completed(this, new GetDataList_解释处理作业CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetDefaultValue_解释处理作业", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDefaultValue_解释处理作业(string job_plan_cd) {
            object[] results = this.Invoke("GetDefaultValue_解释处理作业", new object[] {
                        job_plan_cd});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDefaultValue_解释处理作业Async(string job_plan_cd) {
            this.GetDefaultValue_解释处理作业Async(job_plan_cd, null);
        }
        
        /// <remarks/>
        public void GetDefaultValue_解释处理作业Async(string job_plan_cd, object userState) {
            if ((this.GetDefaultValue_解释处理作业OperationCompleted == null)) {
                this.GetDefaultValue_解释处理作业OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefaultValue_解释处理作业OperationCompleted);
            }
            this.InvokeAsync("GetDefaultValue_解释处理作业", new object[] {
                        job_plan_cd}, this.GetDefaultValue_解释处理作业OperationCompleted, userState);
        }
        
        private void OnGetDefaultValue_解释处理作业OperationCompleted(object arg) {
            if ((this.GetDefaultValue_解释处理作业Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefaultValue_解释处理作业Completed(this, new GetDefaultValue_解释处理作业CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_解释处理作业", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_解释处理作业(string process_id) {
            object[] results = this.Invoke("GetData_解释处理作业", new object[] {
                        process_id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_解释处理作业Async(string process_id) {
            this.GetData_解释处理作业Async(process_id, null);
        }
        
        /// <remarks/>
        public void GetData_解释处理作业Async(string process_id, object userState) {
            if ((this.GetData_解释处理作业OperationCompleted == null)) {
                this.GetData_解释处理作业OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_解释处理作业OperationCompleted);
            }
            this.InvokeAsync("GetData_解释处理作业", new object[] {
                        process_id}, this.GetData_解释处理作业OperationCompleted, userState);
        }
        
        private void OnGetData_解释处理作业OperationCompleted(object arg) {
            if ((this.GetData_解释处理作业Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_解释处理作业Completed(this, new GetData_解释处理作业CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/SaveDataList_综合解释成果数据", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveDataList_综合解释成果数据(string PROCESS_ID, System.Data.DataTable dt) {
            object[] results = this.Invoke("SaveDataList_综合解释成果数据", new object[] {
                        PROCESS_ID,
                        dt});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDataList_综合解释成果数据Async(string PROCESS_ID, System.Data.DataTable dt) {
            this.SaveDataList_综合解释成果数据Async(PROCESS_ID, dt, null);
        }
        
        /// <remarks/>
        public void SaveDataList_综合解释成果数据Async(string PROCESS_ID, System.Data.DataTable dt, object userState) {
            if ((this.SaveDataList_综合解释成果数据OperationCompleted == null)) {
                this.SaveDataList_综合解释成果数据OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDataList_综合解释成果数据OperationCompleted);
            }
            this.InvokeAsync("SaveDataList_综合解释成果数据", new object[] {
                        PROCESS_ID,
                        dt}, this.SaveDataList_综合解释成果数据OperationCompleted, userState);
        }
        
        private void OnSaveDataList_综合解释成果数据OperationCompleted(object arg) {
            if ((this.SaveDataList_综合解释成果数据Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDataList_综合解释成果数据Completed(this, new SaveDataList_综合解释成果数据CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetDataList_综合解释成果数据", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataList_综合解释成果数据(string PROCESS_ID) {
            object[] results = this.Invoke("GetDataList_综合解释成果数据", new object[] {
                        PROCESS_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataList_综合解释成果数据Async(string PROCESS_ID) {
            this.GetDataList_综合解释成果数据Async(PROCESS_ID, null);
        }
        
        /// <remarks/>
        public void GetDataList_综合解释成果数据Async(string PROCESS_ID, object userState) {
            if ((this.GetDataList_综合解释成果数据OperationCompleted == null)) {
                this.GetDataList_综合解释成果数据OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataList_综合解释成果数据OperationCompleted);
            }
            this.InvokeAsync("GetDataList_综合解释成果数据", new object[] {
                        PROCESS_ID}, this.GetDataList_综合解释成果数据OperationCompleted, userState);
        }
        
        private void OnGetDataList_综合解释成果数据OperationCompleted(object arg) {
            if ((this.GetDataList_综合解释成果数据Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataList_综合解释成果数据Completed(this, new GetDataList_综合解释成果数据CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/SaveDataList_页岩气解释成果数据", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveDataList_页岩气解释成果数据(string PROCESS_ID, System.Data.DataTable dt) {
            this.Invoke("SaveDataList_页岩气解释成果数据", new object[] {
                        PROCESS_ID,
                        dt});
        }
        
        /// <remarks/>
        public void SaveDataList_页岩气解释成果数据Async(string PROCESS_ID, System.Data.DataTable dt) {
            this.SaveDataList_页岩气解释成果数据Async(PROCESS_ID, dt, null);
        }
        
        /// <remarks/>
        public void SaveDataList_页岩气解释成果数据Async(string PROCESS_ID, System.Data.DataTable dt, object userState) {
            if ((this.SaveDataList_页岩气解释成果数据OperationCompleted == null)) {
                this.SaveDataList_页岩气解释成果数据OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDataList_页岩气解释成果数据OperationCompleted);
            }
            this.InvokeAsync("SaveDataList_页岩气解释成果数据", new object[] {
                        PROCESS_ID,
                        dt}, this.SaveDataList_页岩气解释成果数据OperationCompleted, userState);
        }
        
        private void OnSaveDataList_页岩气解释成果数据OperationCompleted(object arg) {
            if ((this.SaveDataList_页岩气解释成果数据Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDataList_页岩气解释成果数据Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetDataList_页岩气解释成果数据", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataList_页岩气解释成果数据(string PROCESS_ID) {
            object[] results = this.Invoke("GetDataList_页岩气解释成果数据", new object[] {
                        PROCESS_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataList_页岩气解释成果数据Async(string PROCESS_ID) {
            this.GetDataList_页岩气解释成果数据Async(PROCESS_ID, null);
        }
        
        /// <remarks/>
        public void GetDataList_页岩气解释成果数据Async(string PROCESS_ID, object userState) {
            if ((this.GetDataList_页岩气解释成果数据OperationCompleted == null)) {
                this.GetDataList_页岩气解释成果数据OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataList_页岩气解释成果数据OperationCompleted);
            }
            this.InvokeAsync("GetDataList_页岩气解释成果数据", new object[] {
                        PROCESS_ID}, this.GetDataList_页岩气解释成果数据OperationCompleted, userState);
        }
        
        private void OnGetDataList_页岩气解释成果数据OperationCompleted(object arg) {
            if ((this.GetDataList_页岩气解释成果数据Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataList_页岩气解释成果数据Completed(this, new GetDataList_页岩气解释成果数据CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetCurveNames", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCurveNames(decimal item_id) {
            object[] results = this.Invoke("GetCurveNames", new object[] {
                        item_id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurveNamesAsync(decimal item_id) {
            this.GetCurveNamesAsync(item_id, null);
        }
        
        /// <remarks/>
        public void GetCurveNamesAsync(decimal item_id, object userState) {
            if ((this.GetCurveNamesOperationCompleted == null)) {
                this.GetCurveNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurveNamesOperationCompleted);
            }
            this.InvokeAsync("GetCurveNames", new object[] {
                        item_id}, this.GetCurveNamesOperationCompleted, userState);
        }
        
        private void OnGetCurveNamesOperationCompleted(object arg) {
            if ((this.GetCurveNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurveNamesCompleted(this, new GetCurveNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetMapCurveInfo", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMapCurveInfo(string map_name) {
            object[] results = this.Invoke("GetMapCurveInfo", new object[] {
                        map_name});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMapCurveInfoAsync(string map_name) {
            this.GetMapCurveInfoAsync(map_name, null);
        }
        
        /// <remarks/>
        public void GetMapCurveInfoAsync(string map_name, object userState) {
            if ((this.GetMapCurveInfoOperationCompleted == null)) {
                this.GetMapCurveInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMapCurveInfoOperationCompleted);
            }
            this.InvokeAsync("GetMapCurveInfo", new object[] {
                        map_name}, this.GetMapCurveInfoOperationCompleted, userState);
        }
        
        private void OnGetMapCurveInfoOperationCompleted(object arg) {
            if ((this.GetMapCurveInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMapCurveInfoCompleted(this, new GetMapCurveInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetAllCurveNames", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllCurveNames() {
            object[] results = this.Invoke("GetAllCurveNames", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllCurveNamesAsync() {
            this.GetAllCurveNamesAsync(null);
        }
        
        /// <remarks/>
        public void GetAllCurveNamesAsync(object userState) {
            if ((this.GetAllCurveNamesOperationCompleted == null)) {
                this.GetAllCurveNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCurveNamesOperationCompleted);
            }
            this.InvokeAsync("GetAllCurveNames", new object[0], this.GetAllCurveNamesOperationCompleted, userState);
        }
        
        private void OnGetAllCurveNamesOperationCompleted(object arg) {
            if ((this.GetAllCurveNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCurveNamesCompleted(this, new GetAllCurveNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/SaveDataList_固井质量评价数据", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveDataList_固井质量评价数据(string PROCESS_ID, System.Data.DataTable dt) {
            object[] results = this.Invoke("SaveDataList_固井质量评价数据", new object[] {
                        PROCESS_ID,
                        dt});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDataList_固井质量评价数据Async(string PROCESS_ID, System.Data.DataTable dt) {
            this.SaveDataList_固井质量评价数据Async(PROCESS_ID, dt, null);
        }
        
        /// <remarks/>
        public void SaveDataList_固井质量评价数据Async(string PROCESS_ID, System.Data.DataTable dt, object userState) {
            if ((this.SaveDataList_固井质量评价数据OperationCompleted == null)) {
                this.SaveDataList_固井质量评价数据OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDataList_固井质量评价数据OperationCompleted);
            }
            this.InvokeAsync("SaveDataList_固井质量评价数据", new object[] {
                        PROCESS_ID,
                        dt}, this.SaveDataList_固井质量评价数据OperationCompleted, userState);
        }
        
        private void OnSaveDataList_固井质量评价数据OperationCompleted(object arg) {
            if ((this.SaveDataList_固井质量评价数据Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDataList_固井质量评价数据Completed(this, new SaveDataList_固井质量评价数据CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetDataList_固井质量评价数据", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataList_固井质量评价数据(string PROCESS_ID) {
            object[] results = this.Invoke("GetDataList_固井质量评价数据", new object[] {
                        PROCESS_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataList_固井质量评价数据Async(string PROCESS_ID) {
            this.GetDataList_固井质量评价数据Async(PROCESS_ID, null);
        }
        
        /// <remarks/>
        public void GetDataList_固井质量评价数据Async(string PROCESS_ID, object userState) {
            if ((this.GetDataList_固井质量评价数据OperationCompleted == null)) {
                this.GetDataList_固井质量评价数据OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataList_固井质量评价数据OperationCompleted);
            }
            this.InvokeAsync("GetDataList_固井质量评价数据", new object[] {
                        PROCESS_ID}, this.GetDataList_固井质量评价数据OperationCompleted, userState);
        }
        
        private void OnGetDataList_固井质量评价数据OperationCompleted(object arg) {
            if ((this.GetDataList_固井质量评价数据Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataList_固井质量评价数据Completed(this, new GetDataList_固井质量评价数据CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/SaveDataList_测量井斜数据", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveDataList_测量井斜数据(string PROCESS_ID, System.Data.DataTable dt) {
            object[] results = this.Invoke("SaveDataList_测量井斜数据", new object[] {
                        PROCESS_ID,
                        dt});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDataList_测量井斜数据Async(string PROCESS_ID, System.Data.DataTable dt) {
            this.SaveDataList_测量井斜数据Async(PROCESS_ID, dt, null);
        }
        
        /// <remarks/>
        public void SaveDataList_测量井斜数据Async(string PROCESS_ID, System.Data.DataTable dt, object userState) {
            if ((this.SaveDataList_测量井斜数据OperationCompleted == null)) {
                this.SaveDataList_测量井斜数据OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDataList_测量井斜数据OperationCompleted);
            }
            this.InvokeAsync("SaveDataList_测量井斜数据", new object[] {
                        PROCESS_ID,
                        dt}, this.SaveDataList_测量井斜数据OperationCompleted, userState);
        }
        
        private void OnSaveDataList_测量井斜数据OperationCompleted(object arg) {
            if ((this.SaveDataList_测量井斜数据Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDataList_测量井斜数据Completed(this, new SaveDataList_测量井斜数据CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetDataList_测量井斜数据", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataList_测量井斜数据(string PROCESS_ID) {
            object[] results = this.Invoke("GetDataList_测量井斜数据", new object[] {
                        PROCESS_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataList_测量井斜数据Async(string PROCESS_ID) {
            this.GetDataList_测量井斜数据Async(PROCESS_ID, null);
        }
        
        /// <remarks/>
        public void GetDataList_测量井斜数据Async(string PROCESS_ID, object userState) {
            if ((this.GetDataList_测量井斜数据OperationCompleted == null)) {
                this.GetDataList_测量井斜数据OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataList_测量井斜数据OperationCompleted);
            }
            this.InvokeAsync("GetDataList_测量井斜数据", new object[] {
                        PROCESS_ID}, this.GetDataList_测量井斜数据OperationCompleted, userState);
        }
        
        private void OnGetDataList_测量井斜数据OperationCompleted(object arg) {
            if ((this.GetDataList_测量井斜数据Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataList_测量井斜数据Completed(this, new GetDataList_测量井斜数据CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/SaveDataList_综合解释成果曲线数据", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveDataList_综合解释成果曲线数据(string PROCESS_ID, System.Data.DataTable dt) {
            object[] results = this.Invoke("SaveDataList_综合解释成果曲线数据", new object[] {
                        PROCESS_ID,
                        dt});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDataList_综合解释成果曲线数据Async(string PROCESS_ID, System.Data.DataTable dt) {
            this.SaveDataList_综合解释成果曲线数据Async(PROCESS_ID, dt, null);
        }
        
        /// <remarks/>
        public void SaveDataList_综合解释成果曲线数据Async(string PROCESS_ID, System.Data.DataTable dt, object userState) {
            if ((this.SaveDataList_综合解释成果曲线数据OperationCompleted == null)) {
                this.SaveDataList_综合解释成果曲线数据OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDataList_综合解释成果曲线数据OperationCompleted);
            }
            this.InvokeAsync("SaveDataList_综合解释成果曲线数据", new object[] {
                        PROCESS_ID,
                        dt}, this.SaveDataList_综合解释成果曲线数据OperationCompleted, userState);
        }
        
        private void OnSaveDataList_综合解释成果曲线数据OperationCompleted(object arg) {
            if ((this.SaveDataList_综合解释成果曲线数据Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDataList_综合解释成果曲线数据Completed(this, new SaveDataList_综合解释成果曲线数据CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/SaveCurveDataCache", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> SaveCurveDataCache(string process_id, string md5, string sha1, long length, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] comboBoxsSetting) {
            object[] results = this.Invoke("SaveCurveDataCache", new object[] {
                        process_id,
                        md5,
                        sha1,
                        length,
                        comboBoxsSetting});
            return ((System.Nullable<decimal>)(results[0]));
        }
        
        /// <remarks/>
        public void SaveCurveDataCacheAsync(string process_id, string md5, string sha1, long length, byte[] comboBoxsSetting) {
            this.SaveCurveDataCacheAsync(process_id, md5, sha1, length, comboBoxsSetting, null);
        }
        
        /// <remarks/>
        public void SaveCurveDataCacheAsync(string process_id, string md5, string sha1, long length, byte[] comboBoxsSetting, object userState) {
            if ((this.SaveCurveDataCacheOperationCompleted == null)) {
                this.SaveCurveDataCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCurveDataCacheOperationCompleted);
            }
            this.InvokeAsync("SaveCurveDataCache", new object[] {
                        process_id,
                        md5,
                        sha1,
                        length,
                        comboBoxsSetting}, this.SaveCurveDataCacheOperationCompleted, userState);
        }
        
        private void OnSaveCurveDataCacheOperationCompleted(object arg) {
            if ((this.SaveCurveDataCacheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCurveDataCacheCompleted(this, new SaveCurveDataCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/TransOldComCurveData", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TransOldComCurveData() {
            this.Invoke("TransOldComCurveData", new object[0]);
        }
        
        /// <remarks/>
        public void TransOldComCurveDataAsync() {
            this.TransOldComCurveDataAsync(null);
        }
        
        /// <remarks/>
        public void TransOldComCurveDataAsync(object userState) {
            if ((this.TransOldComCurveDataOperationCompleted == null)) {
                this.TransOldComCurveDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransOldComCurveDataOperationCompleted);
            }
            this.InvokeAsync("TransOldComCurveData", new object[0], this.TransOldComCurveDataOperationCompleted, userState);
        }
        
        private void OnTransOldComCurveDataOperationCompleted(object arg) {
            if ((this.TransOldComCurveDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransOldComCurveDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/TransOldProcessingCurveData", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TransOldProcessingCurveData() {
            this.Invoke("TransOldProcessingCurveData", new object[0]);
        }
        
        /// <remarks/>
        public void TransOldProcessingCurveDataAsync() {
            this.TransOldProcessingCurveDataAsync(null);
        }
        
        /// <remarks/>
        public void TransOldProcessingCurveDataAsync(object userState) {
            if ((this.TransOldProcessingCurveDataOperationCompleted == null)) {
                this.TransOldProcessingCurveDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransOldProcessingCurveDataOperationCompleted);
            }
            this.InvokeAsync("TransOldProcessingCurveData", new object[0], this.TransOldProcessingCurveDataOperationCompleted, userState);
        }
        
        private void OnTransOldProcessingCurveDataOperationCompleted(object arg) {
            if ((this.TransOldProcessingCurveDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransOldProcessingCurveDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetCurveDataCache", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCurveDataCache(string process_id) {
            object[] results = this.Invoke("GetCurveDataCache", new object[] {
                        process_id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurveDataCacheAsync(string process_id) {
            this.GetCurveDataCacheAsync(process_id, null);
        }
        
        /// <remarks/>
        public void GetCurveDataCacheAsync(string process_id, object userState) {
            if ((this.GetCurveDataCacheOperationCompleted == null)) {
                this.GetCurveDataCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurveDataCacheOperationCompleted);
            }
            this.InvokeAsync("GetCurveDataCache", new object[] {
                        process_id}, this.GetCurveDataCacheOperationCompleted, userState);
        }
        
        private void OnGetCurveDataCacheOperationCompleted(object arg) {
            if ((this.GetCurveDataCacheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurveDataCacheCompleted(this, new GetCurveDataCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetCurveData", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCurveData(string PROCESS_ID) {
            object[] results = this.Invoke("GetCurveData", new object[] {
                        PROCESS_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurveDataAsync(string PROCESS_ID) {
            this.GetCurveDataAsync(PROCESS_ID, null);
        }
        
        /// <remarks/>
        public void GetCurveDataAsync(string PROCESS_ID, object userState) {
            if ((this.GetCurveDataOperationCompleted == null)) {
                this.GetCurveDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurveDataOperationCompleted);
            }
            this.InvokeAsync("GetCurveData", new object[] {
                        PROCESS_ID}, this.GetCurveDataOperationCompleted, userState);
        }
        
        private void OnGetCurveDataOperationCompleted(object arg) {
            if ((this.GetCurveDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurveDataCompleted(this, new GetCurveDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/SaveCurveData", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveCurveData(System.Data.DataTable dt, string PROCESS_ID) {
            object[] results = this.Invoke("SaveCurveData", new object[] {
                        dt,
                        PROCESS_ID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveCurveDataAsync(System.Data.DataTable dt, string PROCESS_ID) {
            this.SaveCurveDataAsync(dt, PROCESS_ID, null);
        }
        
        /// <remarks/>
        public void SaveCurveDataAsync(System.Data.DataTable dt, string PROCESS_ID, object userState) {
            if ((this.SaveCurveDataOperationCompleted == null)) {
                this.SaveCurveDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCurveDataOperationCompleted);
            }
            this.InvokeAsync("SaveCurveData", new object[] {
                        dt,
                        PROCESS_ID}, this.SaveCurveDataOperationCompleted, userState);
        }
        
        private void OnSaveCurveDataOperationCompleted(object arg) {
            if ((this.SaveCurveDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCurveDataCompleted(this, new SaveCurveDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetThreePressureData", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetThreePressureData(string PROCESS_ID) {
            object[] results = this.Invoke("GetThreePressureData", new object[] {
                        PROCESS_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetThreePressureDataAsync(string PROCESS_ID) {
            this.GetThreePressureDataAsync(PROCESS_ID, null);
        }
        
        /// <remarks/>
        public void GetThreePressureDataAsync(string PROCESS_ID, object userState) {
            if ((this.GetThreePressureDataOperationCompleted == null)) {
                this.GetThreePressureDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetThreePressureDataOperationCompleted);
            }
            this.InvokeAsync("GetThreePressureData", new object[] {
                        PROCESS_ID}, this.GetThreePressureDataOperationCompleted, userState);
        }
        
        private void OnGetThreePressureDataOperationCompleted(object arg) {
            if ((this.GetThreePressureDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetThreePressureDataCompleted(this, new GetThreePressureDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/SaveThreePressureData", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveThreePressureData(System.Data.DataTable dt, string PROCESS_ID) {
            object[] results = this.Invoke("SaveThreePressureData", new object[] {
                        dt,
                        PROCESS_ID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveThreePressureDataAsync(System.Data.DataTable dt, string PROCESS_ID) {
            this.SaveThreePressureDataAsync(dt, PROCESS_ID, null);
        }
        
        /// <remarks/>
        public void SaveThreePressureDataAsync(System.Data.DataTable dt, string PROCESS_ID, object userState) {
            if ((this.SaveThreePressureDataOperationCompleted == null)) {
                this.SaveThreePressureDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveThreePressureDataOperationCompleted);
            }
            this.InvokeAsync("SaveThreePressureData", new object[] {
                        dt,
                        PROCESS_ID}, this.SaveThreePressureDataOperationCompleted, userState);
        }
        
        private void OnSaveThreePressureDataOperationCompleted(object arg) {
            if ((this.SaveThreePressureDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveThreePressureDataCompleted(this, new SaveThreePressureDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetCurveDataCachePage", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetCurveDataCachePage(decimal uploadid, int startLine, int page, out int countLine) {
            object[] results = this.Invoke("GetCurveDataCachePage", new object[] {
                        uploadid,
                        startLine,
                        page});
            countLine = ((int)(results[1]));
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCurveDataCachePageAsync(decimal uploadid, int startLine, int page) {
            this.GetCurveDataCachePageAsync(uploadid, startLine, page, null);
        }
        
        /// <remarks/>
        public void GetCurveDataCachePageAsync(decimal uploadid, int startLine, int page, object userState) {
            if ((this.GetCurveDataCachePageOperationCompleted == null)) {
                this.GetCurveDataCachePageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurveDataCachePageOperationCompleted);
            }
            this.InvokeAsync("GetCurveDataCachePage", new object[] {
                        uploadid,
                        startLine,
                        page}, this.GetCurveDataCachePageOperationCompleted, userState);
        }
        
        private void OnGetCurveDataCachePageOperationCompleted(object arg) {
            if ((this.GetCurveDataCachePageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurveDataCachePageCompleted(this, new GetCurveDataCachePageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetDataList_综合解释成果曲线数据", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataList_综合解释成果曲线数据(string PROCESS_ID) {
            object[] results = this.Invoke("GetDataList_综合解释成果曲线数据", new object[] {
                        PROCESS_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataList_综合解释成果曲线数据Async(string PROCESS_ID) {
            this.GetDataList_综合解释成果曲线数据Async(PROCESS_ID, null);
        }
        
        /// <remarks/>
        public void GetDataList_综合解释成果曲线数据Async(string PROCESS_ID, object userState) {
            if ((this.GetDataList_综合解释成果曲线数据OperationCompleted == null)) {
                this.GetDataList_综合解释成果曲线数据OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataList_综合解释成果曲线数据OperationCompleted);
            }
            this.InvokeAsync("GetDataList_综合解释成果曲线数据", new object[] {
                        PROCESS_ID}, this.GetDataList_综合解释成果曲线数据OperationCompleted, userState);
        }
        
        private void OnGetDataList_综合解释成果曲线数据OperationCompleted(object arg) {
            if ((this.GetDataList_综合解释成果曲线数据Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataList_综合解释成果曲线数据Completed(this, new GetDataList_综合解释成果曲线数据CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/SaveDataList_测井分层数据", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveDataList_测井分层数据(string PROCESS_ID, System.Data.DataTable dt) {
            object[] results = this.Invoke("SaveDataList_测井分层数据", new object[] {
                        PROCESS_ID,
                        dt});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDataList_测井分层数据Async(string PROCESS_ID, System.Data.DataTable dt) {
            this.SaveDataList_测井分层数据Async(PROCESS_ID, dt, null);
        }
        
        /// <remarks/>
        public void SaveDataList_测井分层数据Async(string PROCESS_ID, System.Data.DataTable dt, object userState) {
            if ((this.SaveDataList_测井分层数据OperationCompleted == null)) {
                this.SaveDataList_测井分层数据OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDataList_测井分层数据OperationCompleted);
            }
            this.InvokeAsync("SaveDataList_测井分层数据", new object[] {
                        PROCESS_ID,
                        dt}, this.SaveDataList_测井分层数据OperationCompleted, userState);
        }
        
        private void OnSaveDataList_测井分层数据OperationCompleted(object arg) {
            if ((this.SaveDataList_测井分层数据Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDataList_测井分层数据Completed(this, new SaveDataList_测井分层数据CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetDataList_测井分层数据", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataList_测井分层数据(string PROCESS_ID) {
            object[] results = this.Invoke("GetDataList_测井分层数据", new object[] {
                        PROCESS_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataList_测井分层数据Async(string PROCESS_ID) {
            this.GetDataList_测井分层数据Async(PROCESS_ID, null);
        }
        
        /// <remarks/>
        public void GetDataList_测井分层数据Async(string PROCESS_ID, object userState) {
            if ((this.GetDataList_测井分层数据OperationCompleted == null)) {
                this.GetDataList_测井分层数据OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataList_测井分层数据OperationCompleted);
            }
            this.InvokeAsync("GetDataList_测井分层数据", new object[] {
                        PROCESS_ID}, this.GetDataList_测井分层数据OperationCompleted, userState);
        }
        
        private void OnGetDataList_测井分层数据OperationCompleted(object arg) {
            if ((this.GetDataList_测井分层数据Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataList_测井分层数据Completed(this, new GetDataList_测井分层数据CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetAllProcessFileByWellName", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllProcessFileByWellName(string well_name) {
            object[] results = this.Invoke("GetAllProcessFileByWellName", new object[] {
                        well_name});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllProcessFileByWellNameAsync(string well_name) {
            this.GetAllProcessFileByWellNameAsync(well_name, null);
        }
        
        /// <remarks/>
        public void GetAllProcessFileByWellNameAsync(string well_name, object userState) {
            if ((this.GetAllProcessFileByWellNameOperationCompleted == null)) {
                this.GetAllProcessFileByWellNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllProcessFileByWellNameOperationCompleted);
            }
            this.InvokeAsync("GetAllProcessFileByWellName", new object[] {
                        well_name}, this.GetAllProcessFileByWellNameOperationCompleted, userState);
        }
        
        private void OnGetAllProcessFileByWellNameOperationCompleted(object arg) {
            if ((this.GetAllProcessFileByWellNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllProcessFileByWellNameCompleted(this, new GetAllProcessFileByWellNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/UpdateProcessFileInfo", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateProcessFileInfo([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data) {
            this.Invoke("UpdateProcessFileInfo", new object[] {
                        data});
        }
        
        /// <remarks/>
        public void UpdateProcessFileInfoAsync(byte[] data) {
            this.UpdateProcessFileInfoAsync(data, null);
        }
        
        /// <remarks/>
        public void UpdateProcessFileInfoAsync(byte[] data, object userState) {
            if ((this.UpdateProcessFileInfoOperationCompleted == null)) {
                this.UpdateProcessFileInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProcessFileInfoOperationCompleted);
            }
            this.InvokeAsync("UpdateProcessFileInfo", new object[] {
                        data}, this.UpdateProcessFileInfoOperationCompleted, userState);
        }
        
        private void OnUpdateProcessFileInfoOperationCompleted(object arg) {
            if ((this.UpdateProcessFileInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProcessFileInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/DelSysUpload", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DelSysUpload(System.Data.DataTable dt) {
            this.Invoke("DelSysUpload", new object[] {
                        dt});
        }
        
        /// <remarks/>
        public void DelSysUploadAsync(System.Data.DataTable dt) {
            this.DelSysUploadAsync(dt, null);
        }
        
        /// <remarks/>
        public void DelSysUploadAsync(System.Data.DataTable dt, object userState) {
            if ((this.DelSysUploadOperationCompleted == null)) {
                this.DelSysUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelSysUploadOperationCompleted);
            }
            this.InvokeAsync("DelSysUpload", new object[] {
                        dt}, this.DelSysUploadOperationCompleted, userState);
        }
        
        private void OnDelSysUploadOperationCompleted(object arg) {
            if ((this.DelSysUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelSysUploadCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/DelUploadFile", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DelUploadFile(System.Data.DataTable dt) {
            this.Invoke("DelUploadFile", new object[] {
                        dt});
        }
        
        /// <remarks/>
        public void DelUploadFileAsync(System.Data.DataTable dt) {
            this.DelUploadFileAsync(dt, null);
        }
        
        /// <remarks/>
        public void DelUploadFileAsync(System.Data.DataTable dt, object userState) {
            if ((this.DelUploadFileOperationCompleted == null)) {
                this.DelUploadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelUploadFileOperationCompleted);
            }
            this.InvokeAsync("DelUploadFile", new object[] {
                        dt}, this.DelUploadFileOperationCompleted, userState);
        }
        
        private void OnDelUploadFileOperationCompleted(object arg) {
            if ((this.DelUploadFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelUploadFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/CompareDataFiles", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet CompareDataFiles(decimal cType) {
            object[] results = this.Invoke("CompareDataFiles", new object[] {
                        cType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void CompareDataFilesAsync(decimal cType) {
            this.CompareDataFilesAsync(cType, null);
        }
        
        /// <remarks/>
        public void CompareDataFilesAsync(decimal cType, object userState) {
            if ((this.CompareDataFilesOperationCompleted == null)) {
                this.CompareDataFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompareDataFilesOperationCompleted);
            }
            this.InvokeAsync("CompareDataFiles", new object[] {
                        cType}, this.CompareDataFilesOperationCompleted, userState);
        }
        
        private void OnCompareDataFilesOperationCompleted(object arg) {
            if ((this.CompareDataFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CompareDataFilesCompleted(this, new CompareDataFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/SaveDataList_井眼轨迹数据", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveDataList_井眼轨迹数据(string PROCESS_ID, System.Data.DataTable dt) {
            object[] results = this.Invoke("SaveDataList_井眼轨迹数据", new object[] {
                        PROCESS_ID,
                        dt});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDataList_井眼轨迹数据Async(string PROCESS_ID, System.Data.DataTable dt) {
            this.SaveDataList_井眼轨迹数据Async(PROCESS_ID, dt, null);
        }
        
        /// <remarks/>
        public void SaveDataList_井眼轨迹数据Async(string PROCESS_ID, System.Data.DataTable dt, object userState) {
            if ((this.SaveDataList_井眼轨迹数据OperationCompleted == null)) {
                this.SaveDataList_井眼轨迹数据OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDataList_井眼轨迹数据OperationCompleted);
            }
            this.InvokeAsync("SaveDataList_井眼轨迹数据", new object[] {
                        PROCESS_ID,
                        dt}, this.SaveDataList_井眼轨迹数据OperationCompleted, userState);
        }
        
        private void OnSaveDataList_井眼轨迹数据OperationCompleted(object arg) {
            if ((this.SaveDataList_井眼轨迹数据Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDataList_井眼轨迹数据Completed(this, new SaveDataList_井眼轨迹数据CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetDataList_井眼轨迹数据", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataList_井眼轨迹数据(string PROCESS_ID) {
            object[] results = this.Invoke("GetDataList_井眼轨迹数据", new object[] {
                        PROCESS_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataList_井眼轨迹数据Async(string PROCESS_ID) {
            this.GetDataList_井眼轨迹数据Async(PROCESS_ID, null);
        }
        
        /// <remarks/>
        public void GetDataList_井眼轨迹数据Async(string PROCESS_ID, object userState) {
            if ((this.GetDataList_井眼轨迹数据OperationCompleted == null)) {
                this.GetDataList_井眼轨迹数据OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataList_井眼轨迹数据OperationCompleted);
            }
            this.InvokeAsync("GetDataList_井眼轨迹数据", new object[] {
                        PROCESS_ID}, this.GetDataList_井眼轨迹数据OperationCompleted, userState);
        }
        
        private void OnGetDataList_井眼轨迹数据OperationCompleted(object arg) {
            if ((this.GetDataList_井眼轨迹数据Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataList_井眼轨迹数据Completed(this, new GetDataList_井眼轨迹数据CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/SaveProcessingCurveInfo", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveProcessingCurveInfo(string PROCESS_ID, string MAPS_CHINESE_NAME, System.Data.DataTable dt) {
            object[] results = this.Invoke("SaveProcessingCurveInfo", new object[] {
                        PROCESS_ID,
                        MAPS_CHINESE_NAME,
                        dt});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveProcessingCurveInfoAsync(string PROCESS_ID, string MAPS_CHINESE_NAME, System.Data.DataTable dt) {
            this.SaveProcessingCurveInfoAsync(PROCESS_ID, MAPS_CHINESE_NAME, dt, null);
        }
        
        /// <remarks/>
        public void SaveProcessingCurveInfoAsync(string PROCESS_ID, string MAPS_CHINESE_NAME, System.Data.DataTable dt, object userState) {
            if ((this.SaveProcessingCurveInfoOperationCompleted == null)) {
                this.SaveProcessingCurveInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveProcessingCurveInfoOperationCompleted);
            }
            this.InvokeAsync("SaveProcessingCurveInfo", new object[] {
                        PROCESS_ID,
                        MAPS_CHINESE_NAME,
                        dt}, this.SaveProcessingCurveInfoOperationCompleted, userState);
        }
        
        private void OnSaveProcessingCurveInfoOperationCompleted(object arg) {
            if ((this.SaveProcessingCurveInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveProcessingCurveInfoCompleted(this, new SaveProcessingCurveInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/SaveCurveInfo", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveCurveInfo(string PROCESS_ID, decimal PROCESSING_ITEM_ID, System.Data.DataTable dt) {
            object[] results = this.Invoke("SaveCurveInfo", new object[] {
                        PROCESS_ID,
                        PROCESSING_ITEM_ID,
                        dt});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveCurveInfoAsync(string PROCESS_ID, decimal PROCESSING_ITEM_ID, System.Data.DataTable dt) {
            this.SaveCurveInfoAsync(PROCESS_ID, PROCESSING_ITEM_ID, dt, null);
        }
        
        /// <remarks/>
        public void SaveCurveInfoAsync(string PROCESS_ID, decimal PROCESSING_ITEM_ID, System.Data.DataTable dt, object userState) {
            if ((this.SaveCurveInfoOperationCompleted == null)) {
                this.SaveCurveInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCurveInfoOperationCompleted);
            }
            this.InvokeAsync("SaveCurveInfo", new object[] {
                        PROCESS_ID,
                        PROCESSING_ITEM_ID,
                        dt}, this.SaveCurveInfoOperationCompleted, userState);
        }
        
        private void OnSaveCurveInfoOperationCompleted(object arg) {
            if ((this.SaveCurveInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCurveInfoCompleted(this, new SaveCurveInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetCurveInfo", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCurveInfo(string PROCESS_ID) {
            object[] results = this.Invoke("GetCurveInfo", new object[] {
                        PROCESS_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurveInfoAsync(string PROCESS_ID) {
            this.GetCurveInfoAsync(PROCESS_ID, null);
        }
        
        /// <remarks/>
        public void GetCurveInfoAsync(string PROCESS_ID, object userState) {
            if ((this.GetCurveInfoOperationCompleted == null)) {
                this.GetCurveInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurveInfoOperationCompleted);
            }
            this.InvokeAsync("GetCurveInfo", new object[] {
                        PROCESS_ID}, this.GetCurveInfoOperationCompleted, userState);
        }
        
        private void OnGetCurveInfoOperationCompleted(object arg) {
            if ((this.GetCurveInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurveInfoCompleted(this, new GetCurveInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetProcessingCurveData", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProcessingCurveData(decimal CURVE_ID) {
            object[] results = this.Invoke("GetProcessingCurveData", new object[] {
                        CURVE_ID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProcessingCurveDataAsync(decimal CURVE_ID) {
            this.GetProcessingCurveDataAsync(CURVE_ID, null);
        }
        
        /// <remarks/>
        public void GetProcessingCurveDataAsync(decimal CURVE_ID, object userState) {
            if ((this.GetProcessingCurveDataOperationCompleted == null)) {
                this.GetProcessingCurveDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProcessingCurveDataOperationCompleted);
            }
            this.InvokeAsync("GetProcessingCurveData", new object[] {
                        CURVE_ID}, this.GetProcessingCurveDataOperationCompleted, userState);
        }
        
        private void OnGetProcessingCurveDataOperationCompleted(object arg) {
            if ((this.GetProcessingCurveDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProcessingCurveDataCompleted(this, new GetProcessingCurveDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/DelProcessingFile", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DelProcessingFile(string PROCESS_ID, int filetype, System.Data.DataTable newdt) {
            object[] results = this.Invoke("DelProcessingFile", new object[] {
                        PROCESS_ID,
                        filetype,
                        newdt});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DelProcessingFileAsync(string PROCESS_ID, int filetype, System.Data.DataTable newdt) {
            this.DelProcessingFileAsync(PROCESS_ID, filetype, newdt, null);
        }
        
        /// <remarks/>
        public void DelProcessingFileAsync(string PROCESS_ID, int filetype, System.Data.DataTable newdt, object userState) {
            if ((this.DelProcessingFileOperationCompleted == null)) {
                this.DelProcessingFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelProcessingFileOperationCompleted);
            }
            this.InvokeAsync("DelProcessingFile", new object[] {
                        PROCESS_ID,
                        filetype,
                        newdt}, this.DelProcessingFileOperationCompleted, userState);
        }
        
        private void OnDelProcessingFileOperationCompleted(object arg) {
            if ((this.DelProcessingFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelProcessingFileCompleted(this, new DelProcessingFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/SaveProcessingFile", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveProcessingFile(string PROCESS_ID, int filetype, System.Data.DataTable dt) {
            object[] results = this.Invoke("SaveProcessingFile", new object[] {
                        PROCESS_ID,
                        filetype,
                        dt});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveProcessingFileAsync(string PROCESS_ID, int filetype, System.Data.DataTable dt) {
            this.SaveProcessingFileAsync(PROCESS_ID, filetype, dt, null);
        }
        
        /// <remarks/>
        public void SaveProcessingFileAsync(string PROCESS_ID, int filetype, System.Data.DataTable dt, object userState) {
            if ((this.SaveProcessingFileOperationCompleted == null)) {
                this.SaveProcessingFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveProcessingFileOperationCompleted);
            }
            this.InvokeAsync("SaveProcessingFile", new object[] {
                        PROCESS_ID,
                        filetype,
                        dt}, this.SaveProcessingFileOperationCompleted, userState);
        }
        
        private void OnSaveProcessingFileOperationCompleted(object arg) {
            if ((this.SaveProcessingFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveProcessingFileCompleted(this, new SaveProcessingFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetProcessingFile", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProcessingFile(string PROCESS_ID, int filetype) {
            object[] results = this.Invoke("GetProcessingFile", new object[] {
                        PROCESS_ID,
                        filetype});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProcessingFileAsync(string PROCESS_ID, int filetype) {
            this.GetProcessingFileAsync(PROCESS_ID, filetype, null);
        }
        
        /// <remarks/>
        public void GetProcessingFileAsync(string PROCESS_ID, int filetype, object userState) {
            if ((this.GetProcessingFileOperationCompleted == null)) {
                this.GetProcessingFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProcessingFileOperationCompleted);
            }
            this.InvokeAsync("GetProcessingFile", new object[] {
                        PROCESS_ID,
                        filetype}, this.GetProcessingFileOperationCompleted, userState);
        }
        
        private void OnGetProcessingFileOperationCompleted(object arg) {
            if ((this.GetProcessingFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProcessingFileCompleted(this, new GetProcessingFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetProcessDocument", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetProcessDocument(string PROCESS_ID, int filetype) {
            object[] results = this.Invoke("GetProcessDocument", new object[] {
                        PROCESS_ID,
                        filetype});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetProcessDocumentAsync(string PROCESS_ID, int filetype) {
            this.GetProcessDocumentAsync(PROCESS_ID, filetype, null);
        }
        
        /// <remarks/>
        public void GetProcessDocumentAsync(string PROCESS_ID, int filetype, object userState) {
            if ((this.GetProcessDocumentOperationCompleted == null)) {
                this.GetProcessDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProcessDocumentOperationCompleted);
            }
            this.InvokeAsync("GetProcessDocument", new object[] {
                        PROCESS_ID,
                        filetype}, this.GetProcessDocumentOperationCompleted, userState);
        }
        
        private void OnGetProcessDocumentOperationCompleted(object arg) {
            if ((this.GetProcessDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProcessDocumentCompleted(this, new GetProcessDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/SaveProcessDocument", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveProcessDocument(string PROCESS_ID, int filetype, System.Data.DataTable dt) {
            object[] results = this.Invoke("SaveProcessDocument", new object[] {
                        PROCESS_ID,
                        filetype,
                        dt});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveProcessDocumentAsync(string PROCESS_ID, int filetype, System.Data.DataTable dt) {
            this.SaveProcessDocumentAsync(PROCESS_ID, filetype, dt, null);
        }
        
        /// <remarks/>
        public void SaveProcessDocumentAsync(string PROCESS_ID, int filetype, System.Data.DataTable dt, object userState) {
            if ((this.SaveProcessDocumentOperationCompleted == null)) {
                this.SaveProcessDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveProcessDocumentOperationCompleted);
            }
            this.InvokeAsync("SaveProcessDocument", new object[] {
                        PROCESS_ID,
                        filetype,
                        dt}, this.SaveProcessDocumentOperationCompleted, userState);
        }
        
        private void OnSaveProcessDocumentOperationCompleted(object arg) {
            if ((this.SaveProcessDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveProcessDocumentCompleted(this, new SaveProcessDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetMyTask", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMyTask() {
            object[] results = this.Invoke("GetMyTask", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyTaskAsync() {
            this.GetMyTaskAsync(null);
        }
        
        /// <remarks/>
        public void GetMyTaskAsync(object userState) {
            if ((this.GetMyTaskOperationCompleted == null)) {
                this.GetMyTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyTaskOperationCompleted);
            }
            this.InvokeAsync("GetMyTask", new object[0], this.GetMyTaskOperationCompleted, userState);
        }
        
        private void OnGetMyTaskOperationCompleted(object arg) {
            if ((this.GetMyTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyTaskCompleted(this, new GetMyTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/DeleteLogTask", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteLogTask(string REQUISITION_CD) {
            object[] results = this.Invoke("DeleteLogTask", new object[] {
                        REQUISITION_CD});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLogTaskAsync(string REQUISITION_CD) {
            this.DeleteLogTaskAsync(REQUISITION_CD, null);
        }
        
        /// <remarks/>
        public void DeleteLogTaskAsync(string REQUISITION_CD, object userState) {
            if ((this.DeleteLogTaskOperationCompleted == null)) {
                this.DeleteLogTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLogTaskOperationCompleted);
            }
            this.InvokeAsync("DeleteLogTask", new object[] {
                        REQUISITION_CD}, this.DeleteLogTaskOperationCompleted, userState);
        }
        
        private void OnDeleteLogTaskOperationCompleted(object arg) {
            if ((this.DeleteLogTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLogTaskCompleted(this, new DeleteLogTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/DeleteLogProcess", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteLogProcess(string PROCESS_ID) {
            object[] results = this.Invoke("DeleteLogProcess", new object[] {
                        PROCESS_ID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLogProcessAsync(string PROCESS_ID) {
            this.DeleteLogProcessAsync(PROCESS_ID, null);
        }
        
        /// <remarks/>
        public void DeleteLogProcessAsync(string PROCESS_ID, object userState) {
            if ((this.DeleteLogProcessOperationCompleted == null)) {
                this.DeleteLogProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLogProcessOperationCompleted);
            }
            this.InvokeAsync("DeleteLogProcess", new object[] {
                        PROCESS_ID}, this.DeleteLogProcessOperationCompleted, userState);
        }
        
        private void OnDeleteLogProcessOperationCompleted(object arg) {
            if ((this.DeleteLogProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLogProcessCompleted(this, new DeleteLogProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/DeleteComWellBasic", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteComWellBasic(string WELL_ID) {
            object[] results = this.Invoke("DeleteComWellBasic", new object[] {
                        WELL_ID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteComWellBasicAsync(string WELL_ID) {
            this.DeleteComWellBasicAsync(WELL_ID, null);
        }
        
        /// <remarks/>
        public void DeleteComWellBasicAsync(string WELL_ID, object userState) {
            if ((this.DeleteComWellBasicOperationCompleted == null)) {
                this.DeleteComWellBasicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteComWellBasicOperationCompleted);
            }
            this.InvokeAsync("DeleteComWellBasic", new object[] {
                        WELL_ID}, this.DeleteComWellBasicOperationCompleted, userState);
        }
        
        private void OnDeleteComWellBasicOperationCompleted(object arg) {
            if ((this.DeleteComWellBasicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteComWellBasicCompleted(this, new DeleteComWellBasicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/DeleteLogCore", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteLogCore(string CORE_ID) {
            object[] results = this.Invoke("DeleteLogCore", new object[] {
                        CORE_ID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLogCoreAsync(string CORE_ID) {
            this.DeleteLogCoreAsync(CORE_ID, null);
        }
        
        /// <remarks/>
        public void DeleteLogCoreAsync(string CORE_ID, object userState) {
            if ((this.DeleteLogCoreOperationCompleted == null)) {
                this.DeleteLogCoreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLogCoreOperationCompleted);
            }
            this.InvokeAsync("DeleteLogCore", new object[] {
                        CORE_ID}, this.DeleteLogCoreOperationCompleted, userState);
        }
        
        private void OnDeleteLogCoreOperationCompleted(object arg) {
            if ((this.DeleteLogCoreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLogCoreCompleted(this, new DeleteLogCoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/SearchWellBasic", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchWellBasic([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] searchModel) {
            object[] results = this.Invoke("SearchWellBasic", new object[] {
                        searchModel});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchWellBasicAsync(byte[] searchModel) {
            this.SearchWellBasicAsync(searchModel, null);
        }
        
        /// <remarks/>
        public void SearchWellBasicAsync(byte[] searchModel, object userState) {
            if ((this.SearchWellBasicOperationCompleted == null)) {
                this.SearchWellBasicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchWellBasicOperationCompleted);
            }
            this.InvokeAsync("SearchWellBasic", new object[] {
                        searchModel}, this.SearchWellBasicOperationCompleted, userState);
        }
        
        private void OnSearchWellBasicOperationCompleted(object arg) {
            if ((this.SearchWellBasicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchWellBasicCompleted(this, new SearchWellBasicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/SaveWellBasic", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveWellBasic([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteModel) {
            object[] results = this.Invoke("SaveWellBasic", new object[] {
                        byteModel});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveWellBasicAsync(byte[] byteModel) {
            this.SaveWellBasicAsync(byteModel, null);
        }
        
        /// <remarks/>
        public void SaveWellBasicAsync(byte[] byteModel, object userState) {
            if ((this.SaveWellBasicOperationCompleted == null)) {
                this.SaveWellBasicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveWellBasicOperationCompleted);
            }
            this.InvokeAsync("SaveWellBasic", new object[] {
                        byteModel}, this.SaveWellBasicOperationCompleted, userState);
        }
        
        private void OnSaveWellBasicOperationCompleted(object arg) {
            if ((this.SaveWellBasicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveWellBasicCompleted(this, new SaveWellBasicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetWellBasic", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWellBasic(string well_id) {
            object[] results = this.Invoke("GetWellBasic", new object[] {
                        well_id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWellBasicAsync(string well_id) {
            this.GetWellBasicAsync(well_id, null);
        }
        
        /// <remarks/>
        public void GetWellBasicAsync(string well_id, object userState) {
            if ((this.GetWellBasicOperationCompleted == null)) {
                this.GetWellBasicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWellBasicOperationCompleted);
            }
            this.InvokeAsync("GetWellBasic", new object[] {
                        well_id}, this.GetWellBasicOperationCompleted, userState);
        }
        
        private void OnGetWellBasicOperationCompleted(object arg) {
            if ((this.GetWellBasicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWellBasicCompleted(this, new GetWellBasicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetWellboreList", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWellboreList(string well_id) {
            object[] results = this.Invoke("GetWellboreList", new object[] {
                        well_id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWellboreListAsync(string well_id) {
            this.GetWellboreListAsync(well_id, null);
        }
        
        /// <remarks/>
        public void GetWellboreListAsync(string well_id, object userState) {
            if ((this.GetWellboreListOperationCompleted == null)) {
                this.GetWellboreListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWellboreListOperationCompleted);
            }
            this.InvokeAsync("GetWellboreList", new object[] {
                        well_id}, this.GetWellboreListOperationCompleted, userState);
        }
        
        private void OnGetWellboreListOperationCompleted(object arg) {
            if ((this.GetWellboreListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWellboreListCompleted(this, new GetWellboreListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetWellbore", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWellbore(string wellbore_id) {
            object[] results = this.Invoke("GetWellbore", new object[] {
                        wellbore_id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWellboreAsync(string wellbore_id) {
            this.GetWellboreAsync(wellbore_id, null);
        }
        
        /// <remarks/>
        public void GetWellboreAsync(string wellbore_id, object userState) {
            if ((this.GetWellboreOperationCompleted == null)) {
                this.GetWellboreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWellboreOperationCompleted);
            }
            this.InvokeAsync("GetWellbore", new object[] {
                        wellbore_id}, this.GetWellboreOperationCompleted, userState);
        }
        
        private void OnGetWellboreOperationCompleted(object arg) {
            if ((this.GetWellboreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWellboreCompleted(this, new GetWellboreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetWellStructure", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWellStructure(string wellbore_id) {
            object[] results = this.Invoke("GetWellStructure", new object[] {
                        wellbore_id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWellStructureAsync(string wellbore_id) {
            this.GetWellStructureAsync(wellbore_id, null);
        }
        
        /// <remarks/>
        public void GetWellStructureAsync(string wellbore_id, object userState) {
            if ((this.GetWellStructureOperationCompleted == null)) {
                this.GetWellStructureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWellStructureOperationCompleted);
            }
            this.InvokeAsync("GetWellStructure", new object[] {
                        wellbore_id}, this.GetWellStructureOperationCompleted, userState);
        }
        
        private void OnGetWellStructureOperationCompleted(object arg) {
            if ((this.GetWellStructureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWellStructureCompleted(this, new GetWellStructureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/SaveWellbore", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveWellbore([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] dataModel1, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] dataModel2) {
            object[] results = this.Invoke("SaveWellbore", new object[] {
                        dataModel1,
                        dataModel2});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveWellboreAsync(byte[] dataModel1, byte[] dataModel2) {
            this.SaveWellboreAsync(dataModel1, dataModel2, null);
        }
        
        /// <remarks/>
        public void SaveWellboreAsync(byte[] dataModel1, byte[] dataModel2, object userState) {
            if ((this.SaveWellboreOperationCompleted == null)) {
                this.SaveWellboreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveWellboreOperationCompleted);
            }
            this.InvokeAsync("SaveWellbore", new object[] {
                        dataModel1,
                        dataModel2}, this.SaveWellboreOperationCompleted, userState);
        }
        
        private void OnSaveWellboreOperationCompleted(object arg) {
            if ((this.SaveWellboreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveWellboreCompleted(this, new SaveWellboreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/SaveJobInfo", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveJobInfo([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] dataModel) {
            object[] results = this.Invoke("SaveJobInfo", new object[] {
                        dataModel});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveJobInfoAsync(byte[] dataModel) {
            this.SaveJobInfoAsync(dataModel, null);
        }
        
        /// <remarks/>
        public void SaveJobInfoAsync(byte[] dataModel, object userState) {
            if ((this.SaveJobInfoOperationCompleted == null)) {
                this.SaveJobInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveJobInfoOperationCompleted);
            }
            this.InvokeAsync("SaveJobInfo", new object[] {
                        dataModel}, this.SaveJobInfoOperationCompleted, userState);
        }
        
        private void OnSaveJobInfoOperationCompleted(object arg) {
            if ((this.SaveJobInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveJobInfoCompleted(this, new SaveJobInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/SaveDirllState", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveDirllState([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] dataModel) {
            object[] results = this.Invoke("SaveDirllState", new object[] {
                        dataModel});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveDirllStateAsync(byte[] dataModel) {
            this.SaveDirllStateAsync(dataModel, null);
        }
        
        /// <remarks/>
        public void SaveDirllStateAsync(byte[] dataModel, object userState) {
            if ((this.SaveDirllStateOperationCompleted == null)) {
                this.SaveDirllStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDirllStateOperationCompleted);
            }
            this.InvokeAsync("SaveDirllState", new object[] {
                        dataModel}, this.SaveDirllStateOperationCompleted, userState);
        }
        
        private void OnSaveDirllStateOperationCompleted(object arg) {
            if ((this.SaveDirllStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDirllStateCompleted(this, new SaveDirllStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/SaveGEO_DES_ITEM", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveGEO_DES_ITEM([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] dataModel) {
            object[] results = this.Invoke("SaveGEO_DES_ITEM", new object[] {
                        dataModel});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveGEO_DES_ITEMAsync(byte[] dataModel) {
            this.SaveGEO_DES_ITEMAsync(dataModel, null);
        }
        
        /// <remarks/>
        public void SaveGEO_DES_ITEMAsync(byte[] dataModel, object userState) {
            if ((this.SaveGEO_DES_ITEMOperationCompleted == null)) {
                this.SaveGEO_DES_ITEMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveGEO_DES_ITEMOperationCompleted);
            }
            this.InvokeAsync("SaveGEO_DES_ITEM", new object[] {
                        dataModel}, this.SaveGEO_DES_ITEMOperationCompleted, userState);
        }
        
        private void OnSaveGEO_DES_ITEMOperationCompleted(object arg) {
            if ((this.SaveGEO_DES_ITEMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveGEO_DES_ITEMCompleted(this, new SaveGEO_DES_ITEMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetTaskList", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTaskList([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] searchModel, int page, out int total) {
            object[] results = this.Invoke("GetTaskList", new object[] {
                        searchModel,
                        page});
            total = ((int)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTaskListAsync(byte[] searchModel, int page) {
            this.GetTaskListAsync(searchModel, page, null);
        }
        
        /// <remarks/>
        public void GetTaskListAsync(byte[] searchModel, int page, object userState) {
            if ((this.GetTaskListOperationCompleted == null)) {
                this.GetTaskListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaskListOperationCompleted);
            }
            this.InvokeAsync("GetTaskList", new object[] {
                        searchModel,
                        page}, this.GetTaskListOperationCompleted, userState);
        }
        
        private void OnGetTaskListOperationCompleted(object arg) {
            if ((this.GetTaskListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaskListCompleted(this, new GetTaskListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetJobInfoList", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetJobInfoList([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] searchModel) {
            object[] results = this.Invoke("GetJobInfoList", new object[] {
                        searchModel});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetJobInfoListAsync(byte[] searchModel) {
            this.GetJobInfoListAsync(searchModel, null);
        }
        
        /// <remarks/>
        public void GetJobInfoListAsync(byte[] searchModel, object userState) {
            if ((this.GetJobInfoListOperationCompleted == null)) {
                this.GetJobInfoListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJobInfoListOperationCompleted);
            }
            this.InvokeAsync("GetJobInfoList", new object[] {
                        searchModel}, this.GetJobInfoListOperationCompleted, userState);
        }
        
        private void OnGetJobInfoListOperationCompleted(object arg) {
            if ((this.GetJobInfoListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJobInfoListCompleted(this, new GetJobInfoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetJobInfo", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetJobInfo(string job_id) {
            object[] results = this.Invoke("GetJobInfo", new object[] {
                        job_id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetJobInfoAsync(string job_id) {
            this.GetJobInfoAsync(job_id, null);
        }
        
        /// <remarks/>
        public void GetJobInfoAsync(string job_id, object userState) {
            if ((this.GetJobInfoOperationCompleted == null)) {
                this.GetJobInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJobInfoOperationCompleted);
            }
            this.InvokeAsync("GetJobInfo", new object[] {
                        job_id}, this.GetJobInfoOperationCompleted, userState);
        }
        
        private void OnGetJobInfoOperationCompleted(object arg) {
            if ((this.GetJobInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJobInfoCompleted(this, new GetJobInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetDrillState", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDrillState(string drill_well_id) {
            object[] results = this.Invoke("GetDrillState", new object[] {
                        drill_well_id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDrillStateAsync(string drill_well_id) {
            this.GetDrillStateAsync(drill_well_id, null);
        }
        
        /// <remarks/>
        public void GetDrillStateAsync(string drill_well_id, object userState) {
            if ((this.GetDrillStateOperationCompleted == null)) {
                this.GetDrillStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDrillStateOperationCompleted);
            }
            this.InvokeAsync("GetDrillState", new object[] {
                        drill_well_id}, this.GetDrillStateOperationCompleted, userState);
        }
        
        private void OnGetDrillStateOperationCompleted(object arg) {
            if ((this.GetDrillStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDrillStateCompleted(this, new GetDrillStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetGEO_DES_Item", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetGEO_DES_Item(string drill_well_id) {
            object[] results = this.Invoke("GetGEO_DES_Item", new object[] {
                        drill_well_id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetGEO_DES_ItemAsync(string drill_well_id) {
            this.GetGEO_DES_ItemAsync(drill_well_id, null);
        }
        
        /// <remarks/>
        public void GetGEO_DES_ItemAsync(string drill_well_id, object userState) {
            if ((this.GetGEO_DES_ItemOperationCompleted == null)) {
                this.GetGEO_DES_ItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGEO_DES_ItemOperationCompleted);
            }
            this.InvokeAsync("GetGEO_DES_Item", new object[] {
                        drill_well_id}, this.GetGEO_DES_ItemOperationCompleted, userState);
        }
        
        private void OnGetGEO_DES_ItemOperationCompleted(object arg) {
            if ((this.GetGEO_DES_ItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGEO_DES_ItemCompleted(this, new GetGEO_DES_ItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetDrillStateList", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDrillStateList(string job_id) {
            object[] results = this.Invoke("GetDrillStateList", new object[] {
                        job_id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDrillStateListAsync(string job_id) {
            this.GetDrillStateListAsync(job_id, null);
        }
        
        /// <remarks/>
        public void GetDrillStateListAsync(string job_id, object userState) {
            if ((this.GetDrillStateListOperationCompleted == null)) {
                this.GetDrillStateListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDrillStateListOperationCompleted);
            }
            this.InvokeAsync("GetDrillStateList", new object[] {
                        job_id}, this.GetDrillStateListOperationCompleted, userState);
        }
        
        private void OnGetDrillStateListOperationCompleted(object arg) {
            if ((this.GetDrillStateListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDrillStateListCompleted(this, new GetDrillStateListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetGEO_DES_ItemList", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetGEO_DES_ItemList(string job_id) {
            object[] results = this.Invoke("GetGEO_DES_ItemList", new object[] {
                        job_id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetGEO_DES_ItemListAsync(string job_id) {
            this.GetGEO_DES_ItemListAsync(job_id, null);
        }
        
        /// <remarks/>
        public void GetGEO_DES_ItemListAsync(string job_id, object userState) {
            if ((this.GetGEO_DES_ItemListOperationCompleted == null)) {
                this.GetGEO_DES_ItemListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGEO_DES_ItemListOperationCompleted);
            }
            this.InvokeAsync("GetGEO_DES_ItemList", new object[] {
                        job_id}, this.GetGEO_DES_ItemListOperationCompleted, userState);
        }
        
        private void OnGetGEO_DES_ItemListOperationCompleted(object arg) {
            if ((this.GetGEO_DES_ItemListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGEO_DES_ItemListCompleted(this, new GetGEO_DES_ItemListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetWellComboBoxList", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWellComboBoxList() {
            object[] results = this.Invoke("GetWellComboBoxList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWellComboBoxListAsync() {
            this.GetWellComboBoxListAsync(null);
        }
        
        /// <remarks/>
        public void GetWellComboBoxListAsync(object userState) {
            if ((this.GetWellComboBoxListOperationCompleted == null)) {
                this.GetWellComboBoxListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWellComboBoxListOperationCompleted);
            }
            this.InvokeAsync("GetWellComboBoxList", new object[0], this.GetWellComboBoxListOperationCompleted, userState);
        }
        
        private void OnGetWellComboBoxListOperationCompleted(object arg) {
            if ((this.GetWellComboBoxListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWellComboBoxListCompleted(this, new GetWellComboBoxListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetWellType", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWellType() {
            object[] results = this.Invoke("GetWellType", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWellTypeAsync() {
            this.GetWellTypeAsync(null);
        }
        
        /// <remarks/>
        public void GetWellTypeAsync(object userState) {
            if ((this.GetWellTypeOperationCompleted == null)) {
                this.GetWellTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWellTypeOperationCompleted);
            }
            this.InvokeAsync("GetWellType", new object[0], this.GetWellTypeOperationCompleted, userState);
        }
        
        private void OnGetWellTypeOperationCompleted(object arg) {
            if ((this.GetWellTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWellTypeCompleted(this, new GetWellTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetWellSort", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWellSort() {
            object[] results = this.Invoke("GetWellSort", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWellSortAsync() {
            this.GetWellSortAsync(null);
        }
        
        /// <remarks/>
        public void GetWellSortAsync(object userState) {
            if ((this.GetWellSortOperationCompleted == null)) {
                this.GetWellSortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWellSortOperationCompleted);
            }
            this.InvokeAsync("GetWellSort", new object[0], this.GetWellSortOperationCompleted, userState);
        }
        
        private void OnGetWellSortOperationCompleted(object arg) {
            if ((this.GetWellSortCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWellSortCompleted(this, new GetWellSortCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetFileTemplate", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFileTemplate() {
            object[] results = this.Invoke("GetFileTemplate", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileTemplateAsync() {
            this.GetFileTemplateAsync(null);
        }
        
        /// <remarks/>
        public void GetFileTemplateAsync(object userState) {
            if ((this.GetFileTemplateOperationCompleted == null)) {
                this.GetFileTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileTemplateOperationCompleted);
            }
            this.InvokeAsync("GetFileTemplate", new object[0], this.GetFileTemplateOperationCompleted, userState);
        }
        
        private void OnGetFileTemplateOperationCompleted(object arg) {
            if ((this.GetFileTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileTemplateCompleted(this, new GetFileTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetA1DataByView", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetA1DataByView(string view_name, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data) {
            object[] results = this.Invoke("GetA1DataByView", new object[] {
                        view_name,
                        data});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetA1DataByViewAsync(string view_name, byte[] data) {
            this.GetA1DataByViewAsync(view_name, data, null);
        }
        
        /// <remarks/>
        public void GetA1DataByViewAsync(string view_name, byte[] data, object userState) {
            if ((this.GetA1DataByViewOperationCompleted == null)) {
                this.GetA1DataByViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetA1DataByViewOperationCompleted);
            }
            this.InvokeAsync("GetA1DataByView", new object[] {
                        view_name,
                        data}, this.GetA1DataByViewOperationCompleted, userState);
        }
        
        private void OnGetA1DataByViewOperationCompleted(object arg) {
            if ((this.GetA1DataByViewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetA1DataByViewCompleted(this, new GetA1DataByViewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/PushFileToA1", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PushFileToA1([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] bytes) {
            object[] results = this.Invoke("PushFileToA1", new object[] {
                        bytes});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PushFileToA1Async(byte[] bytes) {
            this.PushFileToA1Async(bytes, null);
        }
        
        /// <remarks/>
        public void PushFileToA1Async(byte[] bytes, object userState) {
            if ((this.PushFileToA1OperationCompleted == null)) {
                this.PushFileToA1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnPushFileToA1OperationCompleted);
            }
            this.InvokeAsync("PushFileToA1", new object[] {
                        bytes}, this.PushFileToA1OperationCompleted, userState);
        }
        
        private void OnPushFileToA1OperationCompleted(object arg) {
            if ((this.PushFileToA1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PushFileToA1Completed(this, new PushFileToA1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetPlanList", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPlanList([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] searchModel, int page, out int total) {
            object[] results = this.Invoke("GetPlanList", new object[] {
                        searchModel,
                        page});
            total = ((int)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlanListAsync(byte[] searchModel, int page) {
            this.GetPlanListAsync(searchModel, page, null);
        }
        
        /// <remarks/>
        public void GetPlanListAsync(byte[] searchModel, int page, object userState) {
            if ((this.GetPlanListOperationCompleted == null)) {
                this.GetPlanListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlanListOperationCompleted);
            }
            this.InvokeAsync("GetPlanList", new object[] {
                        searchModel,
                        page}, this.GetPlanListOperationCompleted, userState);
        }
        
        private void OnGetPlanListOperationCompleted(object arg) {
            if ((this.GetPlanListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlanListCompleted(this, new GetPlanListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetPlanData", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPlanData(string JOB_PLAN_CD) {
            object[] results = this.Invoke("GetPlanData", new object[] {
                        JOB_PLAN_CD});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlanDataAsync(string JOB_PLAN_CD) {
            this.GetPlanDataAsync(JOB_PLAN_CD, null);
        }
        
        /// <remarks/>
        public void GetPlanDataAsync(string JOB_PLAN_CD, object userState) {
            if ((this.GetPlanDataOperationCompleted == null)) {
                this.GetPlanDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlanDataOperationCompleted);
            }
            this.InvokeAsync("GetPlanData", new object[] {
                        JOB_PLAN_CD}, this.GetPlanDataOperationCompleted, userState);
        }
        
        private void OnGetPlanDataOperationCompleted(object arg) {
            if ((this.GetPlanDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlanDataCompleted(this, new GetPlanDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetWellJobNameList", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWellJobNameList() {
            object[] results = this.Invoke("GetWellJobNameList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWellJobNameListAsync() {
            this.GetWellJobNameListAsync(null);
        }
        
        /// <remarks/>
        public void GetWellJobNameListAsync(object userState) {
            if ((this.GetWellJobNameListOperationCompleted == null)) {
                this.GetWellJobNameListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWellJobNameListOperationCompleted);
            }
            this.InvokeAsync("GetWellJobNameList", new object[0], this.GetWellJobNameListOperationCompleted, userState);
        }
        
        private void OnGetWellJobNameListOperationCompleted(object arg) {
            if ((this.GetWellJobNameListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWellJobNameListCompleted(this, new GetWellJobNameListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetRequisitionCdList", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRequisitionCdList() {
            object[] results = this.Invoke("GetRequisitionCdList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRequisitionCdListAsync() {
            this.GetRequisitionCdListAsync(null);
        }
        
        /// <remarks/>
        public void GetRequisitionCdListAsync(object userState) {
            if ((this.GetRequisitionCdListOperationCompleted == null)) {
                this.GetRequisitionCdListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRequisitionCdListOperationCompleted);
            }
            this.InvokeAsync("GetRequisitionCdList", new object[0], this.GetRequisitionCdListOperationCompleted, userState);
        }
        
        private void OnGetRequisitionCdListOperationCompleted(object arg) {
            if ((this.GetRequisitionCdListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRequisitionCdListCompleted(this, new GetRequisitionCdListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetWellBaseInfo", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWellBaseInfo(string wellJobName) {
            object[] results = this.Invoke("GetWellBaseInfo", new object[] {
                        wellJobName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWellBaseInfoAsync(string wellJobName) {
            this.GetWellBaseInfoAsync(wellJobName, null);
        }
        
        /// <remarks/>
        public void GetWellBaseInfoAsync(string wellJobName, object userState) {
            if ((this.GetWellBaseInfoOperationCompleted == null)) {
                this.GetWellBaseInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWellBaseInfoOperationCompleted);
            }
            this.InvokeAsync("GetWellBaseInfo", new object[] {
                        wellJobName}, this.GetWellBaseInfoOperationCompleted, userState);
        }
        
        private void OnGetWellBaseInfoOperationCompleted(object arg) {
            if ((this.GetWellBaseInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWellBaseInfoCompleted(this, new GetWellBaseInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetComJobInfo", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetComJobInfo(string wellJobName) {
            object[] results = this.Invoke("GetComJobInfo", new object[] {
                        wellJobName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetComJobInfoAsync(string wellJobName) {
            this.GetComJobInfoAsync(wellJobName, null);
        }
        
        /// <remarks/>
        public void GetComJobInfoAsync(string wellJobName, object userState) {
            if ((this.GetComJobInfoOperationCompleted == null)) {
                this.GetComJobInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetComJobInfoOperationCompleted);
            }
            this.InvokeAsync("GetComJobInfo", new object[] {
                        wellJobName}, this.GetComJobInfoOperationCompleted, userState);
        }
        
        private void OnGetComJobInfoOperationCompleted(object arg) {
            if ((this.GetComJobInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetComJobInfoCompleted(this, new GetComJobInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetPredictedItems", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPredictedItems(string itemID) {
            object[] results = this.Invoke("GetPredictedItems", new object[] {
                        itemID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPredictedItemsAsync(string itemID) {
            this.GetPredictedItemsAsync(itemID, null);
        }
        
        /// <remarks/>
        public void GetPredictedItemsAsync(string itemID, object userState) {
            if ((this.GetPredictedItemsOperationCompleted == null)) {
                this.GetPredictedItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPredictedItemsOperationCompleted);
            }
            this.InvokeAsync("GetPredictedItems", new object[] {
                        itemID}, this.GetPredictedItemsOperationCompleted, userState);
        }
        
        private void OnGetPredictedItemsOperationCompleted(object arg) {
            if ((this.GetPredictedItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPredictedItemsCompleted(this, new GetPredictedItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetJobIDlist", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetJobIDlist() {
            object[] results = this.Invoke("GetJobIDlist", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetJobIDlistAsync() {
            this.GetJobIDlistAsync(null);
        }
        
        /// <remarks/>
        public void GetJobIDlistAsync(object userState) {
            if ((this.GetJobIDlistOperationCompleted == null)) {
                this.GetJobIDlistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJobIDlistOperationCompleted);
            }
            this.InvokeAsync("GetJobIDlist", new object[0], this.GetJobIDlistOperationCompleted, userState);
        }
        
        private void OnGetJobIDlistOperationCompleted(object arg) {
            if ((this.GetJobIDlistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJobIDlistCompleted(this, new GetJobIDlistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetlogItems", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetlogItems() {
            object[] results = this.Invoke("GetlogItems", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetlogItemsAsync() {
            this.GetlogItemsAsync(null);
        }
        
        /// <remarks/>
        public void GetlogItemsAsync(object userState) {
            if ((this.GetlogItemsOperationCompleted == null)) {
                this.GetlogItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetlogItemsOperationCompleted);
            }
            this.InvokeAsync("GetlogItems", new object[0], this.GetlogItemsOperationCompleted, userState);
        }
        
        private void OnGetlogItemsOperationCompleted(object arg) {
            if ((this.GetlogItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetlogItemsCompleted(this, new GetlogItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetComboxList_QueryDate", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetComboxList_QueryDate() {
            object[] results = this.Invoke("GetComboxList_QueryDate", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetComboxList_QueryDateAsync() {
            this.GetComboxList_QueryDateAsync(null);
        }
        
        /// <remarks/>
        public void GetComboxList_QueryDateAsync(object userState) {
            if ((this.GetComboxList_QueryDateOperationCompleted == null)) {
                this.GetComboxList_QueryDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetComboxList_QueryDateOperationCompleted);
            }
            this.InvokeAsync("GetComboxList_QueryDate", new object[0], this.GetComboxList_QueryDateOperationCompleted, userState);
        }
        
        private void OnGetComboxList_QueryDateOperationCompleted(object arg) {
            if ((this.GetComboxList_QueryDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetComboxList_QueryDateCompleted(this, new GetComboxList_QueryDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetRequisitionTypes", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRequisitionTypes() {
            object[] results = this.Invoke("GetRequisitionTypes", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRequisitionTypesAsync() {
            this.GetRequisitionTypesAsync(null);
        }
        
        /// <remarks/>
        public void GetRequisitionTypesAsync(object userState) {
            if ((this.GetRequisitionTypesOperationCompleted == null)) {
                this.GetRequisitionTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRequisitionTypesOperationCompleted);
            }
            this.InvokeAsync("GetRequisitionTypes", new object[0], this.GetRequisitionTypesOperationCompleted, userState);
        }
        
        private void OnGetRequisitionTypesOperationCompleted(object arg) {
            if ((this.GetRequisitionTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRequisitionTypesCompleted(this, new GetRequisitionTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetComboBoxList_作业目的", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetComboBoxList_作业目的() {
            object[] results = this.Invoke("GetComboBoxList_作业目的", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetComboBoxList_作业目的Async() {
            this.GetComboBoxList_作业目的Async(null);
        }
        
        /// <remarks/>
        public void GetComboBoxList_作业目的Async(object userState) {
            if ((this.GetComboBoxList_作业目的OperationCompleted == null)) {
                this.GetComboBoxList_作业目的OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetComboBoxList_作业目的OperationCompleted);
            }
            this.InvokeAsync("GetComboBoxList_作业目的", new object[0], this.GetComboBoxList_作业目的OperationCompleted, userState);
        }
        
        private void OnGetComboBoxList_作业目的OperationCompleted(object arg) {
            if ((this.GetComboBoxList_作业目的Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetComboBoxList_作业目的Completed(this, new GetComboBoxList_作业目的CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetComboBoxList_市场类型", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetComboBoxList_市场类型() {
            object[] results = this.Invoke("GetComboBoxList_市场类型", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetComboBoxList_市场类型Async() {
            this.GetComboBoxList_市场类型Async(null);
        }
        
        /// <remarks/>
        public void GetComboBoxList_市场类型Async(object userState) {
            if ((this.GetComboBoxList_市场类型OperationCompleted == null)) {
                this.GetComboBoxList_市场类型OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetComboBoxList_市场类型OperationCompleted);
            }
            this.InvokeAsync("GetComboBoxList_市场类型", new object[0], this.GetComboBoxList_市场类型OperationCompleted, userState);
        }
        
        private void OnGetComboBoxList_市场类型OperationCompleted(object arg) {
            if ((this.GetComboBoxList_市场类型Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetComboBoxList_市场类型Completed(this, new GetComboBoxList_市场类型CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetComboBoxList_甲方来电单位", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetComboBoxList_甲方来电单位() {
            object[] results = this.Invoke("GetComboBoxList_甲方来电单位", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetComboBoxList_甲方来电单位Async() {
            this.GetComboBoxList_甲方来电单位Async(null);
        }
        
        /// <remarks/>
        public void GetComboBoxList_甲方来电单位Async(object userState) {
            if ((this.GetComboBoxList_甲方来电单位OperationCompleted == null)) {
                this.GetComboBoxList_甲方来电单位OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetComboBoxList_甲方来电单位OperationCompleted);
            }
            this.InvokeAsync("GetComboBoxList_甲方来电单位", new object[0], this.GetComboBoxList_甲方来电单位OperationCompleted, userState);
        }
        
        private void OnGetComboBoxList_甲方来电单位OperationCompleted(object arg) {
            if ((this.GetComboBoxList_甲方来电单位Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetComboBoxList_甲方来电单位Completed(this, new GetComboBoxList_甲方来电单位CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetComboBoxList_执行单位", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetComboBoxList_执行单位() {
            object[] results = this.Invoke("GetComboBoxList_执行单位", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetComboBoxList_执行单位Async() {
            this.GetComboBoxList_执行单位Async(null);
        }
        
        /// <remarks/>
        public void GetComboBoxList_执行单位Async(object userState) {
            if ((this.GetComboBoxList_执行单位OperationCompleted == null)) {
                this.GetComboBoxList_执行单位OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetComboBoxList_执行单位OperationCompleted);
            }
            this.InvokeAsync("GetComboBoxList_执行单位", new object[0], this.GetComboBoxList_执行单位OperationCompleted, userState);
        }
        
        private void OnGetComboBoxList_执行单位OperationCompleted(object arg) {
            if ((this.GetComboBoxList_执行单位Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetComboBoxList_执行单位Completed(this, new GetComboBoxList_执行单位CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetComboBoxList_COMBINATION_NAME", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetComboBoxList_COMBINATION_NAME() {
            object[] results = this.Invoke("GetComboBoxList_COMBINATION_NAME", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetComboBoxList_COMBINATION_NAMEAsync() {
            this.GetComboBoxList_COMBINATION_NAMEAsync(null);
        }
        
        /// <remarks/>
        public void GetComboBoxList_COMBINATION_NAMEAsync(object userState) {
            if ((this.GetComboBoxList_COMBINATION_NAMEOperationCompleted == null)) {
                this.GetComboBoxList_COMBINATION_NAMEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetComboBoxList_COMBINATION_NAMEOperationCompleted);
            }
            this.InvokeAsync("GetComboBoxList_COMBINATION_NAME", new object[0], this.GetComboBoxList_COMBINATION_NAMEOperationCompleted, userState);
        }
        
        private void OnGetComboBoxList_COMBINATION_NAMEOperationCompleted(object arg) {
            if ((this.GetComboBoxList_COMBINATION_NAMECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetComboBoxList_COMBINATION_NAMECompleted(this, new GetComboBoxList_COMBINATION_NAMECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetComboBoxList_下井趟次号", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetComboBoxList_下井趟次号(string JOB_PLAN_CD) {
            object[] results = this.Invoke("GetComboBoxList_下井趟次号", new object[] {
                        JOB_PLAN_CD});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetComboBoxList_下井趟次号Async(string JOB_PLAN_CD) {
            this.GetComboBoxList_下井趟次号Async(JOB_PLAN_CD, null);
        }
        
        /// <remarks/>
        public void GetComboBoxList_下井趟次号Async(string JOB_PLAN_CD, object userState) {
            if ((this.GetComboBoxList_下井趟次号OperationCompleted == null)) {
                this.GetComboBoxList_下井趟次号OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetComboBoxList_下井趟次号OperationCompleted);
            }
            this.InvokeAsync("GetComboBoxList_下井趟次号", new object[] {
                        JOB_PLAN_CD}, this.GetComboBoxList_下井趟次号OperationCompleted, userState);
        }
        
        private void OnGetComboBoxList_下井趟次号OperationCompleted(object arg) {
            if ((this.GetComboBoxList_下井趟次号Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetComboBoxList_下井趟次号Completed(this, new GetComboBoxList_下井趟次号CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetComboBoxList_CurveQualityTypes", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetComboBoxList_CurveQualityTypes() {
            object[] results = this.Invoke("GetComboBoxList_CurveQualityTypes", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetComboBoxList_CurveQualityTypesAsync() {
            this.GetComboBoxList_CurveQualityTypesAsync(null);
        }
        
        /// <remarks/>
        public void GetComboBoxList_CurveQualityTypesAsync(object userState) {
            if ((this.GetComboBoxList_CurveQualityTypesOperationCompleted == null)) {
                this.GetComboBoxList_CurveQualityTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetComboBoxList_CurveQualityTypesOperationCompleted);
            }
            this.InvokeAsync("GetComboBoxList_CurveQualityTypes", new object[0], this.GetComboBoxList_CurveQualityTypesOperationCompleted, userState);
        }
        
        private void OnGetComboBoxList_CurveQualityTypesOperationCompleted(object arg) {
            if ((this.GetComboBoxList_CurveQualityTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetComboBoxList_CurveQualityTypesCompleted(this, new GetComboBoxList_CurveQualityTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetComboBoxList_InterpretCenter", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetComboBoxList_InterpretCenter() {
            object[] results = this.Invoke("GetComboBoxList_InterpretCenter", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetComboBoxList_InterpretCenterAsync() {
            this.GetComboBoxList_InterpretCenterAsync(null);
        }
        
        /// <remarks/>
        public void GetComboBoxList_InterpretCenterAsync(object userState) {
            if ((this.GetComboBoxList_InterpretCenterOperationCompleted == null)) {
                this.GetComboBoxList_InterpretCenterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetComboBoxList_InterpretCenterOperationCompleted);
            }
            this.InvokeAsync("GetComboBoxList_InterpretCenter", new object[0], this.GetComboBoxList_InterpretCenterOperationCompleted, userState);
        }
        
        private void OnGetComboBoxList_InterpretCenterOperationCompleted(object arg) {
            if ((this.GetComboBoxList_InterpretCenterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetComboBoxList_InterpretCenterCompleted(this, new GetComboBoxList_InterpretCenterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetComboBoxList_LogSeries", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetComboBoxList_LogSeries() {
            object[] results = this.Invoke("GetComboBoxList_LogSeries", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetComboBoxList_LogSeriesAsync() {
            this.GetComboBoxList_LogSeriesAsync(null);
        }
        
        /// <remarks/>
        public void GetComboBoxList_LogSeriesAsync(object userState) {
            if ((this.GetComboBoxList_LogSeriesOperationCompleted == null)) {
                this.GetComboBoxList_LogSeriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetComboBoxList_LogSeriesOperationCompleted);
            }
            this.InvokeAsync("GetComboBoxList_LogSeries", new object[0], this.GetComboBoxList_LogSeriesOperationCompleted, userState);
        }
        
        private void OnGetComboBoxList_LogSeriesOperationCompleted(object arg) {
            if ((this.GetComboBoxList_LogSeriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetComboBoxList_LogSeriesCompleted(this, new GetComboBoxList_LogSeriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetComboBoxList_DataFormat", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetComboBoxList_DataFormat() {
            object[] results = this.Invoke("GetComboBoxList_DataFormat", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetComboBoxList_DataFormatAsync() {
            this.GetComboBoxList_DataFormatAsync(null);
        }
        
        /// <remarks/>
        public void GetComboBoxList_DataFormatAsync(object userState) {
            if ((this.GetComboBoxList_DataFormatOperationCompleted == null)) {
                this.GetComboBoxList_DataFormatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetComboBoxList_DataFormatOperationCompleted);
            }
            this.InvokeAsync("GetComboBoxList_DataFormat", new object[0], this.GetComboBoxList_DataFormatOperationCompleted, userState);
        }
        
        private void OnGetComboBoxList_DataFormatOperationCompleted(object arg) {
            if ((this.GetComboBoxList_DataFormatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetComboBoxList_DataFormatCompleted(this, new GetComboBoxList_DataFormatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetComboBoxList_AcceptanceWay", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetComboBoxList_AcceptanceWay() {
            object[] results = this.Invoke("GetComboBoxList_AcceptanceWay", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetComboBoxList_AcceptanceWayAsync() {
            this.GetComboBoxList_AcceptanceWayAsync(null);
        }
        
        /// <remarks/>
        public void GetComboBoxList_AcceptanceWayAsync(object userState) {
            if ((this.GetComboBoxList_AcceptanceWayOperationCompleted == null)) {
                this.GetComboBoxList_AcceptanceWayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetComboBoxList_AcceptanceWayOperationCompleted);
            }
            this.InvokeAsync("GetComboBoxList_AcceptanceWay", new object[0], this.GetComboBoxList_AcceptanceWayOperationCompleted, userState);
        }
        
        private void OnGetComboBoxList_AcceptanceWayOperationCompleted(object arg) {
            if ((this.GetComboBoxList_AcceptanceWayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetComboBoxList_AcceptanceWayCompleted(this, new GetComboBoxList_AcceptanceWayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetComboBoxList_ProcessSoftware", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetComboBoxList_ProcessSoftware() {
            object[] results = this.Invoke("GetComboBoxList_ProcessSoftware", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetComboBoxList_ProcessSoftwareAsync() {
            this.GetComboBoxList_ProcessSoftwareAsync(null);
        }
        
        /// <remarks/>
        public void GetComboBoxList_ProcessSoftwareAsync(object userState) {
            if ((this.GetComboBoxList_ProcessSoftwareOperationCompleted == null)) {
                this.GetComboBoxList_ProcessSoftwareOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetComboBoxList_ProcessSoftwareOperationCompleted);
            }
            this.InvokeAsync("GetComboBoxList_ProcessSoftware", new object[0], this.GetComboBoxList_ProcessSoftwareOperationCompleted, userState);
        }
        
        private void OnGetComboBoxList_ProcessSoftwareOperationCompleted(object arg) {
            if ((this.GetComboBoxList_ProcessSoftwareCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetComboBoxList_ProcessSoftwareCompleted(this, new GetComboBoxList_ProcessSoftwareCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetComboBoxList_SlopProperties", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetComboBoxList_SlopProperties() {
            object[] results = this.Invoke("GetComboBoxList_SlopProperties", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetComboBoxList_SlopPropertiesAsync() {
            this.GetComboBoxList_SlopPropertiesAsync(null);
        }
        
        /// <remarks/>
        public void GetComboBoxList_SlopPropertiesAsync(object userState) {
            if ((this.GetComboBoxList_SlopPropertiesOperationCompleted == null)) {
                this.GetComboBoxList_SlopPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetComboBoxList_SlopPropertiesOperationCompleted);
            }
            this.InvokeAsync("GetComboBoxList_SlopProperties", new object[0], this.GetComboBoxList_SlopPropertiesOperationCompleted, userState);
        }
        
        private void OnGetComboBoxList_SlopPropertiesOperationCompleted(object arg) {
            if ((this.GetComboBoxList_SlopPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetComboBoxList_SlopPropertiesCompleted(this, new GetComboBoxList_SlopPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetComboBoxList_ArchiveItemCodes", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetComboBoxList_ArchiveItemCodes() {
            object[] results = this.Invoke("GetComboBoxList_ArchiveItemCodes", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetComboBoxList_ArchiveItemCodesAsync() {
            this.GetComboBoxList_ArchiveItemCodesAsync(null);
        }
        
        /// <remarks/>
        public void GetComboBoxList_ArchiveItemCodesAsync(object userState) {
            if ((this.GetComboBoxList_ArchiveItemCodesOperationCompleted == null)) {
                this.GetComboBoxList_ArchiveItemCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetComboBoxList_ArchiveItemCodesOperationCompleted);
            }
            this.InvokeAsync("GetComboBoxList_ArchiveItemCodes", new object[0], this.GetComboBoxList_ArchiveItemCodesOperationCompleted, userState);
        }
        
        private void OnGetComboBoxList_ArchiveItemCodesOperationCompleted(object arg) {
            if ((this.GetComboBoxList_ArchiveItemCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetComboBoxList_ArchiveItemCodesCompleted(this, new GetComboBoxList_ArchiveItemCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetStaticWorkflowList", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetStaticWorkflowList([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] _searchModel) {
            object[] results = this.Invoke("GetStaticWorkflowList", new object[] {
                        _searchModel});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetStaticWorkflowListAsync(byte[] _searchModel) {
            this.GetStaticWorkflowListAsync(_searchModel, null);
        }
        
        /// <remarks/>
        public void GetStaticWorkflowListAsync(byte[] _searchModel, object userState) {
            if ((this.GetStaticWorkflowListOperationCompleted == null)) {
                this.GetStaticWorkflowListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStaticWorkflowListOperationCompleted);
            }
            this.InvokeAsync("GetStaticWorkflowList", new object[] {
                        _searchModel}, this.GetStaticWorkflowListOperationCompleted, userState);
        }
        
        private void OnGetStaticWorkflowListOperationCompleted(object arg) {
            if ((this.GetStaticWorkflowListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStaticWorkflowListCompleted(this, new GetStaticWorkflowListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetStaticWorkflow", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetStaticWorkflow(string flow_id) {
            object[] results = this.Invoke("GetStaticWorkflow", new object[] {
                        flow_id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetStaticWorkflowAsync(string flow_id) {
            this.GetStaticWorkflowAsync(flow_id, null);
        }
        
        /// <remarks/>
        public void GetStaticWorkflowAsync(string flow_id, object userState) {
            if ((this.GetStaticWorkflowOperationCompleted == null)) {
                this.GetStaticWorkflowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStaticWorkflowOperationCompleted);
            }
            this.InvokeAsync("GetStaticWorkflow", new object[] {
                        flow_id}, this.GetStaticWorkflowOperationCompleted, userState);
        }
        
        private void OnGetStaticWorkflowOperationCompleted(object arg) {
            if ((this.GetStaticWorkflowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStaticWorkflowCompleted(this, new GetStaticWorkflowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/Save_Static_Work_Flow", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Save_Static_Work_Flow([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] _model) {
            object[] results = this.Invoke("Save_Static_Work_Flow", new object[] {
                        _model});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Save_Static_Work_FlowAsync(byte[] _model) {
            this.Save_Static_Work_FlowAsync(_model, null);
        }
        
        /// <remarks/>
        public void Save_Static_Work_FlowAsync(byte[] _model, object userState) {
            if ((this.Save_Static_Work_FlowOperationCompleted == null)) {
                this.Save_Static_Work_FlowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSave_Static_Work_FlowOperationCompleted);
            }
            this.InvokeAsync("Save_Static_Work_Flow", new object[] {
                        _model}, this.Save_Static_Work_FlowOperationCompleted, userState);
        }
        
        private void OnSave_Static_Work_FlowOperationCompleted(object arg) {
            if ((this.Save_Static_Work_FlowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Save_Static_Work_FlowCompleted(this, new Save_Static_Work_FlowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/Save_测井任务通知单", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Save_测井任务通知单([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data_测井任务通知单, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] dataChangedList_预测项目信息, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] dataRemoveList_预测项目信息) {
            object[] results = this.Invoke("Save_测井任务通知单", new object[] {
                        data_测井任务通知单,
                        dataChangedList_预测项目信息,
                        dataRemoveList_预测项目信息});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Save_测井任务通知单Async(byte[] data_测井任务通知单, byte[] dataChangedList_预测项目信息, byte[] dataRemoveList_预测项目信息) {
            this.Save_测井任务通知单Async(data_测井任务通知单, dataChangedList_预测项目信息, dataRemoveList_预测项目信息, null);
        }
        
        /// <remarks/>
        public void Save_测井任务通知单Async(byte[] data_测井任务通知单, byte[] dataChangedList_预测项目信息, byte[] dataRemoveList_预测项目信息, object userState) {
            if ((this.Save_测井任务通知单OperationCompleted == null)) {
                this.Save_测井任务通知单OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSave_测井任务通知单OperationCompleted);
            }
            this.InvokeAsync("Save_测井任务通知单", new object[] {
                        data_测井任务通知单,
                        dataChangedList_预测项目信息,
                        dataRemoveList_预测项目信息}, this.Save_测井任务通知单OperationCompleted, userState);
        }
        
        private void OnSave_测井任务通知单OperationCompleted(object arg) {
            if ((this.Save_测井任务通知单Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Save_测井任务通知单Completed(this, new Save_测井任务通知单CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetTeamList", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTeamList() {
            object[] results = this.Invoke("GetTeamList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTeamListAsync() {
            this.GetTeamListAsync(null);
        }
        
        /// <remarks/>
        public void GetTeamListAsync(object userState) {
            if ((this.GetTeamListOperationCompleted == null)) {
                this.GetTeamListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTeamListOperationCompleted);
            }
            this.InvokeAsync("GetTeamList", new object[0], this.GetTeamListOperationCompleted, userState);
        }
        
        private void OnGetTeamListOperationCompleted(object arg) {
            if ((this.GetTeamListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTeamListCompleted(this, new GetTeamListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetLogType", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLogType() {
            object[] results = this.Invoke("GetLogType", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetLogTypeAsync() {
            this.GetLogTypeAsync(null);
        }
        
        /// <remarks/>
        public void GetLogTypeAsync(object userState) {
            if ((this.GetLogTypeOperationCompleted == null)) {
                this.GetLogTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLogTypeOperationCompleted);
            }
            this.InvokeAsync("GetLogType", new object[0], this.GetLogTypeOperationCompleted, userState);
        }
        
        private void OnGetLogTypeOperationCompleted(object arg) {
            if ((this.GetLogTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLogTypeCompleted(this, new GetLogTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetLogMode", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLogMode() {
            object[] results = this.Invoke("GetLogMode", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetLogModeAsync() {
            this.GetLogModeAsync(null);
        }
        
        /// <remarks/>
        public void GetLogModeAsync(object userState) {
            if ((this.GetLogModeOperationCompleted == null)) {
                this.GetLogModeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLogModeOperationCompleted);
            }
            this.InvokeAsync("GetLogMode", new object[0], this.GetLogModeOperationCompleted, userState);
        }
        
        private void OnGetLogModeOperationCompleted(object arg) {
            if ((this.GetLogModeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLogModeCompleted(this, new GetLogModeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/Save_测井任务计划书", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Save_测井任务计划书([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data_测井任务计划书) {
            object[] results = this.Invoke("Save_测井任务计划书", new object[] {
                        data_测井任务计划书});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Save_测井任务计划书Async(byte[] data_测井任务计划书) {
            this.Save_测井任务计划书Async(data_测井任务计划书, null);
        }
        
        /// <remarks/>
        public void Save_测井任务计划书Async(byte[] data_测井任务计划书, object userState) {
            if ((this.Save_测井任务计划书OperationCompleted == null)) {
                this.Save_测井任务计划书OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSave_测井任务计划书OperationCompleted);
            }
            this.InvokeAsync("Save_测井任务计划书", new object[] {
                        data_测井任务计划书}, this.Save_测井任务计划书OperationCompleted, userState);
        }
        
        private void OnSave_测井任务计划书OperationCompleted(object arg) {
            if ((this.Save_测井任务计划书Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Save_测井任务计划书Completed(this, new Save_测井任务计划书CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetComboBoxList_钻井状态", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetComboBoxList_钻井状态() {
            object[] results = this.Invoke("GetComboBoxList_钻井状态", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetComboBoxList_钻井状态Async() {
            this.GetComboBoxList_钻井状态Async(null);
        }
        
        /// <remarks/>
        public void GetComboBoxList_钻井状态Async(object userState) {
            if ((this.GetComboBoxList_钻井状态OperationCompleted == null)) {
                this.GetComboBoxList_钻井状态OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetComboBoxList_钻井状态OperationCompleted);
            }
            this.InvokeAsync("GetComboBoxList_钻井状态", new object[0], this.GetComboBoxList_钻井状态OperationCompleted, userState);
        }
        
        private void OnGetComboBoxList_钻井状态OperationCompleted(object arg) {
            if ((this.GetComboBoxList_钻井状态Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetComboBoxList_钻井状态Completed(this, new GetComboBoxList_钻井状态CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/Save_小队施工基本信息", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Save_小队施工基本信息([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data_小队施工基本信息, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data_小队施工时效, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data_小队施工人员, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data_小队施工地面设备) {
            object[] results = this.Invoke("Save_小队施工基本信息", new object[] {
                        data_小队施工基本信息,
                        data_小队施工时效,
                        data_小队施工人员,
                        data_小队施工地面设备});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Save_小队施工基本信息Async(byte[] data_小队施工基本信息, byte[] data_小队施工时效, byte[] data_小队施工人员, byte[] data_小队施工地面设备) {
            this.Save_小队施工基本信息Async(data_小队施工基本信息, data_小队施工时效, data_小队施工人员, data_小队施工地面设备, null);
        }
        
        /// <remarks/>
        public void Save_小队施工基本信息Async(byte[] data_小队施工基本信息, byte[] data_小队施工时效, byte[] data_小队施工人员, byte[] data_小队施工地面设备, object userState) {
            if ((this.Save_小队施工基本信息OperationCompleted == null)) {
                this.Save_小队施工基本信息OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSave_小队施工基本信息OperationCompleted);
            }
            this.InvokeAsync("Save_小队施工基本信息", new object[] {
                        data_小队施工基本信息,
                        data_小队施工时效,
                        data_小队施工人员,
                        data_小队施工地面设备}, this.Save_小队施工基本信息OperationCompleted, userState);
        }
        
        private void OnSave_小队施工基本信息OperationCompleted(object arg) {
            if ((this.Save_小队施工基本信息Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Save_小队施工基本信息Completed(this, new Save_小队施工基本信息CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/Save_测井现场提交信息", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Save_测井现场提交信息(string JOB_PLAN_CD, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data_PRO_LOG_RAPID_INFO, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data_PRO_LOG_RAPID_RESULTS, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data_PRO_LOG_RAPID_ORIGINAL_DATA1, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data_PRO_LOG_RAPID_ORIGINAL_DATA) {
            object[] results = this.Invoke("Save_测井现场提交信息", new object[] {
                        JOB_PLAN_CD,
                        data_PRO_LOG_RAPID_INFO,
                        data_PRO_LOG_RAPID_RESULTS,
                        data_PRO_LOG_RAPID_ORIGINAL_DATA1,
                        data_PRO_LOG_RAPID_ORIGINAL_DATA});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Save_测井现场提交信息Async(string JOB_PLAN_CD, byte[] data_PRO_LOG_RAPID_INFO, byte[] data_PRO_LOG_RAPID_RESULTS, byte[] data_PRO_LOG_RAPID_ORIGINAL_DATA1, byte[] data_PRO_LOG_RAPID_ORIGINAL_DATA) {
            this.Save_测井现场提交信息Async(JOB_PLAN_CD, data_PRO_LOG_RAPID_INFO, data_PRO_LOG_RAPID_RESULTS, data_PRO_LOG_RAPID_ORIGINAL_DATA1, data_PRO_LOG_RAPID_ORIGINAL_DATA, null);
        }
        
        /// <remarks/>
        public void Save_测井现场提交信息Async(string JOB_PLAN_CD, byte[] data_PRO_LOG_RAPID_INFO, byte[] data_PRO_LOG_RAPID_RESULTS, byte[] data_PRO_LOG_RAPID_ORIGINAL_DATA1, byte[] data_PRO_LOG_RAPID_ORIGINAL_DATA, object userState) {
            if ((this.Save_测井现场提交信息OperationCompleted == null)) {
                this.Save_测井现场提交信息OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSave_测井现场提交信息OperationCompleted);
            }
            this.InvokeAsync("Save_测井现场提交信息", new object[] {
                        JOB_PLAN_CD,
                        data_PRO_LOG_RAPID_INFO,
                        data_PRO_LOG_RAPID_RESULTS,
                        data_PRO_LOG_RAPID_ORIGINAL_DATA1,
                        data_PRO_LOG_RAPID_ORIGINAL_DATA}, this.Save_测井现场提交信息OperationCompleted, userState);
        }
        
        private void OnSave_测井现场提交信息OperationCompleted(object arg) {
            if ((this.Save_测井现场提交信息Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Save_测井现场提交信息Completed(this, new Save_测井现场提交信息CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetWorkDetailsFileNames", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetWorkDetailsFileNames(string JOB_PLAN_CD) {
            object[] results = this.Invoke("GetWorkDetailsFileNames", new object[] {
                        JOB_PLAN_CD});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetWorkDetailsFileNamesAsync(string JOB_PLAN_CD) {
            this.GetWorkDetailsFileNamesAsync(JOB_PLAN_CD, null);
        }
        
        /// <remarks/>
        public void GetWorkDetailsFileNamesAsync(string JOB_PLAN_CD, object userState) {
            if ((this.GetWorkDetailsFileNamesOperationCompleted == null)) {
                this.GetWorkDetailsFileNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorkDetailsFileNamesOperationCompleted);
            }
            this.InvokeAsync("GetWorkDetailsFileNames", new object[] {
                        JOB_PLAN_CD}, this.GetWorkDetailsFileNamesOperationCompleted, userState);
        }
        
        private void OnGetWorkDetailsFileNamesOperationCompleted(object arg) {
            if ((this.GetWorkDetailsFileNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorkDetailsFileNamesCompleted(this, new GetWorkDetailsFileNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_测井现场提交信息", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_测井现场提交信息(string JOB_PLAN_CD) {
            object[] results = this.Invoke("GetData_测井现场提交信息", new object[] {
                        JOB_PLAN_CD});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_测井现场提交信息Async(string JOB_PLAN_CD) {
            this.GetData_测井现场提交信息Async(JOB_PLAN_CD, null);
        }
        
        /// <remarks/>
        public void GetData_测井现场提交信息Async(string JOB_PLAN_CD, object userState) {
            if ((this.GetData_测井现场提交信息OperationCompleted == null)) {
                this.GetData_测井现场提交信息OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_测井现场提交信息OperationCompleted);
            }
            this.InvokeAsync("GetData_测井现场提交信息", new object[] {
                        JOB_PLAN_CD}, this.GetData_测井现场提交信息OperationCompleted, userState);
        }
        
        private void OnGetData_测井现场提交信息OperationCompleted(object arg) {
            if ((this.GetData_测井现场提交信息Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_测井现场提交信息Completed(this, new GetData_测井现场提交信息CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_小队施工基本信息", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_小队施工基本信息(string JOB_PLAN_CD) {
            object[] results = this.Invoke("GetData_小队施工基本信息", new object[] {
                        JOB_PLAN_CD});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_小队施工基本信息Async(string JOB_PLAN_CD) {
            this.GetData_小队施工基本信息Async(JOB_PLAN_CD, null);
        }
        
        /// <remarks/>
        public void GetData_小队施工基本信息Async(string JOB_PLAN_CD, object userState) {
            if ((this.GetData_小队施工基本信息OperationCompleted == null)) {
                this.GetData_小队施工基本信息OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_小队施工基本信息OperationCompleted);
            }
            this.InvokeAsync("GetData_小队施工基本信息", new object[] {
                        JOB_PLAN_CD}, this.GetData_小队施工基本信息OperationCompleted, userState);
        }
        
        private void OnGetData_小队施工基本信息OperationCompleted(object arg) {
            if ((this.GetData_小队施工基本信息Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_小队施工基本信息Completed(this, new GetData_小队施工基本信息CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/Save_多方联席会", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Save_多方联席会([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data_多方联席会) {
            object[] results = this.Invoke("Save_多方联席会", new object[] {
                        data_多方联席会});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Save_多方联席会Async(byte[] data_多方联席会) {
            this.Save_多方联席会Async(data_多方联席会, null);
        }
        
        /// <remarks/>
        public void Save_多方联席会Async(byte[] data_多方联席会, object userState) {
            if ((this.Save_多方联席会OperationCompleted == null)) {
                this.Save_多方联席会OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSave_多方联席会OperationCompleted);
            }
            this.InvokeAsync("Save_多方联席会", new object[] {
                        data_多方联席会}, this.Save_多方联席会OperationCompleted, userState);
        }
        
        private void OnSave_多方联席会OperationCompleted(object arg) {
            if ((this.Save_多方联席会Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Save_多方联席会Completed(this, new Save_多方联席会CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Logging_App.WebService/GetData_多方联席会", RequestNamespace="Logging_App.WebService", ResponseNamespace="Logging_App.WebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData_多方联席会(string JOB_PLAN_CD) {
            object[] results = this.Invoke("GetData_多方联席会", new object[] {
                        JOB_PLAN_CD});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetData_多方联席会Async(string JOB_PLAN_CD) {
            this.GetData_多方联席会Async(JOB_PLAN_CD, null);
        }
        
        /// <remarks/>
        public void GetData_多方联席会Async(string JOB_PLAN_CD, object userState) {
            if ((this.GetData_多方联席会OperationCompleted == null)) {
                this.GetData_多方联席会OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetData_多方联席会OperationCompleted);
            }
            this.InvokeAsync("GetData_多方联席会", new object[] {
                        JOB_PLAN_CD}, this.GetData_多方联席会OperationCompleted, userState);
        }
        
        private void OnGetData_多方联席会OperationCompleted(object arg) {
            if ((this.GetData_多方联席会Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetData_多方联席会Completed(this, new GetData_多方联席会CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Logging_App.WebService")]
    public partial class VIEW_REQUISITION_LIST : EntityObject {
        
        private string rEQUISITION_CDField;
        
        private System.Nullable<decimal> rOW_NUMBERField;
        
        private string wELL_JOB_NAMEField;
        
        private System.Nullable<decimal> rEQUISITION_TYPEField;
        
        private System.Nullable<decimal> pREDICTED_LOGGING_ITEMS_IDField;
        
        private System.Nullable<System.DateTime> pREDICTED_LOGGING_DATEField;
        
        private string pREDICTED_LOGGING_INTERVALField;
        
        private string lOG_TEAM_IDField;
        
        private string jOB_CHINESE_NAMEField;
        
        private string rEQUISITION_TYPE_NAMEField;
        
        private string sTATEField;
        
        /// <remarks/>
        public string REQUISITION_CD {
            get {
                return this.rEQUISITION_CDField;
            }
            set {
                this.rEQUISITION_CDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> ROW_NUMBER {
            get {
                return this.rOW_NUMBERField;
            }
            set {
                this.rOW_NUMBERField = value;
            }
        }
        
        /// <remarks/>
        public string WELL_JOB_NAME {
            get {
                return this.wELL_JOB_NAMEField;
            }
            set {
                this.wELL_JOB_NAMEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> REQUISITION_TYPE {
            get {
                return this.rEQUISITION_TYPEField;
            }
            set {
                this.rEQUISITION_TYPEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> PREDICTED_LOGGING_ITEMS_ID {
            get {
                return this.pREDICTED_LOGGING_ITEMS_IDField;
            }
            set {
                this.pREDICTED_LOGGING_ITEMS_IDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> PREDICTED_LOGGING_DATE {
            get {
                return this.pREDICTED_LOGGING_DATEField;
            }
            set {
                this.pREDICTED_LOGGING_DATEField = value;
            }
        }
        
        /// <remarks/>
        public string PREDICTED_LOGGING_INTERVAL {
            get {
                return this.pREDICTED_LOGGING_INTERVALField;
            }
            set {
                this.pREDICTED_LOGGING_INTERVALField = value;
            }
        }
        
        /// <remarks/>
        public string LOG_TEAM_ID {
            get {
                return this.lOG_TEAM_IDField;
            }
            set {
                this.lOG_TEAM_IDField = value;
            }
        }
        
        /// <remarks/>
        public string JOB_CHINESE_NAME {
            get {
                return this.jOB_CHINESE_NAMEField;
            }
            set {
                this.jOB_CHINESE_NAMEField = value;
            }
        }
        
        /// <remarks/>
        public string REQUISITION_TYPE_NAME {
            get {
                return this.rEQUISITION_TYPE_NAMEField;
            }
            set {
                this.rEQUISITION_TYPE_NAMEField = value;
            }
        }
        
        /// <remarks/>
        public string STATE {
            get {
                return this.sTATEField;
            }
            set {
                this.sTATEField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VIEW_REQUISITION_LIST))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Logging_App.WebService")]
    public abstract partial class EntityObject : StructuralObject {
        
        private EntityKey entityKeyField;
        
        /// <remarks/>
        public EntityKey EntityKey {
            get {
                return this.entityKeyField;
            }
            set {
                this.entityKeyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Logging_App.WebService")]
    public partial class EntityKey {
        
        private string entitySetNameField;
        
        private string entityContainerNameField;
        
        private EntityKeyMember[] entityKeyValuesField;
        
        /// <remarks/>
        public string EntitySetName {
            get {
                return this.entitySetNameField;
            }
            set {
                this.entitySetNameField = value;
            }
        }
        
        /// <remarks/>
        public string EntityContainerName {
            get {
                return this.entityContainerNameField;
            }
            set {
                this.entityContainerNameField = value;
            }
        }
        
        /// <remarks/>
        public EntityKeyMember[] EntityKeyValues {
            get {
                return this.entityKeyValuesField;
            }
            set {
                this.entityKeyValuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Logging_App.WebService")]
    public partial class EntityKeyMember {
        
        private string keyField;
        
        private object valueField;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public object Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EntityObject))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VIEW_REQUISITION_LIST))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="Logging_App.WebService")]
    public abstract partial class StructuralObject {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_井试油参数CompletedEventHandler(object sender, GetData_井试油参数CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_井试油参数CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_井试油参数CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Savedata_钻井液参数CompletedEventHandler(object sender, Savedata_钻井液参数CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Savedata_钻井液参数CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Savedata_钻井液参数CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDataGList_钻井液参数CompletedEventHandler(object sender, GetDataGList_钻井液参数CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataGList_钻井液参数CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataGList_钻井液参数CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_钻井液参数CompletedEventHandler(object sender, GetData_钻井液参数CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_钻井液参数CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_钻井液参数CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Savedata_生产参数CompletedEventHandler(object sender, Savedata_生产参数CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Savedata_生产参数CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Savedata_生产参数CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDataGList_生产参数CompletedEventHandler(object sender, GetDataGList_生产参数CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataGList_生产参数CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataGList_生产参数CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_生产参数CompletedEventHandler(object sender, GetData_生产参数CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_生产参数CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_生产参数CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Savedata_套管参数CompletedEventHandler(object sender, Savedata_套管参数CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Savedata_套管参数CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Savedata_套管参数CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDataGList_套管参数CompletedEventHandler(object sender, GetDataGList_套管参数CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataGList_套管参数CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataGList_套管参数CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_套管参数CompletedEventHandler(object sender, GetData_套管参数CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_套管参数CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_套管参数CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Savedata_钻头程序CompletedEventHandler(object sender, Savedata_钻头程序CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Savedata_钻头程序CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Savedata_钻头程序CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDataGList_钻头程序CompletedEventHandler(object sender, GetDataGList_钻头程序CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataGList_钻头程序CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataGList_钻头程序CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_钻头程序CompletedEventHandler(object sender, GetData_钻头程序CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_钻头程序CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_钻头程序CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Savedata_固井参数CompletedEventHandler(object sender, Savedata_固井参数CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Savedata_固井参数CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Savedata_固井参数CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDataGList_固井参数CompletedEventHandler(object sender, GetDataGList_固井参数CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataGList_固井参数CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataGList_固井参数CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_固井参数CompletedEventHandler(object sender, GetData_固井参数CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_固井参数CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_固井参数CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Savedata_录井解释成果CompletedEventHandler(object sender, Savedata_录井解释成果CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Savedata_录井解释成果CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Savedata_录井解释成果CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDataGList_录井解释成果CompletedEventHandler(object sender, GetDataGList_录井解释成果CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataGList_录井解释成果CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataGList_录井解释成果CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_录井解释成果CompletedEventHandler(object sender, GetData_录井解释成果CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_录井解释成果CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_录井解释成果CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Import_地层分层数据2CompletedEventHandler(object sender, Import_地层分层数据2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Import_地层分层数据2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Import_地层分层数据2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Import_录井解释成果CompletedEventHandler(object sender, Import_录井解释成果CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Import_录井解释成果CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Import_录井解释成果CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Savedata_地层分层数据2CompletedEventHandler(object sender, Savedata_地层分层数据2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Savedata_地层分层数据2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Savedata_地层分层数据2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDataGList_地层分层数据2CompletedEventHandler(object sender, GetDataGList_地层分层数据2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataGList_地层分层数据2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataGList_地层分层数据2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_地层分层数据CompletedEventHandler(object sender, GetData_地层分层数据CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_地层分层数据CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_地层分层数据CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteLogTestOilCompletedEventHandler(object sender, DeleteLogTestOilCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLogTestOilCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLogTestOilCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteLogSlopCompletedEventHandler(object sender, DeleteLogSlopCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLogSlopCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLogSlopCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteLogProduceCompletedEventHandler(object sender, DeleteLogProduceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLogProduceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLogProduceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteLogCasinCompletedEventHandler(object sender, DeleteLogCasinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLogCasinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLogCasinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteLogCementCompletedEventHandler(object sender, DeleteLogCementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLogCementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLogCementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteLogBitProgramCompletedEventHandler(object sender, DeleteLogBitProgramCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLogBitProgramCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLogBitProgramCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteLogLoggingInterpretationCompletedEventHandler(object sender, DeleteLogLoggingInterpretationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLogLoggingInterpretationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLogLoggingInterpretationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteComBaseStrataLayer2CompletedEventHandler(object sender, DeleteComBaseStrataLayer2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteComBaseStrataLayer2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteComBaseStrataLayer2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFileViewExtensionsCompletedEventHandler(object sender, GetFileViewExtensionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileViewExtensionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileViewExtensionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDataPushListCompletedEventHandler(object sender, GetDataPushListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataPushListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataPushListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VIEW_REQUISITION_LIST[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VIEW_REQUISITION_LIST[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VilidateDataPushCompletedEventHandler(object sender, VilidateDataPushCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VilidateDataPushCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VilidateDataPushCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VilidateDataPushXYCompletedEventHandler(object sender, VilidateDataPushXYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VilidateDataPushXYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VilidateDataPushXYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDataPushListYTHPTCompletedEventHandler(object sender, GetDataPushListYTHPTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataPushListYTHPTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataPushListYTHPTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int total {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDataPushListXYCompletedEventHandler(object sender, GetDataPushListXYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataPushListXYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataPushListXYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int total {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFileDownloadListCompletedEventHandler(object sender, GetFileDownloadListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileDownloadListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileDownloadListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFileDownloadDetailsCompletedEventHandler(object sender, GetFileDownloadDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileDownloadDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileDownloadDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDvdInfoCompletedEventHandler(object sender, GetDvdInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDvdInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDvdInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveDvdInfoCompletedEventHandler(object sender, SaveDvdInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDvdInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDvdInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDvdInfoListCompletedEventHandler(object sender, GetDvdInfoListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDvdInfoListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDvdInfoListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int total {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateDrillIDCompletedEventHandler(object sender, UpdateDrillIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDrillIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDrillIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDataList_井名CompletedEventHandler(object sender, GetDataList_井名CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataList_井名CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataList_井名CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_通知单引用参数CompletedEventHandler(object sender, GetData_通知单引用参数CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_通知单引用参数CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_通知单引用参数CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_计划任务书参数显示CompletedEventHandler(object sender, GetData_计划任务书参数显示CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_计划任务书参数显示CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_计划任务书参数显示CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetList_SYS_WELL_CACHE_IDCompletedEventHandler(object sender, GetList_SYS_WELL_CACHE_IDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetList_SYS_WELL_CACHE_IDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetList_SYS_WELL_CACHE_IDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetList_SYS_WELL_CACHE_NAMECompletedEventHandler(object sender, GetList_SYS_WELL_CACHE_NAMECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetList_SYS_WELL_CACHE_NAMECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetList_SYS_WELL_CACHE_NAMECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetList_SYS_WELL_CACHE_TASKCompletedEventHandler(object sender, GetList_SYS_WELL_CACHE_TASKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetList_SYS_WELL_CACHE_TASKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetList_SYS_WELL_CACHE_TASKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Delete_SYS_WELL_CACHECompletedEventHandler(object sender, Delete_SYS_WELL_CACHECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Delete_SYS_WELL_CACHECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Delete_SYS_WELL_CACHECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_COMJOBINFOCompletedEventHandler(object sender, GetData_COMJOBINFOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_COMJOBINFOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_COMJOBINFOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Get_WELLJOBNAMECompletedEventHandler(object sender, Get_WELLJOBNAMECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_WELLJOBNAMECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_WELLJOBNAMECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDataList_A12井名CompletedEventHandler(object sender, GetDataList_A12井名CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataList_A12井名CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataList_A12井名CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_A12作业项目CompletedEventHandler(object sender, GetData_A12作业项目CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_A12作业项目CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_A12作业项目CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_A12井CompletedEventHandler(object sender, GetData_A12井CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_A12井CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_A12井CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_A12井筒CompletedEventHandler(object sender, GetData_A12井筒CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_A12井筒CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_A12井筒CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_A12井身结构数据CompletedEventHandler(object sender, GetData_A12井身结构数据CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_A12井身结构数据CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_A12井身结构数据CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_A12套管下深CompletedEventHandler(object sender, GetData_A12套管下深CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_A12套管下深CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_A12套管下深CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_A12钻头尺寸CompletedEventHandler(object sender, GetData_A12钻头尺寸CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_A12钻头尺寸CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_A12钻头尺寸CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_A12钻井液CompletedEventHandler(object sender, GetData_A12钻井液CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_A12钻井液CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_A12钻井液CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_A12钻达井深CompletedEventHandler(object sender, GetData_A12钻达井深CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_A12钻达井深CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_A12钻达井深CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Save_SYS_WELL_DATACompletedEventHandler(object sender, Save_SYS_WELL_DATACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Save_SYS_WELL_DATACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Save_SYS_WELL_DATACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Save_ALL_WELL_DATACompletedEventHandler(object sender, Save_ALL_WELL_DATACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Save_ALL_WELL_DATACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Save_ALL_WELL_DATACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_A12取心数据CompletedEventHandler(object sender, GetData_A12取心数据CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_A12取心数据CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_A12取心数据CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_A12钻井液全性能CompletedEventHandler(object sender, GetData_A12钻井液全性能CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_A12钻井液全性能CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_A12钻井液全性能CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_A12下套管记录CompletedEventHandler(object sender, GetData_A12下套管记录CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_A12下套管记录CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_A12下套管记录CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_A12钻头使用情况信息CompletedEventHandler(object sender, GetData_A12钻头使用情况信息CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_A12钻头使用情况信息CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_A12钻头使用情况信息CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_A12水泥浆信息CompletedEventHandler(object sender, GetData_A12水泥浆信息CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_A12水泥浆信息CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_A12水泥浆信息CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_A12固井基础数据CompletedEventHandler(object sender, GetData_A12固井基础数据CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_A12固井基础数据CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_A12固井基础数据CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_A12钻井施工基础数据CompletedEventHandler(object sender, GetData_A12钻井施工基础数据CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_A12钻井施工基础数据CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_A12钻井施工基础数据CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Save_ALL_JOB_DATACompletedEventHandler(object sender, Save_ALL_JOB_DATACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Save_ALL_JOB_DATACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Save_ALL_JOB_DATACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Save_A12取芯数据CompletedEventHandler(object sender, Save_A12取芯数据CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Save_A12取芯数据CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Save_A12取芯数据CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Save_A12钻井液全性能CompletedEventHandler(object sender, Save_A12钻井液全性能CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Save_A12钻井液全性能CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Save_A12钻井液全性能CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Save_A12套管参数CompletedEventHandler(object sender, Save_A12套管参数CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Save_A12套管参数CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Save_A12套管参数CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Save_A12钻头使用情况信息CompletedEventHandler(object sender, Save_A12钻头使用情况信息CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Save_A12钻头使用情况信息CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Save_A12钻头使用情况信息CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Save_A12固井参数CompletedEventHandler(object sender, Save_A12固井参数CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Save_A12固井参数CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Save_A12固井参数CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Save_施工总结会CompletedEventHandler(object sender, Save_施工总结会CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Save_施工总结会CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Save_施工总结会CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_施工总结会CompletedEventHandler(object sender, GetData_施工总结会CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_施工总结会CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_施工总结会CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Save_井场班前会CompletedEventHandler(object sender, Save_井场班前会CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Save_井场班前会CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Save_井场班前会CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_井场班前会CompletedEventHandler(object sender, GetData_井场班前会CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_井场班前会CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_井场班前会CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Save_三交会CompletedEventHandler(object sender, Save_三交会CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Save_三交会CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Save_三交会CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_三交会CompletedEventHandler(object sender, GetData_三交会CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_三交会CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_三交会CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Savedata_取心参数CompletedEventHandler(object sender, Savedata_取心参数CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Savedata_取心参数CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Savedata_取心参数CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDataGList_取心参数CompletedEventHandler(object sender, GetDataGList_取心参数CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataGList_取心参数CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataGList_取心参数CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_取心参数CompletedEventHandler(object sender, GetData_取心参数CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_取心参数CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_取心参数CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Savedata_井试油参数CompletedEventHandler(object sender, Savedata_井试油参数CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Savedata_井试油参数CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Savedata_井试油参数CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDataGList_井试油参数CompletedEventHandler(object sender, GetDataGList_井试油参数CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataGList_井试油参数CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataGList_井试油参数CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDataList_项目明细CompletedEventHandler(object sender, GetDataList_项目明细CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataList_项目明细CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataList_项目明细CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDataList_井下仪器编码CompletedEventHandler(object sender, GetDataList_井下仪器编码CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataList_井下仪器编码CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataList_井下仪器编码CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDataList_车辆信息CompletedEventHandler(object sender, GetDataList_车辆信息CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataList_车辆信息CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataList_车辆信息CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_测井任务通知单CompletedEventHandler(object sender, GetData_测井任务通知单CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_测井任务通知单CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_测井任务通知单CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDataList_放射源编码CompletedEventHandler(object sender, GetDataList_放射源编码CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataList_放射源编码CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataList_放射源编码CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Save_作业明细CompletedEventHandler(object sender, Save_作业明细CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Save_作业明细CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Save_作业明细CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_项目明细CompletedEventHandler(object sender, GetData_项目明细CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_项目明细CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_项目明细CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_专家指导CompletedEventHandler(object sender, GetData_专家指导CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_专家指导CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_专家指导CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Save_专家指导CompletedEventHandler(object sender, Save_专家指导CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Save_专家指导CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Save_专家指导CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetProcessWellJobCompletedEventHandler(object sender, GetProcessWellJobCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProcessWellJobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProcessWellJobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetProcessDataJobSourceCompletedEventHandler(object sender, GetProcessDataJobSourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProcessDataJobSourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProcessDataJobSourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Save_解释处理作业CompletedEventHandler(object sender, Save_解释处理作业CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Save_解释处理作业CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Save_解释处理作业CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_文档类型CompletedEventHandler(object sender, GetData_文档类型CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_文档类型CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_文档类型CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_图件类型CompletedEventHandler(object sender, GetData_图件类型CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_图件类型CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_图件类型CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_解释处理项目编码CompletedEventHandler(object sender, GetData_解释处理项目编码CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_解释处理项目编码CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_解释处理项目编码CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_解释图件编码CompletedEventHandler(object sender, GetData_解释图件编码CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_解释图件编码CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_解释图件编码CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDataList_解释处理作业CompletedEventHandler(object sender, GetDataList_解释处理作业CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataList_解释处理作业CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataList_解释处理作业CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int total {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDefaultValue_解释处理作业CompletedEventHandler(object sender, GetDefaultValue_解释处理作业CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefaultValue_解释处理作业CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDefaultValue_解释处理作业CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_解释处理作业CompletedEventHandler(object sender, GetData_解释处理作业CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_解释处理作业CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_解释处理作业CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveDataList_综合解释成果数据CompletedEventHandler(object sender, SaveDataList_综合解释成果数据CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDataList_综合解释成果数据CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDataList_综合解释成果数据CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDataList_综合解释成果数据CompletedEventHandler(object sender, GetDataList_综合解释成果数据CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataList_综合解释成果数据CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataList_综合解释成果数据CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveDataList_页岩气解释成果数据CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDataList_页岩气解释成果数据CompletedEventHandler(object sender, GetDataList_页岩气解释成果数据CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataList_页岩气解释成果数据CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataList_页岩气解释成果数据CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCurveNamesCompletedEventHandler(object sender, GetCurveNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurveNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurveNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMapCurveInfoCompletedEventHandler(object sender, GetMapCurveInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMapCurveInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMapCurveInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllCurveNamesCompletedEventHandler(object sender, GetAllCurveNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCurveNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCurveNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveDataList_固井质量评价数据CompletedEventHandler(object sender, SaveDataList_固井质量评价数据CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDataList_固井质量评价数据CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDataList_固井质量评价数据CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDataList_固井质量评价数据CompletedEventHandler(object sender, GetDataList_固井质量评价数据CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataList_固井质量评价数据CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataList_固井质量评价数据CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveDataList_测量井斜数据CompletedEventHandler(object sender, SaveDataList_测量井斜数据CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDataList_测量井斜数据CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDataList_测量井斜数据CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDataList_测量井斜数据CompletedEventHandler(object sender, GetDataList_测量井斜数据CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataList_测量井斜数据CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataList_测量井斜数据CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveDataList_综合解释成果曲线数据CompletedEventHandler(object sender, SaveDataList_综合解释成果曲线数据CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDataList_综合解释成果曲线数据CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDataList_综合解释成果曲线数据CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveCurveDataCacheCompletedEventHandler(object sender, SaveCurveDataCacheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCurveDataCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCurveDataCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<decimal> Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<decimal>)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TransOldComCurveDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TransOldProcessingCurveDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCurveDataCacheCompletedEventHandler(object sender, GetCurveDataCacheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurveDataCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurveDataCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCurveDataCompletedEventHandler(object sender, GetCurveDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurveDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurveDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveCurveDataCompletedEventHandler(object sender, SaveCurveDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCurveDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCurveDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetThreePressureDataCompletedEventHandler(object sender, GetThreePressureDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetThreePressureDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetThreePressureDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveThreePressureDataCompletedEventHandler(object sender, SaveThreePressureDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveThreePressureDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveThreePressureDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCurveDataCachePageCompletedEventHandler(object sender, GetCurveDataCachePageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurveDataCachePageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurveDataCachePageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int countLine {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDataList_综合解释成果曲线数据CompletedEventHandler(object sender, GetDataList_综合解释成果曲线数据CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataList_综合解释成果曲线数据CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataList_综合解释成果曲线数据CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveDataList_测井分层数据CompletedEventHandler(object sender, SaveDataList_测井分层数据CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDataList_测井分层数据CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDataList_测井分层数据CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDataList_测井分层数据CompletedEventHandler(object sender, GetDataList_测井分层数据CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataList_测井分层数据CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataList_测井分层数据CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetAllProcessFileByWellNameCompletedEventHandler(object sender, GetAllProcessFileByWellNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllProcessFileByWellNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllProcessFileByWellNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateProcessFileInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DelSysUploadCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DelUploadFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CompareDataFilesCompletedEventHandler(object sender, CompareDataFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompareDataFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CompareDataFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveDataList_井眼轨迹数据CompletedEventHandler(object sender, SaveDataList_井眼轨迹数据CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDataList_井眼轨迹数据CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDataList_井眼轨迹数据CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDataList_井眼轨迹数据CompletedEventHandler(object sender, GetDataList_井眼轨迹数据CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataList_井眼轨迹数据CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataList_井眼轨迹数据CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveProcessingCurveInfoCompletedEventHandler(object sender, SaveProcessingCurveInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveProcessingCurveInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveProcessingCurveInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveCurveInfoCompletedEventHandler(object sender, SaveCurveInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveCurveInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveCurveInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCurveInfoCompletedEventHandler(object sender, GetCurveInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurveInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurveInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetProcessingCurveDataCompletedEventHandler(object sender, GetProcessingCurveDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProcessingCurveDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProcessingCurveDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DelProcessingFileCompletedEventHandler(object sender, DelProcessingFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelProcessingFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelProcessingFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveProcessingFileCompletedEventHandler(object sender, SaveProcessingFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveProcessingFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveProcessingFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetProcessingFileCompletedEventHandler(object sender, GetProcessingFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProcessingFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProcessingFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetProcessDocumentCompletedEventHandler(object sender, GetProcessDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProcessDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProcessDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveProcessDocumentCompletedEventHandler(object sender, SaveProcessDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveProcessDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveProcessDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMyTaskCompletedEventHandler(object sender, GetMyTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteLogTaskCompletedEventHandler(object sender, DeleteLogTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLogTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLogTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteLogProcessCompletedEventHandler(object sender, DeleteLogProcessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLogProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLogProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteComWellBasicCompletedEventHandler(object sender, DeleteComWellBasicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteComWellBasicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteComWellBasicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteLogCoreCompletedEventHandler(object sender, DeleteLogCoreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLogCoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLogCoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SearchWellBasicCompletedEventHandler(object sender, SearchWellBasicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchWellBasicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchWellBasicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveWellBasicCompletedEventHandler(object sender, SaveWellBasicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveWellBasicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveWellBasicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetWellBasicCompletedEventHandler(object sender, GetWellBasicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWellBasicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWellBasicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetWellboreListCompletedEventHandler(object sender, GetWellboreListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWellboreListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWellboreListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetWellboreCompletedEventHandler(object sender, GetWellboreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWellboreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWellboreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetWellStructureCompletedEventHandler(object sender, GetWellStructureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWellStructureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWellStructureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveWellboreCompletedEventHandler(object sender, SaveWellboreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveWellboreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveWellboreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveJobInfoCompletedEventHandler(object sender, SaveJobInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveJobInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveJobInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveDirllStateCompletedEventHandler(object sender, SaveDirllStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveDirllStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveDirllStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveGEO_DES_ITEMCompletedEventHandler(object sender, SaveGEO_DES_ITEMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveGEO_DES_ITEMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveGEO_DES_ITEMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTaskListCompletedEventHandler(object sender, GetTaskListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaskListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaskListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int total {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetJobInfoListCompletedEventHandler(object sender, GetJobInfoListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJobInfoListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJobInfoListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetJobInfoCompletedEventHandler(object sender, GetJobInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJobInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJobInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDrillStateCompletedEventHandler(object sender, GetDrillStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDrillStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDrillStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetGEO_DES_ItemCompletedEventHandler(object sender, GetGEO_DES_ItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGEO_DES_ItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGEO_DES_ItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDrillStateListCompletedEventHandler(object sender, GetDrillStateListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDrillStateListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDrillStateListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetGEO_DES_ItemListCompletedEventHandler(object sender, GetGEO_DES_ItemListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGEO_DES_ItemListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGEO_DES_ItemListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetWellComboBoxListCompletedEventHandler(object sender, GetWellComboBoxListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWellComboBoxListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWellComboBoxListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetWellTypeCompletedEventHandler(object sender, GetWellTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWellTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWellTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetWellSortCompletedEventHandler(object sender, GetWellSortCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWellSortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWellSortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFileTemplateCompletedEventHandler(object sender, GetFileTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetA1DataByViewCompletedEventHandler(object sender, GetA1DataByViewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetA1DataByViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetA1DataByViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PushFileToA1CompletedEventHandler(object sender, PushFileToA1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PushFileToA1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PushFileToA1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPlanListCompletedEventHandler(object sender, GetPlanListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlanListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlanListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int total {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPlanDataCompletedEventHandler(object sender, GetPlanDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlanDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlanDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetWellJobNameListCompletedEventHandler(object sender, GetWellJobNameListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWellJobNameListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWellJobNameListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetRequisitionCdListCompletedEventHandler(object sender, GetRequisitionCdListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRequisitionCdListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRequisitionCdListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetWellBaseInfoCompletedEventHandler(object sender, GetWellBaseInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWellBaseInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWellBaseInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetComJobInfoCompletedEventHandler(object sender, GetComJobInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetComJobInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetComJobInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPredictedItemsCompletedEventHandler(object sender, GetPredictedItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPredictedItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPredictedItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetJobIDlistCompletedEventHandler(object sender, GetJobIDlistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJobIDlistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJobIDlistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetlogItemsCompletedEventHandler(object sender, GetlogItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetlogItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetlogItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetComboxList_QueryDateCompletedEventHandler(object sender, GetComboxList_QueryDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetComboxList_QueryDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetComboxList_QueryDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetRequisitionTypesCompletedEventHandler(object sender, GetRequisitionTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRequisitionTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRequisitionTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetComboBoxList_作业目的CompletedEventHandler(object sender, GetComboBoxList_作业目的CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetComboBoxList_作业目的CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetComboBoxList_作业目的CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetComboBoxList_市场类型CompletedEventHandler(object sender, GetComboBoxList_市场类型CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetComboBoxList_市场类型CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetComboBoxList_市场类型CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetComboBoxList_甲方来电单位CompletedEventHandler(object sender, GetComboBoxList_甲方来电单位CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetComboBoxList_甲方来电单位CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetComboBoxList_甲方来电单位CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetComboBoxList_执行单位CompletedEventHandler(object sender, GetComboBoxList_执行单位CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetComboBoxList_执行单位CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetComboBoxList_执行单位CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetComboBoxList_COMBINATION_NAMECompletedEventHandler(object sender, GetComboBoxList_COMBINATION_NAMECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetComboBoxList_COMBINATION_NAMECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetComboBoxList_COMBINATION_NAMECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetComboBoxList_下井趟次号CompletedEventHandler(object sender, GetComboBoxList_下井趟次号CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetComboBoxList_下井趟次号CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetComboBoxList_下井趟次号CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetComboBoxList_CurveQualityTypesCompletedEventHandler(object sender, GetComboBoxList_CurveQualityTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetComboBoxList_CurveQualityTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetComboBoxList_CurveQualityTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetComboBoxList_InterpretCenterCompletedEventHandler(object sender, GetComboBoxList_InterpretCenterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetComboBoxList_InterpretCenterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetComboBoxList_InterpretCenterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetComboBoxList_LogSeriesCompletedEventHandler(object sender, GetComboBoxList_LogSeriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetComboBoxList_LogSeriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetComboBoxList_LogSeriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetComboBoxList_DataFormatCompletedEventHandler(object sender, GetComboBoxList_DataFormatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetComboBoxList_DataFormatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetComboBoxList_DataFormatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetComboBoxList_AcceptanceWayCompletedEventHandler(object sender, GetComboBoxList_AcceptanceWayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetComboBoxList_AcceptanceWayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetComboBoxList_AcceptanceWayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetComboBoxList_ProcessSoftwareCompletedEventHandler(object sender, GetComboBoxList_ProcessSoftwareCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetComboBoxList_ProcessSoftwareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetComboBoxList_ProcessSoftwareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetComboBoxList_SlopPropertiesCompletedEventHandler(object sender, GetComboBoxList_SlopPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetComboBoxList_SlopPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetComboBoxList_SlopPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetComboBoxList_ArchiveItemCodesCompletedEventHandler(object sender, GetComboBoxList_ArchiveItemCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetComboBoxList_ArchiveItemCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetComboBoxList_ArchiveItemCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetStaticWorkflowListCompletedEventHandler(object sender, GetStaticWorkflowListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStaticWorkflowListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStaticWorkflowListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetStaticWorkflowCompletedEventHandler(object sender, GetStaticWorkflowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStaticWorkflowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStaticWorkflowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Save_Static_Work_FlowCompletedEventHandler(object sender, Save_Static_Work_FlowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Save_Static_Work_FlowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Save_Static_Work_FlowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Save_测井任务通知单CompletedEventHandler(object sender, Save_测井任务通知单CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Save_测井任务通知单CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Save_测井任务通知单CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetTeamListCompletedEventHandler(object sender, GetTeamListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTeamListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTeamListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetLogTypeCompletedEventHandler(object sender, GetLogTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLogTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLogTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetLogModeCompletedEventHandler(object sender, GetLogModeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLogModeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLogModeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Save_测井任务计划书CompletedEventHandler(object sender, Save_测井任务计划书CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Save_测井任务计划书CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Save_测井任务计划书CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetComboBoxList_钻井状态CompletedEventHandler(object sender, GetComboBoxList_钻井状态CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetComboBoxList_钻井状态CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetComboBoxList_钻井状态CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Save_小队施工基本信息CompletedEventHandler(object sender, Save_小队施工基本信息CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Save_小队施工基本信息CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Save_小队施工基本信息CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Save_测井现场提交信息CompletedEventHandler(object sender, Save_测井现场提交信息CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Save_测井现场提交信息CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Save_测井现场提交信息CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetWorkDetailsFileNamesCompletedEventHandler(object sender, GetWorkDetailsFileNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWorkDetailsFileNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWorkDetailsFileNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_测井现场提交信息CompletedEventHandler(object sender, GetData_测井现场提交信息CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_测井现场提交信息CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_测井现场提交信息CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_小队施工基本信息CompletedEventHandler(object sender, GetData_小队施工基本信息CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_小队施工基本信息CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_小队施工基本信息CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Save_多方联席会CompletedEventHandler(object sender, Save_多方联席会CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Save_多方联席会CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Save_多方联席会CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetData_多方联席会CompletedEventHandler(object sender, GetData_多方联席会CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetData_多方联席会CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetData_多方联席会CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591