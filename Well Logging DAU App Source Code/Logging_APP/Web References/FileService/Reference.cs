//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.1 版自动生成。
// 
#pragma warning disable 1591

namespace Logging_App.FileService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FileServiceSoap", Namespace="http://tempuri.org/")]
    public partial class FileService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateUploadTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUploadStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadWriteOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDownloadTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback DownloadReadOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPluginsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdateDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveUploadInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUploadIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveFileUploadInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Export_上井解释登记卡OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FileService() {
            this.Url = global::Logging_App.Properties.Settings.Default.Logging_App_FileService_FileService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateUploadTaskCompletedEventHandler CreateUploadTaskCompleted;
        
        /// <remarks/>
        public event GetUploadStateCompletedEventHandler GetUploadStateCompleted;
        
        /// <remarks/>
        public event UploadWriteCompletedEventHandler UploadWriteCompleted;
        
        /// <remarks/>
        public event CreateDownloadTaskCompletedEventHandler CreateDownloadTaskCompleted;
        
        /// <remarks/>
        public event DownloadReadCompletedEventHandler DownloadReadCompleted;
        
        /// <remarks/>
        public event GetVersionCompletedEventHandler GetVersionCompleted;
        
        /// <remarks/>
        public event GetPluginsInfoCompletedEventHandler GetPluginsInfoCompleted;
        
        /// <remarks/>
        public event GetUpdateDataCompletedEventHandler GetUpdateDataCompleted;
        
        /// <remarks/>
        public event SaveUploadInfoCompletedEventHandler SaveUploadInfoCompleted;
        
        /// <remarks/>
        public event GetUploadIDCompletedEventHandler GetUploadIDCompleted;
        
        /// <remarks/>
        public event GetFileNameCompletedEventHandler GetFileNameCompleted;
        
        /// <remarks/>
        public event SaveFileUploadInfoCompletedEventHandler SaveFileUploadInfoCompleted;
        
        /// <remarks/>
        public event Export_上井解释登记卡CompletedEventHandler Export_上井解释登记卡Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateUploadTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UploadState CreateUploadTask(string sha1, string md5, long length, string tasktype) {
            object[] results = this.Invoke("CreateUploadTask", new object[] {
                        sha1,
                        md5,
                        length,
                        tasktype});
            return ((UploadState)(results[0]));
        }
        
        /// <remarks/>
        public void CreateUploadTaskAsync(string sha1, string md5, long length, string tasktype) {
            this.CreateUploadTaskAsync(sha1, md5, length, tasktype, null);
        }
        
        /// <remarks/>
        public void CreateUploadTaskAsync(string sha1, string md5, long length, string tasktype, object userState) {
            if ((this.CreateUploadTaskOperationCompleted == null)) {
                this.CreateUploadTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUploadTaskOperationCompleted);
            }
            this.InvokeAsync("CreateUploadTask", new object[] {
                        sha1,
                        md5,
                        length,
                        tasktype}, this.CreateUploadTaskOperationCompleted, userState);
        }
        
        private void OnCreateUploadTaskOperationCompleted(object arg) {
            if ((this.CreateUploadTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateUploadTaskCompleted(this, new CreateUploadTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUploadState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UploadState GetUploadState(int taskID) {
            object[] results = this.Invoke("GetUploadState", new object[] {
                        taskID});
            return ((UploadState)(results[0]));
        }
        
        /// <remarks/>
        public void GetUploadStateAsync(int taskID) {
            this.GetUploadStateAsync(taskID, null);
        }
        
        /// <remarks/>
        public void GetUploadStateAsync(int taskID, object userState) {
            if ((this.GetUploadStateOperationCompleted == null)) {
                this.GetUploadStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUploadStateOperationCompleted);
            }
            this.InvokeAsync("GetUploadState", new object[] {
                        taskID}, this.GetUploadStateOperationCompleted, userState);
        }
        
        private void OnGetUploadStateOperationCompleted(object arg) {
            if ((this.GetUploadStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUploadStateCompleted(this, new GetUploadStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UploadWrite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UploadState UploadWrite(int taskID, long position, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] bData) {
            object[] results = this.Invoke("UploadWrite", new object[] {
                        taskID,
                        position,
                        bData});
            return ((UploadState)(results[0]));
        }
        
        /// <remarks/>
        public void UploadWriteAsync(int taskID, long position, byte[] bData) {
            this.UploadWriteAsync(taskID, position, bData, null);
        }
        
        /// <remarks/>
        public void UploadWriteAsync(int taskID, long position, byte[] bData, object userState) {
            if ((this.UploadWriteOperationCompleted == null)) {
                this.UploadWriteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadWriteOperationCompleted);
            }
            this.InvokeAsync("UploadWrite", new object[] {
                        taskID,
                        position,
                        bData}, this.UploadWriteOperationCompleted, userState);
        }
        
        private void OnUploadWriteOperationCompleted(object arg) {
            if ((this.UploadWriteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadWriteCompleted(this, new UploadWriteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateDownloadTask", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DownloadState CreateDownloadTask([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<decimal> fileid, string filename, string tasktype) {
            object[] results = this.Invoke("CreateDownloadTask", new object[] {
                        fileid,
                        filename,
                        tasktype});
            return ((DownloadState)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDownloadTaskAsync(System.Nullable<decimal> fileid, string filename, string tasktype) {
            this.CreateDownloadTaskAsync(fileid, filename, tasktype, null);
        }
        
        /// <remarks/>
        public void CreateDownloadTaskAsync(System.Nullable<decimal> fileid, string filename, string tasktype, object userState) {
            if ((this.CreateDownloadTaskOperationCompleted == null)) {
                this.CreateDownloadTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDownloadTaskOperationCompleted);
            }
            this.InvokeAsync("CreateDownloadTask", new object[] {
                        fileid,
                        filename,
                        tasktype}, this.CreateDownloadTaskOperationCompleted, userState);
        }
        
        private void OnCreateDownloadTaskOperationCompleted(object arg) {
            if ((this.CreateDownloadTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDownloadTaskCompleted(this, new CreateDownloadTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DownloadRead", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DownloadState DownloadRead(int taskID, long position) {
            object[] results = this.Invoke("DownloadRead", new object[] {
                        taskID,
                        position});
            return ((DownloadState)(results[0]));
        }
        
        /// <remarks/>
        public void DownloadReadAsync(int taskID, long position) {
            this.DownloadReadAsync(taskID, position, null);
        }
        
        /// <remarks/>
        public void DownloadReadAsync(int taskID, long position, object userState) {
            if ((this.DownloadReadOperationCompleted == null)) {
                this.DownloadReadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDownloadReadOperationCompleted);
            }
            this.InvokeAsync("DownloadRead", new object[] {
                        taskID,
                        position}, this.DownloadReadOperationCompleted, userState);
        }
        
        private void OnDownloadReadOperationCompleted(object arg) {
            if ((this.DownloadReadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DownloadReadCompleted(this, new DownloadReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVersion() {
            object[] results = this.Invoke("GetVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVersionAsync() {
            this.GetVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetVersionAsync(object userState) {
            if ((this.GetVersionOperationCompleted == null)) {
                this.GetVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVersionOperationCompleted);
            }
            this.InvokeAsync("GetVersion", new object[0], this.GetVersionOperationCompleted, userState);
        }
        
        private void OnGetVersionOperationCompleted(object arg) {
            if ((this.GetVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVersionCompleted(this, new GetVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPluginsInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PluginInfo[] GetPluginsInfo() {
            object[] results = this.Invoke("GetPluginsInfo", new object[0]);
            return ((PluginInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPluginsInfoAsync() {
            this.GetPluginsInfoAsync(null);
        }
        
        /// <remarks/>
        public void GetPluginsInfoAsync(object userState) {
            if ((this.GetPluginsInfoOperationCompleted == null)) {
                this.GetPluginsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPluginsInfoOperationCompleted);
            }
            this.InvokeAsync("GetPluginsInfo", new object[0], this.GetPluginsInfoOperationCompleted, userState);
        }
        
        private void OnGetPluginsInfoOperationCompleted(object arg) {
            if ((this.GetPluginsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPluginsInfoCompleted(this, new GetPluginsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public UpdateData[] GetUpdateData() {
            object[] results = this.Invoke("GetUpdateData", new object[0]);
            return ((UpdateData[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdateDataAsync() {
            this.GetUpdateDataAsync(null);
        }
        
        /// <remarks/>
        public void GetUpdateDataAsync(object userState) {
            if ((this.GetUpdateDataOperationCompleted == null)) {
                this.GetUpdateDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdateDataOperationCompleted);
            }
            this.InvokeAsync("GetUpdateData", new object[0], this.GetUpdateDataOperationCompleted, userState);
        }
        
        private void OnGetUpdateDataOperationCompleted(object arg) {
            if ((this.GetUpdateDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdateDataCompleted(this, new GetUpdateDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveUploadInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveUploadInfo(string sha1, string md5, long length, decimal pathid) {
            this.Invoke("SaveUploadInfo", new object[] {
                        sha1,
                        md5,
                        length,
                        pathid});
        }
        
        /// <remarks/>
        public void SaveUploadInfoAsync(string sha1, string md5, long length, decimal pathid) {
            this.SaveUploadInfoAsync(sha1, md5, length, pathid, null);
        }
        
        /// <remarks/>
        public void SaveUploadInfoAsync(string sha1, string md5, long length, decimal pathid, object userState) {
            if ((this.SaveUploadInfoOperationCompleted == null)) {
                this.SaveUploadInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveUploadInfoOperationCompleted);
            }
            this.InvokeAsync("SaveUploadInfo", new object[] {
                        sha1,
                        md5,
                        length,
                        pathid}, this.SaveUploadInfoOperationCompleted, userState);
        }
        
        private void OnSaveUploadInfoOperationCompleted(object arg) {
            if ((this.SaveUploadInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveUploadInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUploadID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal GetUploadID(string sha1, string md5, long length) {
            object[] results = this.Invoke("GetUploadID", new object[] {
                        sha1,
                        md5,
                        length});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetUploadIDAsync(string sha1, string md5, long length) {
            this.GetUploadIDAsync(sha1, md5, length, null);
        }
        
        /// <remarks/>
        public void GetUploadIDAsync(string sha1, string md5, long length, object userState) {
            if ((this.GetUploadIDOperationCompleted == null)) {
                this.GetUploadIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUploadIDOperationCompleted);
            }
            this.InvokeAsync("GetUploadID", new object[] {
                        sha1,
                        md5,
                        length}, this.GetUploadIDOperationCompleted, userState);
        }
        
        private void OnGetUploadIDOperationCompleted(object arg) {
            if ((this.GetUploadIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUploadIDCompleted(this, new GetUploadIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFileName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetFileName(decimal fileid) {
            object[] results = this.Invoke("GetFileName", new object[] {
                        fileid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetFileNameAsync(decimal fileid) {
            this.GetFileNameAsync(fileid, null);
        }
        
        /// <remarks/>
        public void GetFileNameAsync(decimal fileid, object userState) {
            if ((this.GetFileNameOperationCompleted == null)) {
                this.GetFileNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileNameOperationCompleted);
            }
            this.InvokeAsync("GetFileName", new object[] {
                        fileid}, this.GetFileNameOperationCompleted, userState);
        }
        
        private void OnGetFileNameOperationCompleted(object arg) {
            if ((this.GetFileNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileNameCompleted(this, new GetFileNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveFileUploadInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal SaveFileUploadInfo(string filename, string sha1, string md5, long length, string filepath) {
            object[] results = this.Invoke("SaveFileUploadInfo", new object[] {
                        filename,
                        sha1,
                        md5,
                        length,
                        filepath});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void SaveFileUploadInfoAsync(string filename, string sha1, string md5, long length, string filepath) {
            this.SaveFileUploadInfoAsync(filename, sha1, md5, length, filepath, null);
        }
        
        /// <remarks/>
        public void SaveFileUploadInfoAsync(string filename, string sha1, string md5, long length, string filepath, object userState) {
            if ((this.SaveFileUploadInfoOperationCompleted == null)) {
                this.SaveFileUploadInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveFileUploadInfoOperationCompleted);
            }
            this.InvokeAsync("SaveFileUploadInfo", new object[] {
                        filename,
                        sha1,
                        md5,
                        length,
                        filepath}, this.SaveFileUploadInfoOperationCompleted, userState);
        }
        
        private void OnSaveFileUploadInfoOperationCompleted(object arg) {
            if ((this.SaveFileUploadInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveFileUploadInfoCompleted(this, new SaveFileUploadInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Export_上井解释登记卡", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Export_上井解释登记卡(string process_id) {
            object[] results = this.Invoke("Export_上井解释登记卡", new object[] {
                        process_id});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void Export_上井解释登记卡Async(string process_id) {
            this.Export_上井解释登记卡Async(process_id, null);
        }
        
        /// <remarks/>
        public void Export_上井解释登记卡Async(string process_id, object userState) {
            if ((this.Export_上井解释登记卡OperationCompleted == null)) {
                this.Export_上井解释登记卡OperationCompleted = new System.Threading.SendOrPostCallback(this.OnExport_上井解释登记卡OperationCompleted);
            }
            this.InvokeAsync("Export_上井解释登记卡", new object[] {
                        process_id}, this.Export_上井解释登记卡OperationCompleted, userState);
        }
        
        private void OnExport_上井解释登记卡OperationCompleted(object arg) {
            if ((this.Export_上井解释登记卡Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Export_上井解释登记卡Completed(this, new Export_上井解释登记卡CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UploadState {
        
        private int taskIDField;
        
        private int stateField;
        
        private long positionField;
        
        private double progressField;
        
        /// <remarks/>
        public int TaskID {
            get {
                return this.taskIDField;
            }
            set {
                this.taskIDField = value;
            }
        }
        
        /// <remarks/>
        public int State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public long Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public double Progress {
            get {
                return this.progressField;
            }
            set {
                this.progressField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class UpdateData {
        
        private string filePathField;
        
        private string sHA1Field;
        
        private string mD5Field;
        
        private long lengthField;
        
        /// <remarks/>
        public string FilePath {
            get {
                return this.filePathField;
            }
            set {
                this.filePathField = value;
            }
        }
        
        /// <remarks/>
        public string SHA1 {
            get {
                return this.sHA1Field;
            }
            set {
                this.sHA1Field = value;
            }
        }
        
        /// <remarks/>
        public string MD5 {
            get {
                return this.mD5Field;
            }
            set {
                this.mD5Field = value;
            }
        }
        
        /// <remarks/>
        public long Length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PluginItemInfo {
        
        private string nameField;
        
        private System.DateTime lastWriteTimeField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastWriteTime {
            get {
                return this.lastWriteTimeField;
            }
            set {
                this.lastWriteTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PluginInfo {
        
        private string nameField;
        
        private string displayNameField;
        
        private decimal indexField;
        
        private PluginItemInfo[] itemsInfoField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        public decimal Index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        public PluginItemInfo[] ItemsInfo {
            get {
                return this.itemsInfoField;
            }
            set {
                this.itemsInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DownloadState {
        
        private int taskIDField;
        
        private int stateField;
        
        private byte[] dataField;
        
        private long lengthField;
        
        /// <remarks/>
        public int TaskID {
            get {
                return this.taskIDField;
            }
            set {
                this.taskIDField = value;
            }
        }
        
        /// <remarks/>
        public int State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
        /// <remarks/>
        public long Length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateUploadTaskCompletedEventHandler(object sender, CreateUploadTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateUploadTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateUploadTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UploadState Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UploadState)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUploadStateCompletedEventHandler(object sender, GetUploadStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUploadStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUploadStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UploadState Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UploadState)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UploadWriteCompletedEventHandler(object sender, UploadWriteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadWriteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadWriteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UploadState Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UploadState)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateDownloadTaskCompletedEventHandler(object sender, CreateDownloadTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateDownloadTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDownloadTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DownloadState Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DownloadState)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DownloadReadCompletedEventHandler(object sender, DownloadReadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DownloadReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DownloadReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DownloadState Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DownloadState)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetVersionCompletedEventHandler(object sender, GetVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPluginsInfoCompletedEventHandler(object sender, GetPluginsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPluginsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPluginsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PluginInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PluginInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUpdateDataCompletedEventHandler(object sender, GetUpdateDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdateDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdateDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpdateData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpdateData[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveUploadInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUploadIDCompletedEventHandler(object sender, GetUploadIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUploadIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUploadIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetFileNameCompletedEventHandler(object sender, GetFileNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveFileUploadInfoCompletedEventHandler(object sender, SaveFileUploadInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveFileUploadInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveFileUploadInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Export_上井解释登记卡CompletedEventHandler(object sender, Export_上井解释登记卡CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Export_上井解释登记卡CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Export_上井解释登记卡CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591